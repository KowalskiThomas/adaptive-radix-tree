%!PS-Adobe-2.0
%%Creator: dvips(k) 5.998 Copyright 2018 Radical Eye Software
%%Title: art.dvi
%%CreationDate: Tue Jul 17 16:59:59 2018
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR12 CMBX12 CMSSBX10 CMR17 CMR8 CMTT8 CMR10 CMMI12
%%+ CMTI12 CMMI8 CMSY10 CMR7
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o
%+ /var/folders/jc/fvfvw6l52wz6mj__wc7mxw5c0000gn/T//art_tmp1.ps art.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2018.07.17:1859
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A447D5FBE86D961AE4D4251149F11C4BC269E10B48E8C42DC2484EDE87
6540CB8A5EA2494148D09CC9D5014EB73C29368A3945AAA1BA4C17BF640D2A0D
414293480FD600A77D37471828C4645C5A4AC4729F4EA76FC946810B4968EB0A
719D8F3E61D2B740AE9A33E9F02982A13ED4B6ED0C6C4A93A9E9EC045D0CDADF
DC01ABAD0BD95692907C04F06F06F1BF6259C8E71099FB64B4FE263D06C5854B
070C8B864D8ACA6EBF440DE14DA34A2A548C9F1557C70A4D718F4F881707851A
6DCC39BD8791D806F5DE551CDF8612C7EE6707D554CD826CF352CA634FCFAFC7
232F32B3F0EE3D2577915BEB212005E06625FFC9F49383C9C64F51B6541F6AC6
12D2359547103898D05E52CE54B46835
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 66 /B put
dup 68 /D put
dup 75 /K put
dup 77 /M put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6DFD21EAD729CDB7B378CEDD34262B37A194EDD0BDB24AA42649375B
491DC08F6B03DFEB517B2FC125DA9373AFAA94F4E4BC09510A73E079F4ABDD8F
93529E898B13ABCDE7322323B3A2A02A0BF388E89B4F529A66FA22D38E3EE342
54475A1989BFB7A119CF95750D5A18BB4FA9CDA30DB6F1AEF8AE8448BBC999C9
FD0D74DE9A17A3153617F07CACE92977B68FB5A1CFB29FD42494D5D2B9C1ED81
2F3CCEEC1BC079E837DDBB57C7E351F9925FB96349F8D9786D8E6FF03E9C4C1E
67DB235577B68003BA14073E2702296B284F803259283005D97035874D2B9AFD
4D3F29B4B1E6EDE30DDB9C68348CC174A091791FA74520C8614D4FB1125CBD6F
B9367559D715ED057FDF6DAAC180C7FA5CCEFD0C5878A91B20D4919792C03CA9
3AFC986C34C08358A3E85F241E3F8F815FCE7C8E07C2A4258E17D65823264049
3803D47C96A2745580EDC957AC4291730A840A2BADA50A28342A2B7093A3F731
4F4F656E974389E133C53F89D5DD6407BB98B211697941A927BC72A0956FA78E
2DC624B2C253F76778698BD1510D509244AB0462BA8E80769A51F6D020E146C1
7EB6D7207653B80610F8896EBFA6A606EFA54791E78139918C010A404BAD4B0F
F3779D39D31D665C528290D1D4096CF7E65F18936508848DF4DBF77A197944E1
DE53CF9C3EF605898309C7C3D20DFBFD10DF5FA30F427ED75C7D6C23158B0D6A
1B0568B966B0989355759D355327F2DF9ADAFB6DAD382BF7E4EEF2C2FDAE4BB2
985907563769751AF1D8076E19266EBAAAAF50F33052FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37645779264257FFA0AFA05C2842C534A411593D10A778A
49A89DE2733B985650ED4AF7BA55E5268D7DC50238423D6ADE78AC5156763DCB
4ED134DD502A5A78CC4B5E9289E06D03AA72F51E926AE304CFFBCD37501A021D
364FA41B7577457D6C49DBBAE9E7843269320868F5C28ECC3F08B56E8564F185
56B5F1DBCFF100E97E36395A3CC04D886FE80B0E447A91BFAE343170BF685E75
5266C30C8CF29675741E3035EEDF2B1080F8BEA74F538D1B3775104BBE7AC429
5B00C4FD32FCDD816A2AB41856DFFF14E952660E9E16109F9CC8170475C298C7
1549E86B585CBD2B71DFAA94111B892DCA762BCE71DA37C609A831C2C5739F46
2905B1C1244304606C26777E858635C1A842070CF69B7333D58873663239C939
7C79645EE1471EB95D5ADDF0821009F5686D8E1027A7D7B9990F04DF98ADD846
8AEF74790EA23BF76211CD865F328F54DBBEF0181E9379C2A199464C4E1550F7
B96BD586A956F89B8C0E91891321A1DDDC6B39335C85E12121AC8CBABF042A6A
157BBCC127E2E2011181E9DAA9C0E01D0F11FE571BD75E0493A03EF1D6982AC5
1B003A4D5A6099CFD9D88FAC3D958013F8DE7F22E7FB13ED50BD3F26AA67B8FC
1B1350787B084ABDB846B808969D529740949C437A7DDFFD4C18A858C2ED18D0
68E2C6C21E7D2A1403C4ACB7DE2DFA80E34A90B12646B3A5FECF77538CE55BF9
9AE121F495A9135BFF73C1A531D5F9AE0D448ECAC997FB83DD9C099B73ACAAF2
F29B7AFB6D1710CB6E2D3C5E05D7A90B5BBF36845CD641E85C4F6D5103FD927F
24C43F5B4638C111C8E177C74BDACE7163B5A3F17F9B343C3728B26AAEF33C0C
45D0B3A5A116E34402872B572EEE2EA522F9BB1A6E00422F18DE2ACED3F7FEE9
D92F9BEA227BEE986A9A0E0CB842D80612F4B2EC81023BDB6E750104A594427B
CB12C25B8FB389DFADB57108933731D958B4A51C150212AB6E38EF1869883173
A8BA72A2EDE54A1BC5E7269F5317D031A400EE8C4AD035FFA966F405924BF40E
49AE3D7453C630FC3431FA13B3367DEAE12A0EBAE828FADD77BFC2ECDC1E562D
AF5666E1E7891AE8BE9BA7E7041A0D3A7329050EEE77366AA7E85C06293AC5F8
9187EA9BA0F2151440B78E04F4A9F56AF893982DDE9FF78575944C549387B22E
0B1678B5DDAFA9B3A1AA0C13922FAC5AF2BC4423F2FC4DEF76B33556D2DE13AA
3907D163368BAC278D07C063F7AA98AA8A48D6817E41918D2316D2FF5F413517
A7C8CB1F6EE6B3697BC149DC9386677B32351CC34AC367036829934FCF82EDBC
ECF6D1E6D06074CFC44696AFB2B646744E8060AE9CCB2242232FB6A2D87B85F2
1F39FA955E38D1DEF679902FF59E3B7689F3DB446DE4CDE90D2E34E378FB12D6
5ED7BBA8A26697C5929DF47A48353ABEFBB6F17E8DE96E126445E18689952CF5
6BED8B2010D10D4BCE846DD9FB0558079C48B1A39792AFD17B5251BA9CE2E4E8
7B2E2DC7A3A8F3519264B43E92840BD298702D1CD3C451A03D0AE482ECB5F721
0DA93D236B7AC46FC4FF151E2DBC5D6FABB7A8C644DE53877D699A150AE062E4
0D2CF1868A40A5ADDAA5EF984CD47F9E6CD773B7C2F70EB4DF0E9F6A7915D0CE
31A358933C39B5AC036E26E66576B7DCD3211FF9EF46F59054765816492E0027
C97D36248BC9EF074637CB8CF92024781B55AB2B4C3FD36428D5587E81D3EFAC
C0A5967E7160EE6EA3E6E8FB3190B7E1BF4C2BD3DC8A8779D3D6EB48B5EF659F
1892A8C81AFCA148704CC1313A792D4D2ABBBC5EC181E3F9AABEF35888E87E3A
F5D527C421C34BDF4907ADA234C62EAC008C58B6F5CECFAF615CA3C4D6945B39
F0D31419A56F9173254CEB315682AE10EC7BAD1ADA52AE639B1DF83B2345FDBE
FB1945AE5C9769ED80F50656159DBAA328143BD8F35779FC740967E6887D1A3A
4239DF16D6CA98017C7C118D8C67F71A4BC3C8794BD3F51F8B29BBBDB962DF14
66F27913394E9A848702B73513744A0C32785858538FB9DA14A1344589C31B59
294AFB0881DDC2CA9623872289189AC765FC2C0D76023D3A3F94CF0C7669ED9E
365EDC2D5A99F18C212ABD18821E8F2E2D6D8C6AACB40A53197ACFED3C707D57
7BD75F43C6AAB7520FD896CEAA4303C754CDB848E4CA6D14A899C877A1F71CF5
F205C8FF35460B379213179EB7E433DE090F1E6616D7452F38FAD82794DBFD01
71302C67AC0DD665632F5A582C37D5BE3AB49E28FCB40F785B2E4D7DE8D4F95E
AD4E8B3C80D7EC23224AB0B550F037841AFA42F63F0BDD342359AA3162320D34
8D42E9F7735F73308E374006D59F79995508A98A23E53D9E640BA638B2CBBF64
704B990CC0526A7A5D3965515BED2834A2B1721195B346FBA4CF72D34197A027
6CD48B656CCA8AE3ADDA32B6DF17B9DF9E87419774E6D28AD6B380F5E7E5DA95
498639970474557A69EF61780391DD1AB58C761E490F4CFC01FADD457B21BFF9
D9BF22E6C1349CAEA18F3F0C123326C75893DFE2B967A22C82AF81082563D1D5
09DC0A34D77F4811A8955BA6D5388685E676554A6B5459BF2AD135B522C7961B
E4C1542931B04E1ABDAD0F0D2C36560EFC4AFEDBDE4670AAD55B1A81C92E626F
78D80C2E602DCE9B7C1CD0EF66716366FA78685B9D5C903514B0FFA82665F90D
6065836B1BF856B975A9C6297D95783796DA102585C8F1CA576D308554C46E6E
4CDC540C67E31E5FE924B7DE05ACCD03A97DFF0FECDB0D19FB2C598B4312C4B5
141BD84BEE5785C236775890F9608ABD46FE5BA191B90489D803D7C3E57F649E
E10B69C9188D59F345241E2F205007995FA33149BC14C97EBE694806B67D4DEB
A2DCCE5E5AA7815C61FA2C9E73054D4C35C261AFF331098ACD83F3B96809B6AC
65DC0DB3DADFD42896B5971C61C6F3F369BACD4E5D07D219D04D215F37F414FE
49C841E8DFB2EA40CB4753FD3D559E5A99BC4ACADC7F3B9E8F9439071E584BAD
F5E945E02A024FEEEFDC88D3045A2F3AE426DC5634ECBDAF1A96D7723058402D
F774904DD276261B5C41721480ED2311204E577C9459ED379B128572E914A1B2
7AB2B26008E8854595ECE15C7B5DB7CE5705741943E5D21497F5C712F2062E94
761BDB3A285A0779436FFA1B4440F3EC95DEC93430BBF02EAC4E98CA4DFD0BEC
4194A4F4EC9B9269F3D216FE00397BC4F89BC83B7E66B5A87C5E297B3AEFCCC5
496C0854DB2591AC4FE336A1DFE3FC9377A8830489747384A2A591D03B81667F
178D9AA00FD6180A2EFD947AF06DFFE5BF334D80F833C3E0CABA35E20FB7823C
80620C4E85B70E5EDFA4A2666D318A6B7372E9B431C277E6A925F76BCB78DA42
6B173E3C68DA0883C3439D9A7C034E32728E835BFA130B9885E57A9C412AEE88
C9B510265AF7F64EDC632D5EE7BF1F3F479FCFA4B79D6C23C0B3FAC081F6E38E
3347A38BFFE313AF3806D8E39C4AC68DCF1A1F45B161D91EC9C37EAC9932801D
7C3A7C76B7F2DE2DC495473821DDA51CABF623299E2E5E2EFFCB7DEE6B29324E
686A2A6945E173FFAEACB88F4A541FC7E064E77ED8400D55EFED7DBD1424E101
B702D14CDD81C1DB5D81E0D57F64F6C5B3BFB9119E62D769CD36D19A151CA7A5
86BF040DAB4ACFC0BF252A944039F75DF8CDDF3AC0AA72F3776F3C8D9CB115A2
681BE0218448DF562272366F84D3E0931A7EFC694EBF1060AA4FBDC577D49E03
C0B8B0C0CF5B586FA4BBE81A354DA880BB605C740598ABB6C371361835D4BE82
1884145CBE2A49783467A325DB61FA8FCB1EFBA667BB7D02271871567749CC87
6B372C93595E5A9B76AE138BCBECEF4D5A690D3BFE13E5ECA414505B7AD9CD29
FE0145670CE494AB9C670CEF942524FCB8AB95ED02F3065EF1807682008A2777
6C546D51C6E78A7BD0A2FF352745B926CEF109B195ADFF8ABC728108D20BD300
AF67CE074EE1BE105A929EE3C519842FEE0285213B68BBF2E8909B40F9CDD37D
4A6860325D9409B264F39F7B4E08CB19C6552DCCF7A5E8A9C1D5460FE7E2C540
C0C5951C8BD0F5D73992BCF14B1114070725B44F01A85ABEFA947425CB4728E8
038C5F2F75782B599AD5116AABADA0607B4FD9C45FF71876FA23B02AABDDF17F
85594E683653F34593A2B26E708C55B026798DE6E3764A5734B2073DDF9A4141
72B9A91F26388CFD67C3FD8A30081004F7B939195D0819D35C920E7694A406D7
1711016686B79E67AFE5A10274D96F698D54F9393C369EA27F21E5512BAD68D7
A5407E0BA2636A2D5D8CD5069AA35506DB76E28E879DBA2DD983F1A6A5DBCFA3
BF86F155F406EBD68FB647B45111888D03A8F668B30DA2840D6FFA4E3241653F
22DB8C4FFE902399DBDB2C3D8EDCA15E1A954C25FCC1EC00A86413B5FEEB8A0B
2EB071EE10247C114C515BD4FF7CC61CEC395F68BD9331B06DDCD60A6D0D7C46
D54C5144409B54D2094F58114F256423939535691BB0FF6E195556C1CBDFA3FB
EB094D8565C58DFFC956FF06581F56EA0246914D3E20971D38F6E9CA63724518
2546749D88433182434B8CD0FCE50194BFDF6057A64656D1DFB476D0268F1189
EF9588C0AE0A38F2862655E9571E799E3FB4095EA68AF0CC7DFDCBDDC192417F
66B684185F504E3AA2640E81EEC8C3B7FD8C92119F0349CF2C243EB8B05ED437
3CD871DAC94455F184890D3CEB0447231E681977F73F21EC6F241BCE4D08478F
F6C4F52685F6340EC268859B4ACECD7CC61A09A455849FA1D991A2C7CFF18E3A
4B1E88945E7791EE6C38D2EDF965E0984184B5155CD190F6C809B0B0AFA5E1BE
8F14A25BED2CCDEA77D11B0E3653EAE3CDFB7A0D33E9BF4FCBF28B3A5975ED47
FC5AAB1DFB191D78CB32F249B7816F7A0909E9D52F11051D5D3CE10F1C8357BC
80A0B66FFC97E96B234F3FAE0294AA64DB676E208CCF47EEEA358B0BF48551E4
4AC62FE6FB3708C00A4BDE338793921CF9D4E614B45C1B951837E543103E7E16
2EFCA051585C76E1F46884EABF1B126527CA6BE7E2FBC21E3DF83946897C6EE7
90498D76195415AC829D7C7CD5F6F6D4E91FE2E4CF293BB10327606EC167D35E
03718DF207B498B64535627B0D30DDB0B9CEDE9DDD1C783607F0935F8F9D24A6
73911C9DC43100163CF83720516625FF1C411B0EBAA45035267F77A78D6A5712
7B3C423D9265047E70DACBBFE88C466E8E719080387FF5FAF46F62B97D13BDDC
9E2FEACE4FD4B0C09739475C25B3D7739C3FD6220E61BBF2D57DDFD02C215D68
1B2883F9295D3CB7DD419E485E2FE63E4E2D4E89D02ABE87A91B4A997F88C4ED
753DAB6F6A20B0D6461643AE99F4F73962CF5FCE09B217474FC08E2707582EA9
A0D9684BA1E6A86EDD674A9B28EAC4B58A4F76F02D965A7FCF9341DF6A80B2C3
E223BEC1BA48065AFDD55B036800A98B53E2E8FED28B7DC3BCB2F78C64F66B69
6853A49597EFDCE4966A2E46584E5339B1CB901218F55BD0A27DAC023D226A16
8A33FA3FF38038A5C9F12FC7F06CDBCB509205B295F76091851DEFC182C25920
A2567AC12450D5966E6A3425C11C644CA07459BCDC3C31DABF5371E63C8AAA5A
3B1530C30E1288EBFBE55612197248BAC2DDBFC11ABF6BD8F9354185509F5B1C
4730C8A4F92E7319006AF3A5AB258BDD82207B00DC96C6439F93D48BE7ADC94C
BF589B54CEC88043F041A9666531CE6F8DD4F0BDD82EA3E14220D0EA87A76E90
1A4BB92CED36B29C63188C998179CCDF2EC87DF2EDE29E0D39163575B10880E4
6E17E9AEE1B42DF700BCB4A602993C46DFACED78CE5AF2F731C51C84516B9F29
2ADF54BA1990E75F5CDD109CDE5F11E51B9E559FB25F45AB6330E8AD1CF3A271
A769908CE9DF5330CBA93F5558CE38C7CD94CEFB77BFB6EAD7952AF18BCF0026
B523F36295EC5D36FCFF092E17D58991A5A22BBDF602BF04986633C420A0BBC9
B9973015904BCD19460A2FE8C46852FFFC312602C4FDFEC83C47168665599D33
EC8E4637D84670C7BDEF7DF2DA4D4576CCB6716F48199083DBB197BFE803D45C
8FF941C4C6DF971C9EC64BCD651448025C7B3177A58E73BD059C20EF90F5F6C0
3A23AE15E89FEFB63372B1A18F6D615C5CF7EF57D5316A990C1C0556C825135F
D8877E8D00B090206D8B50AFA67F165A6F1D8FD09CDAE83918F64B113ED0C086
5D1F2083A6756D3B8AA0EB8E498DA9F079E181909CDED960E79E8C56D7FA2D13
3C3FAA81137D09CE94A6CF3BCDA790E9A2745EF07173DD4F1E5538079D2F0B5F
07934DB50394F8A580A7D954C4D52C012C3C24D96327F8E562690946E34B6527
7EBEF06DC245C6C20D4B39F038FAE4A549B0F1026840EFF062265EC5C6326021
A492A39E1189EC6A2C9D06A630D3F8FED381BDF5B658C149B9108622BF81E97C
692F99F60DBBDA37242FD49A0F8924F02DD98799718CDE068FDFBBA173501413
34E69FA69FAF874956390008431901EFEF57BB6DB563BFDF57B5A3D5DB44DB94
8C69795DA207BD425145459D30BD98ED5803917CBED7864FAB2E8A1E3B8C70FB
C5D462FBEF72D93196D7FD293024AA79B15A52D4F186D4EDB8F1C6C5B71C7B2A
9627102BE25DE846AA0C6A68F767DF0A8D2EDB0527A8168248D63837F887A41E
070FD15F82D95D320A3487756F410A4A43D440F71345C917C55DBB47DCA3F5E4
FD671C9FEF9EC71FBE8E9E458D0AE4312347F885460B76B1AB16ECDB60B5AA8F
A953DAE878A52BF10D17ECBF95ECC7BF89C80160A08467BE8EE02B1A7FA423FE
AB5EE9903B64C0EA4035D6720DAC6106F4260DFE8F3D25D159FDF94775E54193
DB92B9BCFFB68F25B5373AD8BF7347A55A43D23F2D03D68A53AACEF413A3CF24
E39E169A55DE345AF7A0715E21EBDC8153BB0CFDF315D3CBAF04ED03A75E5F8C
A59C4DDD80E1AE68A4BB030246A54A26A96B0C8E6C0E20A028225B245950B2E0
D68A0634280F150D4FFCE57D910498284D1B546748D5634239D71497F27C652E
37022652577D33F2E631F258DFE709C96F8842E3DA53195466D5CC57608147C6
50BC1E6FC80C0D0323167F36D6FD0BD88F319D81D0893A31E41E4CFAA2C75B3E
E4A8C40D064A99884B13B5DCD506A0EFC47B1BC98EBE3E4D2C22A5FDB2BDA345
DE05E44B7DBEBB8C6C7EF8A1415F53D1FC7CE0F447A8E45B66E4025A02697CFF
5F0D4801E0DEED622817AD6863482EC5F42B4ED44A61BE3697C4289AC5D27BBC
2E9ADC6E51CFAC1BFAF6A98910357A3E7316E8DD723E28A4E346547C9B492CF6
16A74A50EF41D814E5362EFED3C7CB4B78B8E7392581F12995FAA6B5F3629417
ED53C473E4197B3E8319A1A2DFF2D140F7180E037148A285BE64821B1E569720
EA3F3A54F5FE6AAE15A3070D00F57153283EA5581EC9653FCC8247BADB823F31
A75A5BD38E859A33CB8E24E13632EB241CF3976C37FDA4759879235EAA38B903
F60AA6EA931CF493D6FDB2A49C2A9C9E7F551B89136BE66BA57F5D5A9C73E5A6
F9D586AE230BEACFDF9C434EBE068EA7EA68D80F18D8354E4A59B4F75AEB201D
CC9BCDDC43B9E360CBCB38C7EF5C5C2BCEDAEC22306A809B0D557E63556645C3
D954A668EAE3B7576A2BB6598794E64BB2334250A9AFF7C77A2BBE5F17A2EAA4
9484966108A62EBCA263E664DBF2861B98CF4915D8398E00389E7E14CE8498F6
02E85B43529FA7F19415C12CF5C1803EE36A473D31D101FC1460742B24192775
2E11A45F761F38D0EC4F6D057AD30B5D2BC83C9BC9BF69476CC386928AD0AAEA
A3FD7600696818D3D3CDD4BE7B7082A23607E9562325C3A5C0576A00C4A7A5C4
09EAC9E143C9C8A5D5F57ED79BBE61CD3C82987B4E8BD154259A691F9F8F3716
5D5B9B5AF1456A42FF54F608420219AD434C209F76BF76407ED766A8EF80DF28
E3E81682D2ADE74B171446CC854F634E89D7307C50E52864B13A9066E1C85D99
55EA273A90F3D56B9D437A6E7E594667200E7BCD6FFD9B056988BF0660DD7D22
28EA9053C5F3EFB0EA97F026960D5C91E793F2FB60B503D67716B85C7D15A537
68DD5EB8BB6F5D2D46F4042C7168445B748B1E8B923D6A79A610A1096C56779C
A7CA54F2AC1645AB2681D35A3632866F7C5758043051CB8F7860D8072B0B51ED
1BFDA1D9ABAF6F95789016EF87815DB6D9696587FC49A41F6E806DB337AC3B0D
6046DC311082B4379A72F2589176AA9905DC7EFEBF573BB7B26D1C9E796C4623
82E4EA8B8C8874640C2D985513BB978C3A89816781EA172D0BA6FCCF6FB62D7D
F6F5D0128E51E11E876917EF04AC02AC644C89E48A0699BF48F73B89D6DA655A
2CA2B346262C3E4A40F9BB13EC71D09007CDD6CE3D69513127DBDDFB19E376D8
AABED62B33784C9F061D0B1ABB7A9E80A25BD373CC3EB3EB233374A23FF031A6
50A2BEEF46849FC1FD5578229B73304F9A5C8286AC955DF697DAB46014314201
F9ADB889A6FCC552FFC719090270563ACAE9FE88E99C21183DF04031F80B3D80
5136F57D3C4F30DB67C8BB6A35AB100E361C30BF6959099D40085F3F3F895E7A
846AF1EEA6D1E60751C1767CC10231670014B3FA054DC19F9101AE3114CC83B1
B2DA90C290DC5EADCD4AA6772FD9E49D13C0B729ABA61F3A5D742B4B8B085829
119328848E5A30F433D4A6C539B7D6BA50DC3BF42E6782372196E52725D2606A
35FC9C48496FC0FEBF8F9FADC9ED13952D0AE05C8248DDA99754519B03CD84C3
4FD7226065E9FC1D32B6BE0EABB8C925C6BB27D91F808E951A40A957E36FDBCA
7B154E10BE408CB89C7E0C2F6EF1E7B4CE9AEE2682A7C5AE5A5CA384838A1CAC
8F014CB9730537256806F4995AC321A5D042F427D89424E1291446A7AD2893D2
3AE29DC6D9F0F7022C4E8DFBF14279F0796F299D8A21EB2929289EC5963B4B22
2BE04934CD2E382413FD271FF16B62F30F0D2A7CFEE5B3EB9840B1DDD98B39D5
684795251C06F3614A3E46AAE80F106A0B88B6BD9782028667EEC10FF0E3BD91
6E8A3C97958F430DB5C92D7B51177987D810073690C3474AC3F5393CFF6DE8FC
BE86C0B9878E27BCBBD611AF936B6C271AB8B275A4EA1E419CF6CC4F6357149D
D545B82762B35803146F637FCA97AA604417394D057B904CA0E43336F33ACAB2
604E6BAAF0100B10655F4B85D6C9B77C89D19CC01D0048CE3E92CD98E55ECD2C
D75FB4C12B0E1A1CC406503D5396D4F76D280FD8041F98CFEE99ECBF8E6C6001
97990DD90B352580B86E8B8E6F74CB3A285F5B596719ACB7A98F292A14A1BAEB
0F04782F4FC76471B45AE4A7E803815012D841A338ACF6CDAF76C896BF1BAD49
D3EE9725AD33CECA6BDB534B495991A7DD70F1BA2D218C442FFDEA1D446FC6C5
87D72D19D1A0CF547D43724137F99456DCDEE6F046C925C691FE2E29B19A3B19
6DAA1B19D7EA48B55B03D4FDBED6DE52882B9F009D6755E54366B5D9DC0725FD
7FE8A00EE108D8064CB688AF2CA235C78D66093D521E5E255F7A8C1D6D5DFA49
F3EED073F48ADB24DD801D91BE9FC76842CCF0F19E708A3640BA56D6C3BF0E5F
6893E7A2EA94AAA043317A26A2858C45E97056D1129D814F7EB8D7F9778DDCAC
A991EF4DDEB85A7CE85C43E0FC30008F8E34E4F97D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /ceilingleft put
dup 101 /ceilingright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D45C9CA8E81D2328E1C165521D915F3D99FA2ED0
3C476448E7036D9DBF7507395F6AB60721E34DBBD887DC10D6071B84DCE171D8
D247A2330992171BBC737B100A6B8A4DEA19D9B547558FDCAE09AE2E38D8B083
CD8F6530B8A2F692D6AA91BA2A9A957F0A9B94E0BEF9D47D8A584F86F2527771
210A6B286FF1F46F79247F049E82F0509082DC5510F8DA506B20734AE3ED066C
3CFAAAE7F4D8F5C8B8EAEE980B05E57900EC2A6CFB2AD8A0AD5425835E67FB53
169514CEF2A4AECEC3FA18F84C8562ED00EE64BCC487CB0E08FCDAE6CB202AE6
DC7F1F21333D1FCC4A155328EEEB472E4A80DF0029DA2F99E3493A3E00D02A04
B91B98E9C1B4B0198DD05859D5ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 107 /k put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D5930759026189A89A9
B624BC5B352DAD55CFCB8BE6CF6F215CCF778E33BBE1B009AF1164AEF12E6291
751E80E442E356E945B5D33B55839F7454241DC67FB9AA3B097B5C176978CC89
4397498585D199DBEA0A2CEE13E2490E45C53C9D2ACAD6515F632C6D95C55B2D
D7CB352B66BEEEFF9AEF9892A2BB73AD95B533197D47A0E58D60313DC63591EA
C30D24398CD5F7C18D150F3F8BBC209D49A0783B8A094674AA31B6AB44A99BA6
A40619BE6692C0B98443DE78A961D7E0077BE30091D4013484AC6E286023E4D1
5B638E7AACC2EB1CE7C3DE809C7E7E826CECECD3D93DC81AFD4AE3D046A71AD3
9AA5B32C1368D52819290F64989B0AF5F84B6ABDB520F02D068D3EF39A23EE51
D07400D9FA7145C21D5AD711A8670EE4CD58FA2C1E447665A2785E3D10E4C7FC
FFE32079CF61D642A96E0ADD75EDB69C748D24435A96E845345AED22847F8559
6007D41FFC677D1F3FAA5A9524BFAB9B0C667F397F89C85D0E55B3C71D1F331F
DE79BB564A027DA6474C1C159BDD4469366B43ECF69FC9FCA9296D22FC9675BB
05429460E24D2F6D5212F82AA6E10DD7DE98540E65CBD3B78D96F3D5FE13134D
B46FFC1655BA627FC49D0F7EB7D2CAFDA4C5EA31B6EBC562C13EA01371C89682
0C85B20CA450CA9AACF82FB053F1038D830BFDD8C4C1759DA2CFF19CE617C9CA
E3FF5407F56E7EF9BF4D930A317AFE19C9C3ED83C76D62EB5F68CB40138ADF48
A897344995E3024023C01DEAE98CB633E5338D3A78116A2982CE546FCAC1720B
73B62A251222FA7981B45319245F435D00A07C527FFBE33BBE69CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 65 /A put
dup 78 /N put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09654
0F72A7AA528BB009E0FC966D03BF5EC2AB2F109FB09BABE1DE6A9F210B590563
EA94F930201F1676F3D23805CB9620828E3A3B42E9FC4459744013528BFB0E0C
F46A06EA698545C376603E34B998965C47F537F260EB79FA98C230E7ED5D4E50
9039E8A40DA24A30CB183C5CDCF006E69D4F02BE5C215D48178A2457F9D730EE
6938E1BA8AA780B544FD555E35E0E849F7EAB85D41FC56BBAF1D5853A06437EB
67132D3877B5E9635D9C8B937E62FEB6CA192C646683CCC08416EE45979BF03C
D296EC889928EBF929F18E7D87CFEA5DDAC81A713A916CE2C68BAC52E3FCDD84
C5CE9D6EA820B0C8FE22CC936FA257868937087D3757111505136B943F23A33A
02278755DDC57856C6050101010C50D7E8D57BCA527AF6CC9D9C298FF6890AFC
8C5AC2603935B1E64B0F30803A3D6BE6DD264AE82D37FA0B8272778BE7799E13
E0CE4D6CCF82AA2D5759B1C95AAE350887C9AF2687841118F51B8D6C5F4496FD
CEA4163247A6D40933074D04EB26A5686E0895E12533DA76DFB6E99139D7F5C4
DD6243351EA7064AC470E23D09DF70DEE0E41D20AAC0EA97E27A66640C50646C
8337AF8C5177E25A1F0294D62E26C0A967DDFBD2FC7F8FCE8F7B82CBD554307D
305C942BD55C8994976832D8345EEC75A0FE1D9240E1738C21F9CAB09F4EC7DB
BDFD2B7BF4AC189AD3160EE06D3F98B7C767D7D6063025F98EFFEA1827597C87
AD240013869A42814EE058F09AC0F8B49EBD040F445E9979B01ADF2F3B78492E
729ACE417E2B2C242464691C3266B31D568CCBD67C1B6018E97C1FD210D54F2F
4C26847C715C00C8932F6DDC20B2134310A92441152A34BCD1470951DE8C0D13
A64633FDEE5CA86CE5C4B3F8A0B5EC5157EE8D61480B23E677ABD01693E4D737
33BE674D2D7CC947C4C14AB205D49721714CE6C1464CFE02CD3B417E2D49D3A8
A0E8F4CD9295F4D8AA77D7629C5087E6E464BBE87D9FC52AF94F2294DB7877D5
8BE90290EF953F96A833E29CF64BD38B1C15CE06D2452652038D9068182B269A
9EF9C2FED954BFE41D6377CFFC482CC43152DE93D267D84DC6E2069C24CEF797
B06CFE3D1D5FF811A4C6C41473C176D3360BC95D5E3B3B1493C02FFC403D08CD
823BB198E5CB08661BAD47C9D917CC430C501D7FE1B5F46D71C4E02721D4FDB1
6182717C14C87ABBA882E1607BFD6D581D90FBF176332D6E1667F15E09026C3B
A4EF5FB09730AEEAAE4255F09EF338CA778AB01211B3397E6871B8E0D70204E7
DCAA9C38295DE8902BCBBF6E99C6F83BD9155B42AC5A763C4BBBA9877F4B5B60
537F40A8648E616D92DD2672BB63BDCDAB0677AA28A421790F964666B6ED0FEA
26FCEAC2A5C1A41ABF5F5B63A88E3B7BBC7C3D5B9691D9126682CACB05D41873
C10025FAE390A1CA211E4FD68D8829F6B452FA6DBE9EF23CBD507627DA6429CA
945C51C7A0A275DB22027F290813FA3486DFF8A9465E18285A813A8F7A817770
9BB333746D382D4144EC421BF779AB3BFCDE336CB8A39F4319B865ED1D62D324
7BACA321CB959515B0903F59366F84FD6D0AE244752064ED7423015074781B74
E66F04FD96532E1AED80D79B8FC4FC067E07061ACA7C34793C792E17115B11D5
DD12EC61A9DA9658074AAA3096097573E481E491A1EF1CE296E9A577E3E434E9
231ADFA66F7A232FF94F096D710B5374D86A11806FC8FCE1CB2B6CD40ED75DA2
53C9FB93E2D27097B091DC0C69436CD3E369A1C22869ABF2BA1C2290FAE3217D
3963D20CD89327E18CB644840A8A7C7B3240FCAFEA923124909ADAE19DF960CE
11F2AEA5221F04ECB56FAD4BAD0AC739693BA9C845FCED5A04D7199BD8B44233
BB1CFD11B344108EFD6B4574A38866492C2359B7EACD09BE66375FB5B67FBA51
1329EA691D9D46EF8E8AB9512096D9A8B0113ECB532AC74DC7CE3D36A1D1D2B7
91EF1AD1C82A9D51F49587676FEF64C9F265810E941C06ADF1CBB254FBCB62F9
0A0A80DAF4A9AD44CA28D8AAB7BA8AB5F9885D5AE6E02051D9CE7A3BC612BE5A
4AD5BA87B4C9822911FD336E707B0C6B961E7C04FC0E23AF726C4ACAB2EB520C
D443F9E1983E2A8F89E7676F0737D2FD78696C9EE602B77DA0AE899BD829DE8B
DE3B63B77F5D86FC23DFFEFF0B4B5CAAC89AFDFC45758F58803A84C0EA98CDC2
F2F63E8547D3A8E869BEAA5B393556659F1D0C5AE7B931734807595C06B03B4E
68852CB620B7ABE5925DB8005A60E114134C072C310B43A5D9EE288054C9FB7B
4683022A4E8DB46FB2E53E19EA3F583A0325FDEEB4632B2A5604DBC43CEB57A3
25D70BB4349B69D9A23C7457F209B733CD055CD6BA23748B87C065DE96754661
A5C650F704A63A5D4F842D18CB8911459E8B4DBED29102191776D8654B339C31
BDB48F0FB2DA0A4C7122C136AC58FA59A8CA60411CC615B977763A0A6D47A1E9
910AF87D2752475F1EB300F9C5963E68408546B6F4E27B4BC01C186B0697AF90
8C129582B021223A7C05C817CE93E79511249FBF60BB28D89A4D465AF15A32ED
DDE8DAF12CA8CEDA3D290B483169669E0B98AF97676B56CE268030B7E431AAE8
9B0E77E7F8251AAA13BE79CDF866CFA0270A4AE0A2B18F88BC747DC251D0F8D0
B760C2CB6C171FA2461BB1EBA0F22B3D78F317FF627A806CF702955ED1B22DF5
4A285A762D5CA7B6B56AAF7A03985FA5C3DB9CBDCCED36A065E2C35F8D0ECC81
1FFD05E08E11CE1A701FACD191A891D0D1A6BE50C902D13C498DDD7FF4323A33
835A553FB8C89E66DDE82E1BBBFCE3A61FF9B1043532DDFC68105B88FC6F9BA1
45CD1809C788CE555C38BA4131973F0B244C5C825136D164F82A293D3503862E
EE4DDA32FED9A5203E00A64B0F9A5AF72B0381237F1CB4CCB078F47DB5FD31D6
6CE7B8064E1DB19FF9804E120DF9B7D3B7D38A0AAB344DFEF84BBFEB96F1ACEE
5C2DAA1788C4631DA1BD7C6264947551F6A4F51A45AD2228FC9F2709A7CA336D
B308329198809417CD4A2E25F737D807E2CB59BD62EDA530F58AACE146E9C3E3
4AE9C0C19F1F79F7CD77B00B6DF402393639F0C88D20D20B96D393975E1948B0
5F999D0746215E03C04E61EDA6024C5E3DD670AFC3F892CB783806B2A18A7291
DD9EA8D5633BA210B5799987E40B727F86A456ED369C6BEBFD3244065513EF77
4CE2689DC7B8EC4D80DA07130BF6F83C06989BEF9460D7BEF6137A9A407AD320
1984FDE32AEBF03AC95AC503E2CC077F528C145DB0108232AD3F26F27B9FFBC7
FD7BA0959276EA8DAAD7671369FF1EDB3F952EEAA3B42BAAFA84729D8EC60B75
8B38D20829A6197D193D9D946A2B0E860001400A49FE3B792ACA6C9DCDAB5F4F
3D8D257BA8666DDE968EE87CD44C100DE9FE24DAEFC0FC111FC2B551AF7A21EC
0EBB02F8231280B49817C16272E28214EDE533FCA88FE777EA77018E42AD9F14
60E6247C9A90A333390152C3CA37D2C3FC5676464BB70744087121F94780CCCE
068FB96DC3D52ADA364F9B0F9BF55F56AE736879BDBA06A6AB24E628417CDC18
1B6624FB4D03BFC97A7B936A7B2DE3EEB1D9AE24E4740609104E5A57E96B832C
5DA5C283CA1F4883BD68D4DDFBDC3B988971E778CC1A0172CA7392E4EA5BEC2A
A88721A121380E59C5FE0AD717304E5A9BB8DC9BB066B5311BDB4C6F7C45BBD9
C1905B43D412180236140E254F2E6123A5BDE1E95FC8056DD67F8135A8992A42
7197782D0369013ABBFC86B9EBD515B3B560B833184D18144B22AF6D9C5163BD
6AB99DDBB313420F47DFDF318E4B87BFD281246FE8FA8A966C82E2B973CD11AB
065A2C3A8113A266DD1FA27DB9373FE72026D84BC8E40F084382D7CEF5EBF109
A205AA4CC6428C02BB066B450BF016B004D44F72731C70CED548514BEA3A25C5
3B7EB5AB29EAE9307147B9234FDAEBF076CDCB142507079897E4F2B878CE4675
79F32A65161C428A175A95E944D0483C8F51F851DA9F9E7DD884BA70942EA803
9936500172252E1502C63A4AF7C0AB4C362A9555AB595479501EEEE0E8406A13
7F8BCBC008B6204BDB1F1EB8ABF26A126C2D370464B4A44F8FA2DBFF681B06FE
23F038EEB1ECEEE2A8E10F0FB974D375D245A75BE052A490FE135AB2764FBF58
1681C5A1472B3453A43451F6AB7CB7F7E107132DABFF262B0FFDF900AE9A54A4
8E189BACBB8E91FB15F8B6486DED7FFA179F1B9C867398718464976CB4D2171F
70EE1819B74FBD8C2CB68AF9FBE7453840253D6F8D9C4D8BB1F4534A4331B2C5
01019F9AA2AE8FD15ED956AD2FE9E8082C0A74419185BDBDD694E87D502AE4B0
9DC640115E508539E0F1477214452382BFF3D016D6FCA4FA251047240CE9D447
61B8AB8FCF194F53CEAC3BDF2E9AC147C2D5167BF7AA262CA5C7D99CDB9DDA55
4E2C5D9D68C3B266DB9FFB36A3960F63B44E4ECFA94D46E25F73CFF3CA581E01
800E1822A155DB4BB08B9EE94408FB87B9560B979FC49A5ED108D613CFD18500
EE3F337584BA1FFD58DAEBCB37B6AE3FEEB066B6F203A742945C51CC512E48EB
D42CF8445619E3E8120A3876D6F3084EAD7973E46FFE0BC2AC2B7ED0EBD8920D
F1C69010BF2E94856EA014AB711720263A4318DA46BAD98FFB1D17B255451DE2
B959923273FB6BEBDDB0E45ABCB7A21E5425599AB9F712436CBB3F3B625EC116
7969BCDDEB277A031C403D9CF51A452BC75A969778B1DCCE5FDFB580E37D26CC
C9456B8D6CA5DE04D36032CE34E14C30239AB474BA9044DD582F401966B6F7DD
39C91394445BF2B1C6F7B3AC3E56A43227621152E6521500F90211529C8F589B
1F6347C263CAFAF13CAEC66FC923ED28020237711EB6324CE6DE7A032402EBCD
54E61E4CAF9B3A2EB67D6008000D6D49DA9298BC7B7B136EB257CBDDF7FDF5DC
34C717520C58AD8EE472B30B95591B09A7D55AE45ED672FF5A5AF6B187AF6777
EC9F5373EE435865D0C21B3223D89F6E1EBE76997CC1A931552706D13C3CC148
8E0205832180C924B672CB143BC61095BCB4530CC58B2961E2FE2C112FEB02D7
45F048468135A39CA5D861995BF6F8E19188DD0EFFE5E98FF0F4525577CC6257
25E7F7ACB862E30ADFAD1225661A1A8BA7530DB0C92401E3E8294C116BF243BC
23AD4A19230A579486BEFFE69AE627A4AA7BD23CF951FE2051E4B67D92A603F7
BBE3BC6FF01237476AF4B7A2C21DB522DBBD5516EA8FC8EADBF96255E9DC2DF8
C6215B852EC20B864FC26BAB519C8164F0B1C509075387687DC6C224075BB2BE
25459C89F36834C2F78DBB343E1C23C0400F1A8546035CE6E01E9F31CAD83202
4E54620638DAAEAFDCF995B842A66701ABE618E68F2B60C4FF069A130E49C18C
F4CF4CCF784AF8E9184D47AF2E45AFCD80EABDE92E64FBB9C8B486854D5BA53E
A5B0E80A1CA96A704A6A9B75CDB737CB1229F795DF8F9C8F3230355156240E4C
C7E1CFD819AF02203C2E041D087C43D2D8C8901CB679CA71F3F3F2E172B27522
9FD8A5ACDCCB5EB4F5474B5913D3553EFCC43AD0A04F3847D76AF8B22AD49737
8CA0B7EF4C73D3941101D9B1FC90429D69C61F3EBE7A822F8C4731F6F282C40E
3B981E78704292C5623C2EA3CB6717076D50CE0D4C367E3807EB023AB3287006
ECA081E9ED30CDFA475CDEB588B8FFAB4C3FA85A9E7FC24079B022E56EBF70FB
1261772220B84BBCDBA1E672DD1096784E11FB2B966B3BAB57277B90882ACF32
9FF9FD5CDAF89C8D617C0A6FFB8AE6455A54CAC5F97A55DC5F20DD3BD5E0DF21
3066C20BF5ABAA67AD7B70F4DEB8FDCC593506BE367C019363ADD88A3F3805E2
D2269FB6ECBDBE3D0506E59BCE40E07FE010CC0A7A3AA9EC036066C0019352E2
00977FBAC946CB7F2096317FF3111EF6AC88C23241419AAFBB8257904B7C139A
F8D9154195BAA1BC21FDF1D08A920D3261736297B9CD4DA002773232C35C378E
53C3B7A327DF8D1C8630C1CD0D34EB536DB17A245D02111330DEC4F36D3B42FD
1CF4D44E3FFCB0069979945A4AE2D2A885600FA7E7B1FA10671B0CE3EA0E3DDE
B1F3710D2B3BBE0DE73D007B79B46B2C96173DDC6001E21619E9A36DE596CC6C
875556BC4CEC20179C49E8C68D2DC1CBC4AB2AC62337F8DD7F30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 79 /O put
dup 100 /d put
dup 107 /k put
dup 110 /n put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709013933E3B325C8685C61
048660562D70CC0055BA8777786CCD161049903DF61A5AF6DBFB02668AC5DE57
3D52C3FA13DBD74DE4AB848DDC5DF11DA16E7AE728A1B19B8832EFAAAD7263D8
DD78BB34C58DC2439747CC82B1937B920E8500DEF5293C01896B10A6DA71A168
4F6DE6DDB7E2910A0D9226ABDCDA689F20A867450D5C57181D23CE3779136295
0FB6833E98F45B76D98F7F115A67578C90CE30A316B3A041849901838D0A12D4
7F8BCF5CC5768C0AB33CE1B23EBD4E3C802D8BEA7EEBE241E7C7DA1E4135D3DB
AB5C51E5FFC0F527C5B59A59FE5C3360A0C3CD978DEC483D4DCDDD173894CAB7
0B73187E5BB9C5480BFC02FC45F2B1240C294133F7627AEFC03823146D0735CA
D73632F8EE970DC0EBA43D2C700A1D5DFBD179A2BF9BA6CB5818D72CDD90E52D
FACB64955479363CDDBF4C141FCFE9A9A2D73D1AD3D3FB7699F4A04B5B078DBE
76729D694396683D4125C68AB8F0DEBA88B876C71B13A737A00B245A1571E9CB
B63FB2EBF35B5BA2F0E744ACCF23EAB3C9E0437A2F11AADC43B5D23573EDF779
8A4397FC6B28F7DFB72F5895A6BBE071E3442C0A00DD938476920CF67869A9DD
F5A29AA5030369D13477E95EAA9BBC038E0530B2AD398A9B03C8BC5AC4B184E1
3F3ABA4A18487B10878E9D8009F85672B756BA24DB51A2A131B516923D5CC746
A429FC5B2E565CFA592C54A42801A142883EBF015FA81AB52E34F91345BEBA6A
CB555778CC267DEA91A4C2179322E46D3E61F8C996A63AA3D616B447B0D88B53
37ADF6E4CC84EEA24F77BB33582B268EED29D4C4A28C745F663D97F370141456
A5DA72442BDC46D862F6CE1D7408EA2A22AA7C602BE0B0A43D9D5C6F50C479A8
1587361F7897A2D28A562A935226FF823955C3AEC37FCFC416D861B0E313E938
7668640FB271BA91799E6A004D436C27CC46EEF80FA1A05AB90D788643BDAD10
366C6192D003985BAB6E49DA96211DF7CA971E34661E17C5DD710E6DE3B94D85
3362CCB1538C5D0664BDB72A57757B2CBFC6F5D915C260859C43D16849F29A1E
7CF1B65135F07EAF54D944AAB77B61B0A7EB47733AFD0DC1CF828D0993C56493
FBD38744296B82E13A0B4CAE6647582C86E8E8FE7C4E1BCF5B686990B82B93E9
59A12F6B06B8223991B3B026AB632EF0B411BDA57E4F424403B407AAF88101D7
E9CC89CBAD30CF8EBFCF71D9D041AFE0416F4F1A755E97F12D702635C9BDD5F0
AAB6C7A4A26946E9BD79B50A9825D71AEB119619BA020984777DC32533D1B154
381BA3ACDDB8B2869FC4389985CB4F5A32039039898DB7A004ABD34CB97A7223
54723863AB8B32C254BECCF570BB1321CA084C24D8A7F211C30A4DC08BAE5CD6
A830D39112E8F693B68E51F916EB1F8F7DF177689908E9D864BE3DDA2B293EF8
80D1B9147A7CAA0B6C48D3ABD53A40501217FD8754EBF42AB7EF205B52EAB95E
8A590966A1F0781BB3EAC35A0F9FEF8D15D24510A6AB4A2B8CE67BC555BA5E53
124F7FC666801C182AF99D4A8A3DEAE7AB79D18E171F04F6E164C2CA9F56BC5D
4E3E633D6C98DEDFCE3088529A5C2BFE6B271EFE69C67B6E0BE605A2D13141E3
5806D8F53E8F34D70DF5C324DEB56540AFDAC96839397CAA9C23D0F483D155FB
93C2941215E1BE0C9EAE101A774CB618B8F6A9ECA520952895CED878A57011A4
39A0D937A4DEDBEA316FAE0C2BB27771C24F0E514DED0F14C5CD9EB76A51C7F5
29C7D109D80B8B722BBAA233D8677B632F48D006B00226A9684636672EE5C002
4798B0631A1B8F630536575671ACA412A15209EBFAA2EA6D22E9A43C91D49830
E336656B3148B3DD79FAF0DAF8B8FF94F746D7D3E6AE92FB965B06329AE0BA12
21040A9ECB3F23C6DBCF1501C04CDD9501FEBAC3C447682E91AD70A3F57495AC
37867A1CA6D08A41E545CB8027706AD0A421E604A4527D92B63BDD64EC3F052F
393E45E8DA2899AE524318CE5FEE77AF3236281F5C8FCC28B3BF4AB4672359C9
D001B23D0976E43402F29EBB407AE6B66FF0EBBC255917484F9F5FD9B9D4E255
E9AB67F8AE9734308F397BC85BA02C0C02CF9BC3EB6B72C8E83EB11EFF881211
2D064ED3AA7E7278B4DB0CBAC9D7AAE6F451C36B99EFFD59A90816AE0C532329
1DF8A3B6EC8F8538639CF05D0CC418D591C52F22AE71CD01A629A39088289998
BBB31BAD11EE7E81836676237F301FD817C0910EB00BDE50DAE25E54F0135DBA
85FAF262372BCC8598D0E49D5C9AB9E31960395B6890A1B1B9952DB443A647AC
9B46EF244D18DEC93CBAFB7BCAC1423408877855E7EB7AAA9EBAFF20E559BB4C
317D8A9246A88CB442EDD4BF84539B48CD0BF4D33460278B986A73CD8B2A501D
8DAF51BA28EEA6DF8FD3F799433EE78ADED97AD8FBC4F4748B713B72A3ED1CB6
814B032978CFFBA408D2AAD32C6F721071E6317AC0E650A42CCA2CD2718875A7
962FCC1435C264F334EE2C55816750DB9C469C7AD1A51225A4FD2B58C4606366
02DE2C4E5CDB4E2EE50489F13825A499DE1892B0D48E1232397848DDFFFAF466
412EB94152DC61DAA056E6BBBE03F98A5C65A8A81A3B65B137D13E3E01FB9555
E6542372257550B5EFC97F0B4E8EB3DA3EFF6CADE4F3B97A046918C47CA549A9
BE16B2957C2A32C5C61F5240C76B1CF760272CD0BEC8F0C824C91051D3C01599
DAB7C882F6B7B977EC42D5A1CDB6A475573B64D4C050C9B28138349683155BC2
5C971A2C114CB9845A906C18DCF3D079B32B2C1BDC6083BE82C6A8280E539A15
B7E5495468A6CF3F2B4612179583460CD5076AA3CD1639D11DF3740A9905FDC7
2169CFF2A1F8507EF6A3FCD4D2EBE4F456286F94838CA9004E0FCF3A59B7863A
9B0560E111DF836D12A582139037600CB8DE771B29E4B422E1B29AB1D7ECE4F9
56B3F7419A235402FF378BB8D4CF7192C4148C5F33790813D0510EBAA14B0D7E
F6DA240FA5611DFE4270FA2FE5D552A1C35E5A60508F6AEF8C00EAD4DBC188F2
7245BB9067420838F132871776E3B2049F76FF3AE18F5C9CCA23757C9FDCF0B0
C1064852C046867CC4A4DC10E9F9688D3B22270961B37222D599FE9BA3233676
233A5B0C6EDB4774BF6C50914654405FA4F386D50F729CCB768EE0751A2BF545
91F25242D910B5FE2B480CB3D3327F5FD5847094DEE24527CB1675AD8F922ED9
8F7E0DC58D1DD8135DDCE8857E29CADF0CF7A9DADF3C0D309573F66160CEA877
06A888E6895E0C155906C2B43996C3226D4EA2A8E2B2B747CCFCEFF4AA3C3642
D922A1AD32F43DC914E00CDB45EDDBA0AB8104345C763772408A2DD99BD0BE56
37E4F5E3CCE717B2A18BE4FB9288ECC9D12236690D621CB6200DBF3BA4EEA6B2
FDB928082DEA737B2F3BCE104F175972142F3E8215A7D188AD49052ED993E1AA
AA94ADC47D4D318A2D603758359B4621EAE1F8CD7A28C4B2A3E379F19615F9C5
69DD9CEE5053E2762401694E44F03FEC23B278A76523A186025C806799FB706A
55A77F26FBF9DF5CB0FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 72 /H put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291153B7DA3BFD42DFF5A4DE5BF8B86BFF70
F5BDB495EFF99DE8DB9D85A13BF77DF2C4A97A13E4B525245B82998865D5B387
4138C7E049944CA146DA73A2CC89C048FEC738F2BAB854FA378A1CF611A21EE3
DD3BA1A400EE8C4AD035FFADAD4B90F90DEFBD39D68F1405CC37786A223D6073
85E67FC314037C7E13F3D146873CB848F7B16C9D3247E7CBDCCD90E10600663B
161A15DB54D1C7DBB3B3AD271CB5CA98A92163FD90AF07DE1610FF92104C9533
8977159D77AC6B57A459ABE935654908BEA380ABCF3BF79DDA3F7885965C7BE5
BD82FA1638B4583C8E173DE8610AEA154A2956C5F3ED912C94C5301ED3B89477
1E0E4ED37681E287F5A5CB57BAC7192533D0EF6CB09A0A16D02CF3159869AA1E
BF87F75FD4FACE6AB8A46C5A7A31F4D96AB5F0B7A97D1CA940090DB58980E412
B1C9B9AB7FAAF124A1A908681486B4BF99F59B10EF2F6989E36466DA59306861
633038245FC75181A42E65C3E1CF5269B00E31FB47B4F77FDEA2FFA247A7399B
354B0EDEB8272D75E4EE205D1A3C52C1F8296D44549A5ACB293CCA55299C1B7F
C3CF0902C45142999E4D1F915D1EFE002DB4912259B0C305520BDD5929A9DA68
55E64D347EF63D57636EE39A39B7D68F8053B8B32236699370E8F1FE199DE361
48AD8E93FEB27B1ABBDDA303406C1674E5EB6ACAC077F2BCD62E32C939786A87
959A872F925598158F2EE2F4CB1959D5598FBB94B9CFDB7693887172F3E47139
FEF17010CDE71958A12AAB131F491B8177CD24B009A4A71167D8E49291FB1E51
252DD9E817737BC28FC5235A34740088E70EF04E6D6E83DCC438C7CC4BD618E0
1BFF6A2B98C00A6DFB597ECDB075725A35CA58BC10C1B8DFDC61E5507DAD8037
A32362B8E1833C2B384AD2C3B25464BCC0AF51AA643EFCBD15B5A10F2A9DF085
24BEA30AC247E16B39354B974F24F71A6882DCAF0390940A46BC141CBDA0F268
9E835B357CA2972F3DECFC124AFC7E2DF484D4CF22BB9B51CF1ACB4ED3C8863E
AE1A40F83DE17CB3925508F13C7B97685E54FAF71B0CADAD2ABD89BBC322A123
5D28C07CF9711AF330473CD005ECE2B8422239A791A10DDD6E594158A5F038A2
C19815E006452680010C2D905514B81F15F05202C87E84B7193DFD9EE03EEA95
A09C7B64F49BE7586B42355A5B9138CEBBADC1878F3805F3D6CF33B5FDD02239
96D22971622CA67592E469690B2A98FAF04A0CEEE9C960DD251CD090B970C8B5
81DF4BC180542E66435687C5D81C9203671FA7B7CCD38A7EC03F16DAB1812AC6
45C9E912D2BBE536B88B21C7F6F9EC019B1D9C2E5329464E2FB1301EE091D9F7
A43A775435177F3EC9BDC934DF02346D30612F9918ABE6BE851FA34A2D49FBF7
A94394FD517973DB2D63BAA7F02D5339B6D7DD150348EA10A719EB5EC3C2DFFA
5EAFBEF754D824692F7659F9B71ED4D8A9C3DA60F44915B9ABD013D90611FD1E
3E8A8EC369EEAD0ACFBFAD897DC587ABD755092512DAEC0E123F94085D1C2A80
65F0057C6DA70624B8BE07198350014FE23E173182D4D98DFEE643BB02DF6E93
E0CB78239FB3C7B2C97C6BB36F4AFB8AF690BF5A2103405609C02BA77DA379A9
4D1FFC17E0B30549F47EF137CCFE2199B2B465738549F5D72DD1B545496D7663
4AB2EA4AED1FB9B429F307A1CF267CEA1AB5BAC73EAF69D3B279B615CB2AA134
B37A8A9FA6372E4743855F70B68512B7E28E70AC05D3036C9AE1F690D6E55A15
512C10C1A91B25B3AC423E4194D1F851A8395944C33ADB95DD288428DC05CC52
478F0929C9BD16A0A8B57625C9EE3B84145D4CD93C68B9B70A071C3F3717C76A
782F0980B7009ECE5B89A209F473E422B13E89787A2767C8C9D0494B8B2375E2
2B433DAFCF1C5B4F57380181C3CC37FD96B01CF38A569EB310579042473944AC
2F1796208E150B4CF792AC362C6DF336FAA4F4C78B3389B6C356E1998301BF1E
CA50C0C662FE2D2D457C3BDA9C18E385BB3C944BD1D5C5AF5D47912C2F7D7608
BA34B589566DF863BB3F897AE11B9FBB5C897F4FFD6B323E7BB747424BE88E67
4069740EAD0AF4ADC3C55542D07A043B18361C14131ED3666E4A62F7429D511F
6E7E3349BAD3E74A3FB71A3AA44E4A9624DE1F85B285358AE148BFF9E76CF175
C7836220AFE8A17B9F6F74A36BB83CE9C459ED8DD1A2D8598951C10BAA2BABD0
20EACC69C973E0FEEE7ECC88654B92B9E8448ACD8DECC52BFF41C7AA294EC22F
A10395F629B3E684B3B6C374B0619C044B48BD0F2E3F4C7DF8BEA7A15E50138F
4E7F6867F3BEBA492E4B541F0F7A77A29EECEC0957B0D44536B2AB400232A86F
19194613627CAFDDBCA1979F1F2CCB4BC337A677E22E6CD1145417CCEC88F0F7
14978657D1EA3062D7930C4977D4293CFB9BA4DC5CE455EA0D342EDC12F927B6
AE2D4213E533AAFDDD72C468084B272AF1FD26A600CB272F79AEEA15B28CA78D
DD2F3CE3165A05BCA2E87D0C28DCFC91A2B68460F142D249ABE768EC3D06A19D
2B01254520DD23E131D6E2AC3D1BC51B22A2E35EB00872E6C1FAFF1E02F8782E
588121C23C84C32F2E6D3AFE0534FA847FD8B74906E43F2F63A9F320E3D89F2F
1524DCAF2CD8BDE8E8134F7F93A3B099BF6B0B6E6C663CCC953FAFC353EC8627
2C49ABB8272EC18858983997F613EC9D14592B27D3BDD58B6BB1FE39FF2A3D8C
72E07597D33A08C69EB17C8875DE7D96261CEFECDED2473D6D619111C422F4CA
DF3054DA091E4EC28F7A0F8712FE4669DD4BAB6F60CFC65D512A3B4D6877A2C1
8C26B6A8531301F445B3850723231BA88824EE6442DDBFB8A1110D3A769CE222
5789D141B0CF0CD7DABCA4A5A389516D392BCB379D91EC3974C871CF4B239BDB
C572D71E28C60AF5707B608CD172DF321BD90F82E02789969B9219C82824061E
65A1B9302B052E2ACD3C6D528347DF953E86F45A27A0F6E6ABECEDD7FFA3A1C7
451383F96480D3B21E7DEAC066BA40F6CAA5C13A26C6E4C98CBF3137E1F3F41E
CC257094F4E63EBC3429E972C5A15C6912CF347E45D9579CB43085FAD181F158
7E2742F89704C69FD2343B2E9AFFB8E35C47D03A37E43FBDF0D3073014F5E90E
21B73A3A292509985454D479D6B98F514CD85D556C820A1F6AE5F8BBB01AD9B3
AC8BD304F84E0E1613F31DF2E1A25AD34F2D6B0D59E25310A24711A20E700669
D8F06DB019A68ED7ED1E224587EA3EAE7254969A81A7791AE979279BC1E60D3C
016302676E7A9BA810FF0132D915322311691B44CC03030E37FE6BA3CD9CBB18
5D2A2F6AA2A03EF262C24833B2A407A910F589510165ADA8E2538F0470302DFD
CF3F634FF8CC8A2625751B037FAEE60EB4357C172F34A0CF7D9AE0D0933C69F6
9B87EC1963C6591866A3622C521254371CC5E5A23AD263517400D2A208447214
E0426AE076F2B8194BC0000EBFCD5C005C906FB2CEDC32DB3BCAC6DC97AFC4FC
B9F54F520294316294912277216D06C7E74B13631A61BAA5282C9FA8324694DA
164E39D9B95EB23247EF636213B52F4F9BB812FED256980F5BA2ADD2F5D80D92
94655D4A12F557854174468A8AD1AA0BD2FFAB7D51A15FD5061B17D1BBCD0D30
9C76453C4383B3B897C446A3A8FADCABF64A00C75D5FE8DF6D805400A39128DE
C2FFA7E7CC5D662530B11B3B8D89D1CCD7D6BBEA18B8BE885D2E0C59126D758A
B34032C311FF05556DE44A36664A4498B6C44244AD6E55DF49A561548F1D6871
C9337ABE11C21AEE938E7619F31E5A942286CBAAF0062557B10FC958F511F901
A6B538E95FFEFDAECBF957CE3764173AAE82F493875E9E339D7A24455E0E406C
3EF2BF5F4C9E6F330EA44F4FE252E682010E6042C3E637F51BAC8FE33D173E7B
CEF0F59ABA1DABC9C9776655207DAD905D6D4DFAFFEDE9515E8EBB22832458DD
65E254DCE505EBA809DDEBA519AC59094A4A797F722C7493BE7AC2F7D065CF5D
F7846EDCF8186AF99FE1B868CA5583C619D0DDBEF5517D8CC18FA2150CE6260D
9047B5D9E1A3A1B28B164BBF56533D648139FAD21874D9BF9E77B33C646F8B84
AA0929E1AF009B780F8BA7B642EE04CC65572AABEB0D216B8832B05A12F1AF34
E3574195794254CCE96E266D826A3D9667F638B42CAF915FCEBCBC651CA9D1D8
3A6FE6A0D67FBFD03E84ACDCE0FF6F7ECD1739A8B7F8D8A8CF6DCF7B119ECFAB
C681C9165CD6AC17345F52F440B52269EE635ABF522B712495FF1804AD14CE07
B8F55CAA4922B75E9B25E8B7D758FE72465026F09F8BDF37FF628FF379C2D394
CE63CCAFACD0B0070F22E61E0B5F5DF32ECD16F9C35B0B0593A63D1FD18BADB6
39BF9F52D77C1A6AA4874A91F5392DD09DFB161757DCD1A3D3967C70CDE19942
40E813F04CB58E231DEFA3BBC86D107E96F429CCC239F222961CC807414F936F
7BA72AA5EA47C642DCC7800C41C37A97A663F86E2E6A40AB155051D613DADAC9
89644D6CE6352F41FBF9BAF4050876FA935242E93459D4E8694AC6D49851F321
7DB7A34B1148D2C8ABACAA8EC4A469EF22D1221595F0572614717BA37B881BC8
DC5C4427B7A47F7D513624D5B0E6F318D4898A5EC74B0B9A4203BECDDC09CECF
1B460AE04D906DB225C62D7511A0ECD024B07A9D0BE920C3EB3EC64D3A6DE328
EE06B9AC445D588B422872629FE23EE4FCB08A7B068C4A3BE2D51CF43BFA57CF
51CA9E3E53BFC4B79C0432F3642C4C173EFB3A5AFE1EB3A95A1958EED1B1A395
C5AC5C02DBEB4314D168D3F80870245D6BB697A96148A9B95C9C596675F98225
9B636A2C3645A7BF1EEF981AF3828795131D4E9BFD50B420F7A680985E7893F6
F83B4EB5D4796E423887216C9FFEAC07BB300C31CD7131ADC87FCB2A196EF4BD
6C369D99F26DAD31DDE8CFCFB6D16155ED3BA66F1457907262FB32F2C4AFCB70
9B39CC46E5D1FF75F727D41CD40D3D1A19C251E17B3F112A4B271BF11D62737A
6E9932CEE57AA9E263CE88DDFF97CD421A5C678757301B45331FDF2FAEA1B692
0F47CD238377C9B726C5CB2D1943B12F01F2D41F58A6EB09F0D5895372417594
F82CDD7CBDC7DA1D5C055EC2FAC2FC1D1203FF98CBD546CAC700D7D9A88DFF8E
A2D21946D99A9FE8041C5BA87F2F1E08D0310D536D8FEE73DC81F3DC9D8F440D
B172E9DDBA8CC7EE5AD8E80490C353F464EAFB9882445DBED386F459C7609D3B
31C4647452E3D6A8CA6A2094B9AE0D56FFFBCDC148221FA4D8C3EC2846AFCE21
5C4C43907CCFBE6BDB605AD7DA0347C2D68E9D705A542E3E67AF269914060DD3
AF28FDE8009147B2DB4DB743AD8FE40B51958D4132749943F60D2044005E4117
2EABD8D0C79104734A047CB7A3CE5A0F5D05B300C39BB9505776443E15B85EC0
141660355C8B17FB9D8F7385B5C65E631AE2AA7346DE5EB72F666326D8D92B6C
A5BE7AB36162FA25EABBC2F0E40D9B46034524109C3DFBFF9B7E38593BE39BFC
1C6C1A131CDFEA91C7326AC73C3E428D62425E6DC139CAB9F34084CB07D1E3FF
00CD546361B54CBD47AFB3DABCDAAF0C86B87B9AD56FEBF309A729D8D30BB498
E237E1DF207BFC8461951E1B5096E4574A3BE40ADA07BB5136233318C66B0E21
08C7349012A51E73D4DE33BE45D15CCFA81FEE388BCD435B6D342B9D67466A09
4E967CA7BBED9BCE7304B6359E06A635E30CA4C05B1532C612E9E9554E6773DA
F35A4AF2D8699E978585072C72DBD9157FD9B42103C4FEA9D4603B4A52502213
897D9981008BE03E4F4A356AD275BA0BD3BF6FC1E505ECE31B84AAD9063CF600
EBA86B93F1FBAACDC459DF15EE536538615535814D0B88323556BC8C80DF1328
752BE7FDB0AFD7B708472B0008A5C93969CF76F604B5998EF1AA1AA876508F0B
ED7A6DB704BD8C4F4BC06F21313B41D1D23486C91FC3406F84D1AC88491AF2A1
721A34F49E6572E4E8F4DA714ADD1403D2E87D5EEDC29CCA2D8F91A20C7746F7
452D763B714C488EC3A8DA7967D4A47FB42C09F01623750B774D3C2B180D92F0
5F8EC4B605BBAE79132ECD0DA8FDF20A5E34F1402BEB4FF60637306878D615DD
C1F33310E1D3B5F1A1F135222FF802052C91250CDC014A2523949B6813EB2D71
7306F38AAE8D712581ABD677C2CBA1285BC2B7DCEA2F985AC7A614D306F26B1A
5BA914EEA76E8BE302207D3F3B2BA6EC7164222819F346464C85C01C959EF578
CC8BD44AAE6EAD9EB1B1CA71972A3A6E3F04C89C82F4DEE083CAF7A9CE65B5A0
3DB5A5AA16BD87F19D67E5B6B2A523B64B2AA7F6A7B61B253A97E62F08E93EFA
D9888288DD8A8691F3FE1D7B5A201374896D641D9229880B52928BEC25E681BD
B8EF3E7F63999735D5DCC8C566957F155EE41FB8F9B3771B2107A9A336519E35
E8DE472512A0BC3F8486D0B31ACF2BEEAF52B4017BAD494FE05105997B89829A
2295C9D798BE26DED642E09677C56774DE15724EC283DAB168EBB5E40D28545A
E0229B0C1B22CDAE323780A34EA82A454CF4181E676E8DCBF06745934D5D7004
50B25FE81F136509C36388C11AE626AD3DD5C532388B34E131692352101330F6
84D00F094234A8BEE0740117E9D3108414E4A4053CDD21996818C5B7575695E4
B983E40C7E1A708B7D0EFB2BF7711517795FAA2D014F82F2F43B7D5B6D9735CA
DBFF87E72014E6645811EAE6D07CD74DB4F8591FB108A2D751BF4DF5014C7862
00E492F0FCAA9ABC54F31779571F3B98205A31B30481D677994DC6D8DACA891A
6354A63E61FD3E3FBDF84D798E90748D6C676AE7F1098AE464110F019B6698AB
9654FC6FD81A493E5E627C85B401D21D2EB8C26C266635D6AA3549C4D8C4C46B
C176361FFA0EBFCDCEA90C3B61D5A1928BF9308EC86137D131B250955CAE2119
D362E7CBDA3C07559B044C8CE9817291EE3025184465539C7383BBCEAC99B87C
CB91451C29A7364721796458C3BBA4CFCB59E3D8C9BE3CAE905209D6A4C38AB8
E808C64BFF9A2E9727FEA0ABB12E19DB8166547F5AAD698781F361A545E54CFD
A6340748DBAE8F169B45DB5E0730820CAE379A26D6D2D2B0965482E38F944959
9578EB3CD55F06C3EB4C344BE33641D000E55CE639278AAA32E1DCCEF0F45EE6
3EC09ADA37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
dup 66 /B put
dup 77 /M put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 115 /s put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFAB975C570A5D4B964B9A39EBC6D3327272589C6F61D91A7197B050F17
C83BA988AA2C67FAC8D9E2AA0F906C839FAA8B50BBA0F69C642343D7FA1E5542
7D0A015DA9043C0A36BC4E02A6EAE35220C779D22FCA7F7DB374E0E3D066CCAE
3C09162E8A4FC6CD4741B38836CB599DF98A21D0C90AE79806808157F97F850F
E90EC0DB9F2D8036BFB4D379696E73B84B015B308EFB52EB7278A37676B96C60
7DC49759734D8F1EBBF10A7E363AFFEAC9E499BF4794FA3293666AF2774FCABC
E014DB9E00021831DDAB3D794484C4A85B8F0097DEE9B526B39C6C9C9246F8DF
FA8CEA79A99AB0622795E0CDDA972B35EDC8A6EB58E6FC06BD6957EC65834BA3
4A8A5E5341FF7AE67D07BFD415AEC3451105733088528A1D21E9D9B496FB8E8A
AC305BC8750AF9D31CEE820D0D3FCCD90F36A8F4F1A4574E32BF6CE9E9857AD8
DB06F17E3E497AEC878C78FD05C0CC0AF047DCEDF2D52D2D43E78EC447B9C1FB
AA7C2FB42E874314BDD260ED8372882F965B6DBE7CC23181BEB2D27D8ED7FB31
EDD37724EC1A454E4BAB1B929DC189CBF445A0312ACE92E727E2F847DE1E4559
CB48F5E1B43B64470E6F3E6C140B4224265046441EDACF8636DAF223B6D510FA
D59B0D37326A94A66F9F59AFF8449C34971B7A66DBEC6EFEA878A3A5B665E5ED
E97283BA5D1E9E4248F88A09A288DBD6167B7B58D3D665A1BA890DB0C163B4BE
094EBA47665DA43EC243DA61D0B69AC63EE2AB32A222BFB31C9C9E36FC2131C9
7B0681C4A25B44349827A4AE046346C8FABB29390F5898A3676504CC0F3C2B47
FA982496F7CDFCA12D5C41372CD6E41793D698701AAC0EADB251E1544F7E0680
2F1EAE1BCEC500226BB267E9AC11CA0955393BDB2CE1D9F2BDAD39656CD50D09
4D844F1CE2E1488919535751F8FE95D9D777843F5D64F95A61987000720C76E4
BC595FA99D45144563CC600EC92A8EA20C4C13985260AFECF0DE64C8B8D0E25C
2D132B59AFBF25D0CFB3132D63E185B59470C335307D2F6C2EF43F64B1DD2A58
6C32314ADC63853FDDEEC2BECE90F247D8232D21F19044EB97517A11E929AFD7
B5148A178AEADAB82D41FC4B49196A02604B8F1AC95F620EBE9B1C2929EAA4C0
D7FB4D2EBAF51C0993B5A70834777BC33C5574D0AA57ACE5E5CABEF6C66D7CEE
9DFDECE0E47FCCB4958069BD18800E923489CAE7C63583F6424321BC15CE5FE8
5845CF2D0A1C39475A83B532AE5E68E9766D95CF8E38E55533E0DF482BA47300
33F7B963FB9B0421D17D6ADAF0B34067525D6DB5D83E17A22D85D5890C5A0C76
CB6DFFCCC08515752F5FCE9754DF7BFCD456DD9807C8511ECFD4D43BB0848E77
4C2E241BF759ADFB55906C4F0670200BAE613E4BFEBE107647DF07212B4D7B26
47265C4B56A604679607FBF7CDC4EC47D7EA442C5A84CE2518E630EC4732C324
98467244DDE52B38F3186CE9903C264EC6E60529FB092486B37CF97B0B3ED044
96541339DE8AB1216B0583A619BB5B317269E4E5047D894CAAB170741CAFBF23
A613D8B21C14AD3931B0E57C88E1CE667D77577E5E7D892AA40AC442BE20C7AC
37A6D9E49FE0D63065932938F6E694285646D5061B859A3A465212570F98A283
957CD754560D41090B97517A3AA81B773FBACA85C8BDBE4C389CE1C1BE689237
A9863ED4321E0C87F03253C4A48F91501ABA8F6B55F1789E7FCE629D2FB163E7
94C7CC06D723EC66755987ECBFE09E2D91E70818706D7EC69330F0824FE4429B
C473A4AE25E8ABD33800346FAF8120B955E654616589C4A5571B4E91692C38B8
BF73E85DA155CDBF7324EF0B8C4333803B56CAC2C651CA28B406F5C91BE2F56F
20EBEAB6B22903249EBE68C961E0EB95999999A4FB0E1D20CDBCB4588B481B67
DCC211E885709C847A2BCCCCAC11B8CD0DF286C36E391D1EDE177A8A3640359F
D17492F216765F51B6B51BBE69C902D1BC35D027C90BF8606F180E740281DC3C
AAF2CDDAC6B90532448CAC9983E42C614E5332C91409BD3822B2C15552A278D4
2AC859BA1AA47BE75767BDEBC9FF344DB977C6E475BC72947256458929427038
F9E623FBA505F0EE04A2DF5BEE8CF1EF7C3D6219E21D86085DE2E023720E064F
CBAF0CF282BEDA037F1623B431C0B71632FD55757A17D9274497ADC8DE2DF011
DA567DA80A8E78362832E93D73A7B686FA32F555F77959D5919815A9365841FB
7883A492BC1DF6614AD4D7C0D1E0B49016001EEA34F415D64CEFA9557FF9B211
6FEF826A24B6E98E1125E2D465346343645360404F4232DB8F35D7A8E9C9D062
DA82A9C61EF11EF7BB0A58D1CA8080A9A76B5EF8CB738D879023B710952E753C
14D418DD1B333448D7509D06708E30CE5ED192482B879EE503691C1C7CF6BEF0
7009D4B8929AC91D7046FD18EADF4F0A67015B9CE52C6C5352DEE9DF2FA65E49
F7427C41AE313EF5BBE90ED7D8D589C48D3A11E4C8B7B68474EB3200A1EAB6ED
B5FDCC8D7FE6759F0A3606D2661A80DBC1FBB1DEBBEFAE1B9CF0222DF8C521B1
F3D7E2C313EAB94A45DE820BA7C47F083765271E53CDF0910846D65591B3E62D
D62C5D8248F10218FBB4E24506F5D9572CAC5DEC319461E27F5F2C89E735C42E
FBF801AC876191C8F127035FA150FACD92A22EB9AD49E1369FDBD09B84250E1E
6F4BEE1BFEA092D50CCECAB0DCF708E43DA257548D7C2A3E9444D5F1E786DCE1
0F92A573EE29ADE3ECC5B98D3D70C3B3A390F9708ED2416DAD83FB8B9F0CB749
B9190F88CF1E836A8E16AF91B42A71821BCA57BE232A69AD28CDEEF94298F0BC
266B59792C6AEA93364E018B2A50CD9FAD3D8B02D6EFB4DEF4215732FFDED95A
7194F6EC4F63935C169A9C3AA3D5ABB920000C93C88FEA9051CDEE8798185AAC
FE2E51D3AEE3C7B1E750895D0152D14619B3F6432B91E74A261954FCC7A15CF7
46AA676CDA52240925DFC5B90E47E9882160988842FEC13C24724CB8C7EF0598
50B90352BAD63216AA1FAAB4C45330A33ABEA224A58D19585C885915A7BBC561
F857691A63FFB30C9FB24E8FBE07FC3954ADBDAC523212CFFF74A2DC0B2F3F38
86E24968D437DF68F31F3C6F71E5F5F2C746D9791AB6610F6034625984457140
1AA96F52F4FD59A66F43C21787D859B996445F3502A8C54156F192476CD33518
C45193FC59F50724726B0E3FBCD5EA4BBD8A4D2F5FBEC77A3C330808C5E2D194
580B156FD849C553DBACE78DB58888C3BD93BBA7AE89774DC4E570013BF603F5
B6F6F2E00E4D7E63E2D3FB5CA8F18EB3D04F87D1F71D7FB5C2C1CDCCB5009455
FF842B820813E64D2C492CB9AB10E465A3708AF2D46DC13B3E804968FABB2F95
E3B671014F2701DFC0047D23F88872952E5291BE6D71BC86FCFA5921B6E06935
6BF7342CD03BC49AD943500154A5DF5EBC91F5ADD5C194B3CD929E8303540208
F0D8CFBDF7E852E1BC09AB078BB40B353C5C70D90463E5CAA8D43EC602183F10
8C8EE904A1C696C42595BCFCCD7CC57AA6DD9E2BB81986E89EFEB6BA0514FC6C
833F95357FF45C182B6205DEEF56E9413B25CA38D175B6F86A7ED3823C69999F
73CA1D38F2EA57D87421ACE817A84A7F63DFA6A1C2231C6F730900419ED5D795
1363B018101229520AA720120EF9697F471D69F542FF7D211F80659200AD0837
7A8F22
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.0: CMTT8 003.002
%%Title: CMTT8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT8 known{/CMTT8 findfont dup/UniqueID known{dup
/UniqueID get 5000830 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT8 def
/FontBBox {-5 -232 545 699 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT8.) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D06E82116C79486D8
C5C32DADDFCB2CBD26FE85FFCB176AA09FBE325434B8B9D358B7C180AEC54F8D
24A1AB4D5EE5375B963A221F060453E01768F0A398352CB2C76E6E70BA017570
BE1C3D3A86E803B10B506FD9DB49DF5CC7BE17133234D7BE9230BE8B7481B357
08595FAE04D04B14C633C52E303B06EDEEF7CDDF20F34D7F08D991DFE2C4261F
298E0A818EBFF29D3B29D1D0CE2F071B49B0622F65F936F6C1D4C6AA2860E56C
9140A4FA23BA31888345142DBFA79825662511437347767D4A13A976FCF67EA6
7882D7B391B37FC1E22787E484D19BB252C4D73AA3D73EFA5C6341CF6F127033
2B91079B5FF8A164666CCC65D0002EF7E374098745C84E3037324B4248C5385C
FCF0539F8C04CBC52404BDC6ABD1474617D06377A69F4851838F462E82A86BC6
F8DB2E740B5270AECB0B922D4493A75422349138B539B6067C040F3007F04191
CB545ACC01B4F28AF811266260FEEC04057287BB5C26C077946DDF23322FD99F
2B3DFFB62AB8BF12000AA81ADAA6A064F9C34D5F36CB7F66A5EEB7B494FA1AAE
32B380163AEE08F5BD270FAAD8DAF0CC5B6979B8D4FB6AD723E011DCFE119092
D1025BB62280B745BB0FB140E82325F1FDFC029100F922BF206E5527B7D8F60C
3F3E3AE2184CB954391D10A1618FA0940F12159167494E29A46125CB911B19C4
97B4DC76FF53B7F79E380D7375FAB6C30A467E02E48BA73403D3900FBB440C9E
951C081C8D5E04DC0C8E1BC7D552075CC360B7D1007367C655069324713715BF
F8182AEB6F401A1F029FB3962BB3A0B2775979FDFFD834D5559EE20CF54D789A
D64032BCF2E50849C626586043EB86D4C45BDB6321EA9F11156B5411711BCD51
08BF9067CBABDE9701D6539210056D80B361F6C2D8499AA9601D91F344E2181C
9631F6870B3092C7AB9D34C66D7FC0F7D95393DDA4218476E84A308CF0DDD078
FF2E319A37EB5CEFDBF36492D265A25C4DF64925215CC4DF3BC0DA1077DE75F9
32A39F28F7C1302B33DFB91A93FA995AF792FA4ECB9EE76EBDEEACBE2D711F4E
B24E6647BE39F450F9473010944053DAAB56B1075A0C3832220752D104FA1ECB
4A80E94B9F75FA7DF1AAD0F96B2F1290E845156C42B91F3F42C467E8599E2C88
C2E4394A3AC5C2B87218F566E63DDB2427EA8307C3BC3330D2CDDA7C77D5B7D2
9AA4BC3298007EE449A44812EB03806099406E9A97BED4C33668C231EF31A4D5
750105FEB6F0C1F52A8337F2B7397413809F1E55B6D9715EB9A5D7C441C70539
5E03D5887B559E55A386EC4D7E28F44E54EC7B6C2FF23042EBCC7F2ED1B294A2
7A5C8569ADC52CEFF8AD62A36E53597E2F930F5569C0970BD85BE0C1332575D5
1B97C62154E0B91E21B26009397DFC982A79F7A4E15A18F273DFB30A3511F823
E75AD49B5BB8F267F547D698C2E70C1EC210BC3AB489F2680800DDFBE334094C
B095907B2192E831AB2793BD279D27483142E8F6A2D793C74F5AB19AF86D2815
F078FDF7E5A5051C12CA10590220CB47FD4D9B4B50D0D095F93FEFB2A6439069
1031B8B6959DCB6B436A1422AC2296EBEF40A68C0AD72720C4811897781A3B68
4ACE7F47D72E9B6C2B20A7482EC11E845E55EFDACD17EF763B167FF18EED6F17
D13583EF110737B922A88BE25FFC44D0562BBE026BAD229787E786966668B682
9BF05536BF4FF3B27B812C6E80CAF087644D49A2010C516FD1D624BD5B938DEC
B1A8612CA3DC7C69D7B46A99D0C4CDF1CDAF2CE7251514B4B96CA924C792B8E1
EDB39132A20520725713E1A5FDF29FF14CF95D4F6BE6A4F655A8BE38FD6E8BA2
56FC0EF4EFF88BEB329F8821A5AAE226A3740D88A084FFB7DBB36BEDE553143B
ED1EA9A95FBA53881BC44B374D535740DE2907E503C28F5DD1E1807533F42EBE
68878B09BC85DB3511D8B52E9AB01FD4E71AB476BB862C297490770F2891A992
135BA28D7D264117928EB7FA4F8478AC3E820EE935242355A29A4934157AF54A
2639FD7686A455E5F945C7665CF628573EB0D9E853E6B9A91C51D6B413F7A435
18A83B3099A74F54D530FDCC738B10EB89A66EF0368B928B6AAB9CD1922AD726
288F08F7A4ED580F28D7671B8D3DE35CC6B22EDC09857DF50731832FDE4D0809
0D3E6CA7454C75A58973A2D3EDF9084273482428E89A825CAFA5D3D4709FBCE1
4928558A4D29CB1C766C99E92D34B8D5D8B21198789D2B88B7FE019609D94EC6
D676ACDEC88C57046CDE6AD019A609F397B3AF22934D547BB0C1B28C5565CF0B
6A1D3BAC7DA62FEBDC600BC70FDCE0651BC536B8E78B06CCC915E1078789B98A
9EBCB464E9499DFF08794A8FEABF0B726BCD59F0FCA286A1B279494E4C5A2161
3109815B360CA7FEAE045F71336D9532E5D0DA7291480CE8F96EAD66816181AA
252BC26BC168D726E577B42003425244BB502AEAB5FE75D473C79C2F63522D03
DA0C935162E3582E0FCDAF33473D66B131A3146628D371C200E98D981125CE51
C805E0949AB2C5FD9DC278049CC56E336B9627C064BC5B796ED34B94AAB3DBA0
0628A53BDBCD71BB1760147630EE1F906DE6FDD13C00593A6EF0CC3A7E7A9BA2
3C68BF8AE1E4DCDF81BCBFC4D50A2AFA6E3761B03513CEC00A5438CFA2F9D327
9E30FEED8928912681EF1A2CD372937EFA3F93FD843252136BC9C4BAFAA38CDC
EC773B4A5CDF167E9B604869E1366D4C1973D96048664056AD86C5326AC99298
1A1367517F55EF29499587023B6B696B7F9E07B4AFE6F44145027943912AD767
1B12D01BE4E34E7FFD3AE3D4B2391434FEEBBB0A53AD030728E67F40E96D4952
FA602F4DA3CA53F1947503B47BEB511DC906781DB5ABFAC30F19856567C97A6D
FFBD83B2EB3BCB16D68CC0E2D2CF9AD7793B0A1AF9B5BE2FDFA050626FA24C09
F92C26CD26DF4B083F83278E3C4B3D857C84413F9C5575E96D868409972B07D9
BCE03E9F736DD9DAA734FDDC087E280E6065D0B07175531AD3533C60BC0B2AD2
D80D229BA32FD7C34AA662AC2382AE8FCAF3C204910EA7DB4494DC14345DA6F1
BE681BF6CA028024ACD249B288EE47B5F8A6439AFAAA0AB84E7C468EA2C8049B
8FB32E3D8B99AAE9CCEB729C70569105698CC67AD9B42CAFA34A55C654B965EC
00FEE02CC78916944617094BE7004C3A23856BC41CA998642E6C10A3E7F9E66B
D5FFC81AE758C1F6A9F221BA80C44E67270AFA944C5BF52A97A87FB3DE7907DA
50CAC93C9B0ADE69D57C6FA02201DFF211D9CC7E1853C598CE78E3810B9C85F6
8CC26A4D2587E6F044192A5D8AAC08E37F2AB1F1A4A0771B6B9C0963DFF1539D
4149EBC26E3844C5826F71B4B1A4ED57964C2C3E4011157ACE9A16CD17BDF422
3CD836803F5956DAEE0E923B87F8BFDA491CB9E635CE7D210FD466E02993E4D9
7319A0009DA3115645E76BBC6B4C9E20329DCC9D8661AFE3055639E79BD96B9B
7A6689E954152303D8B25B0F9AE35380CFFC386589E16D06A71AFB0598987A71
9AB4ACAD1B9DCD8614CF2CED7791C9533501EA01F1E3B6A268B4CBA115275AF8
0D1E54F90EB4789D36648570103DA0484AC364CF6D3193851A7B371CD1CAF8AF
E2FC90079028578665AC622F2762A49E753836B01F47DEB15E57B4F39E6D4BC4
4F70C38792712C5180726D4DB070FD1940B27172C1A4F8143033A3683C8BDBBA
5EFDB5582D641414D6022901A4A4A7B1F60D458B8471D5C632BF550B9ED99228
C525E7DA3AB4C8935F14BB2E1E01902792C332E260025C3CE895754884829330
7B31B57A4DEC13861154E7CADF211FC617787506BB8B15F2EBC0BCBC45628EF2
FFE0A72EBAA046D4FFBE84BDF6584BD874A08AB368997C58E965F9BADEE7F4F6
C1A6C12109C5673BF40D0E5D90FD8A1643D06ADDCEE06018AF50293B7CC2E91B
32A11D90D329CFF113D966AED0FDFBA5173BDB41799EF32651CA037467F1369B
6A70
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 69 /E put
dup 77 /M put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2AED1652A132D66117071CADB8603969B3A2F97270CF2AA8EC2AB890662FDBD5
00EDD53F16FD0CE199660202373E2EA28D29245A4AFD3A63695F6178406A7234
AB0C0FB1B19CB408E047BF014BBEAF4C9C19445C7819748F082C19E6E355EFDA
BF1C2DC348AC0AE6777F679E2F62A0A3EB19B7F08114AE0E56A3D310D6958AA2
348E1D304BA8C4389E525553A8791632EAE32B6E8D2193932B44D230FA17EDC5
7D407CB83D2501B0D2C9E86FD23E21F26DBAE2550DD4ACA051EA0A0030107676
3643176BAFB7DF0A157151F7625E63296E325E2C3E74BDEA10C3DA37A73F9972
4821E1E756D3DE2C1FB121371432AEADF3328894170304038253421DEDED8B45
D4B0DBF3B4F29F053C44053E14ED09E3E7A0FF377954754A34A9A04FE68A437B
8306B8463247F1E670BA928FF7D401437FAA45A7875DE9FBE63BEFFEC722039F
5B081EA69D0A80893FD930F7C7CF691F6162FE1F364C2F744079F20F268DB72B
E32D7B1631DD1E908C3E640874C68E1ACDFC1B26014E5665E740907CA1E80078
9EA1B4BFEFBBCA3AC7AB86763C4A221C611048CCA8A8F37982F6EA270E070F81
FB7EBB62ACBCD641A976B33A5A909D194D5C8902D9C01936F03C32E26E17F399
9BD8FDF1842ECBA2DE79097617E88218EFA716E85BEBAB99A41701930EDE2F54
E4F0E2D875AA42ACFABE1FCCB3EE3DFAD546621F653EF6D8EF1EA8F9253E6CB7
43898BD641EC9BA6CCD372AF25F5330514795BD95816098E15DA9F1821DAC8E3
507A75B70111EA7FF365534A75B39EDD68A2472DBC24AA85FF2F0192F9A10674
B2FDB3CCEC9821EDACFBC4673B3FC9097E611832B717021CC7BC2BF916346C3B
5D146421B91E02D547E60959B1DC5BC650FE82081F4B8716741D571E9C32E9CB
58689BC257B4EB93AE2D7ECF4D59627AF77074B8840298FAA58B0FB1F5500B39
3E531E77C5339564A9BC7135387E06D301A98E1FA143A132360350E2849BC960
3AE74B2A961BFB989CFB513223A4138BD40510763FC0872B444362B742D48968
A6AEA121841982EC882B2242334FD1F1E5D650B1750EFC5C1C7837C66EE52E41
42369DAB18259092E5E6049270A017BED56871DBCFDB27147992E0CC064EDF9F
73CEA646CA1EEDC0557975D92B89EB9756587BD146E62822129F82656E8748AF
EBA35FCDDD4F1E143E633E70964DFE25A04B63C2FDF414E2D459A348E259CB2C
682784E815137881C0E9095E7E0DBD7B5B4D5DFA4A2CDDF1AE16C36DD98F3DA5
21B4A48F7685DFB5CFD1E9404D9A348735AF09E6963B65E8A1B41DB65E6BDA93
2B8633CB04ACF39D58ABBACC7D9B9F50768E82A9F1B0C32890AF29949DFCD700
263CC05F849D04C6BDF54B17B7EEB88402EA220BCAFD8E3A587C160DFB93359B
199AE4DE40C6BFD3E54367688CF5D2653395B03E5D6BEE8353B9A1292C3DA376
43BFCA74548CB9086C27E3E8580EC897A1647D4F7E87016FB19A0F4183C53926
CFB77400B9ADFB44D86DD5E69F8DC3B9B2B235011FDA4A965D86F22B3701A1C0
1A1485422C5E3770B7D9FBDEFFB67AD40788F9F29E949988CD2292568AD52AEF
C4E7F2D7B776F1F8A7E7D7F2030B50B947CBB1A7BD6004FF47F4E49F84B2D0A9
91BC74558BCA3AB18F5136A115C0958259C8D37D79DF5B2707BA7851403490D6
BAEA21429798E7E8C675D225372E615F8C9C9BA5E15645FA680F2799EB3C28CC
D203E6BDA67A2C25B956C644C491603340021F84FCF49BB9DB4ED3FC62E5D460
40002D2F73103CA9CDE417FE5095D745D2C7C00AA4C418F45F2D7EB557769BA9
983E242A1E9BCA32BC411B62EE373B1115316077FA9F848C40980217EB631785
D41EC47071415F80482FDEBAC106644060D91960D9CB68990B68C59E116EF6FB
16EF862944DAD445330A39262044762B71154F1F70CB7E3C17D9F408770A2A84
D997DB1F296A6CE7342885DE50A56059D4C4273ABCE36C44447646D3008E3CFF
D8C688B073337D2D17BBA18311CCD12AD20B1CA2A089D3782FB2B3B6EEADBC44
3049D983F995B8FDCCBB422B7141CF2A18CD37E3D1881861E20F21FE1495A8C4
4AE43F619CAEAF906A9FDA3147AD8CC9E815C454C48DB13DA554405F2D3D2F0D
D9E5B444E91E3A367F8684391B82B3F582F6DDD8A16210927E580344E0F2CB44
AB0C7DC1F6F30BA8CAF30618B649AD6515BF40215C5DC29938DCA18549A76C58
820F9C34A579DC744C9DCB27A9C32CE991925746DE82EED780AA88C236C10D16
AA23BC68B5DD115D3E927A8860C8A264725B3CEBCCB32842062F237BC1AE3F2F
0DBD9C96083E3255BA988C2F570B7CF9E131DB58CDFA7A9C38C34043FAFE47C1
C1410DC8566C27E51C566B774A5EC27A70AB004D56B88CB017FA1CD01A1C7149
ED39E39A3991250B2F2775300DDF7F463E1AF0FBD761065F0170EADEF07843FB
D928CFB1E018CAF2FEDECD638282E6B038A1EA5C478841CEB1C824BAE08D7349
3F37DC40CC885D6DA3F6C5B008ADAB2F3829C8E1B019438C5630C4F7DDB249AE
4035F197E42E70D0584E6A07308BFE7588566C9ACE4B28727EFC4744611A0BCE
3C56F16D2CB3FC3FD40B684CE3F5CBCF18BB4C15BDBC1739321C2CDD9EE13C7F
97776A75E9B5C1F014F64610BA8311F1C0697E04E4C3BCA79544B1A2F7F458E8
B5CF785479609252D1F2ED60CD8008A3C375537B51C162BB2313A2F1249E60B1
AF72EC16328F1210352B2FC4086EDED1CBC19A2D1B1DA0CF9E64C49F71141121
6295BE347A595ED16037371F01A730ED8CF2B86173667A6726D951CBE22C06DE
B7212C8DE61C0BDB6A7694C4ABB2DA0806A7D5500C33613CA66BEEB8584D6AC8
88FD40E11A2E9860A5116F5817AC5C262495FACD871B242D5A23EB05AD4F06FE
29CD37FC7F29FEEC6EA09A269849ACF1970C27D9186588891812281A6FCB8E5B
46CA7A230C5CB8FA0A04DA95C1034CD63FCA2DBDD68BB2495302A55BCE0C8A5D
738729CB6FFD30BDC3A7BB710286AC1FC69089D0C2DF736314902FC95498DCCC
5AC7183896EAD99078DA819E0EB14EB7512D0B363DE9904314FBA6A01B9B7EF2
E9F493631C7801486A2309C3E6B61EEE1EBD11E4452D6436EB4475DCDB64DDBC
918EB74F75BCDFA0FD555CC3AEFD708F9588B321D89FB35E4FEB9FD8B1135E14
38D7E6F98866E06965DB65DE547EB4E722B5D2CF65E5EDE7C08115B5AB5276ED
2D5DA054306CE8D34A52C809BDB878C94680B8A5F778BE9CA5CCB6E8D437D79F
5DA0F98A7FE4090247EF455089B259C2681A5E53E4FD4CE0BBCB1EF4846C9A98
445EDA43A254CB69F0CA65AFC229DA4625BA05F13596AB1539AA73D36F954FFA
50D4B15889C5D2D0584455CB892FE3AAEF24E2867C92CEC92279AE37AA30A64A
B00D510508D116D21654125F0C7BC98DCFA07DDCC5B8352DBC68CFAB56609A6C
C81E3D05CBC61B8F8AEA962B6C64C3DF49C64535CD96BCD6EFBE7466C1621C3F
3DDFA7E699DBE5A34ACC744FFFBF8A26B2ABC22BB8BF90E8466C40E841BA055A
69F5BC4DC32B2054E3E6226D0F9449E751ADFE9CA17ED149FE208D564946A3DF
6D943E02EEECF8CE837A57EFDD6BABBB2BAAD5A7ED6E119C1EBE7370619669E8
B6DD969664DCC39752FDFDA142655C2FC65BF71C3E1BE47CDD9E5190577D52F2
3A6779A854396B5837F757AD212BB6767DFA209049D59A6A56F549877456CEB6
BE1FEA74F0FB090A684A89C6EFCB64CB0EE7D86B812B43A2394774D690A663F4
EED4D30B503ADA3BF2A3A7FB346412F59AA6F8F9AD8E53B5663B6E5678134C98
FF7FC32166444B272E588D3B3DBA5349AF882F652FB55F700B26B200F5385373
0D8FEC9A7E2E5331ADA033067170FF555A278D3ACBE04DDEC820B932F8A214BD
6956EC3DB550CAA63CA33AEC817D2AD4B599D2B502F398CEF856181926188F23
655AD885C89CAA1D0B649B4A331B20CF55F465BD62BFAB4EEB796AB8F5DF8BF0
6C3A731535DAFCD4A382DA7633A47020E7047FE16F87149E8762969E547DB897
42F08BD8ABAAF60B45520F0CF809F9AC0238366882BDA6A3584CD4F7AF8EA1DF
69EEFE1643B8E180C4910555CACC54BD7F6937AE75964E5425B9CCB6BDDCDB31
08A8B21C97A27F926C71C7C37483E095E56F4360CA380E659F1482CB07C4051A
4B03CF618E858D2FA655C38E7CDBD07F709C016FD46BB7BE3F61A0575FF9E20F
F64DF25BFFE49438E6FB6E13106BFA4747BC9263E2413E42778B431BD7D92587
90BBD4A058322A5637028B47AE58306868754E230EB354920C879E7BEF40CE4F
AEC848311AE816103080DEAD178A55F968D86AE811DB0C0259B6518D74183C70
9938391D0FCA6FC2E037042D4A4A17BAAEB17CD602348C1983908A2536489FE2
BE247E2A7BCF67AEA4D9EC043983C29E621329DC29F89B353DF96C3717FAB51E
5FEC4F10748C419D77F3656EF780F67E5D495421EAEF1FC69C852106CDB4CE35
D6B015C04DBD464852CEFAAAE51999DA2CA54DA9F92E7907A8AADE15A57913CD
D7960CD348147B168CA4BFB62F369E651CDA179AF83597CF72DE95E93BA8B521
F62D302C05A52202D2C5FBF793C8D923CA250C76474510A6272DE5A224377A42
81C90B4184DD1E716D08C07961F96019560398341C2763BEDBA33078CCD9256B
76D77A35534B6390520EBF36FA22C2E4A5360C6AF3E198B9920AF640C6C7681F
82D3E66173700B094151EB2BE093FD5533F86651748577654ADC2C5F651252A1
B6F8800BF82F6256F8353C44B67F9E2563CC6C12C088381B871DBDF9CA6054DB
556E4E041CF8484CE5919183AA2087A3375F85B14FFE4C760FEE82E354A9FF41
5957B9EEB3A4131A7371A8A0DA4F1C5C865B3A1470A6ADDFDE6221A13165B05F
9967B172940A9B7BA67BDF4551BC151DA316E24161F81BD74BEB5C8447575C77
8F2F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 75 /K put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D72541D045F7BCA10CF59B35F469FB17
8175BC6B23FB66BAD45F44857AF1CDC0F19C8D0285CB4E39133D643260A363DB
4133473848FB1D669F82D4160A072700C4463C160586CDAB183CFD195B0BD033
DF111B2CCB13E1817B65D34E0D9E954AEB6D289336A42B3AB9067ED6869A7C87
DEE03BE9809A5011F35861FEAF1408041257EAD15AC7106C507F254D7DEEAAAA
AC86FA653B3FF3AF83E8680C4298017AAA8D45CE644C9FD22B2A752332E83B42
3614B936FB9F6A16746EB18D0A8B6FB60C920BA8CC77C036527F2C4F803B7ED9
E64D99C0C52705F57703972FFA3734B27442F1FA3090FEDBDDC231B85AFF6EF4
EA3716A46C1F8EA256BF246C14E1360238AC759E0A4F23B77B5C34A32FA51A4B
984FF741D70B8BF2197C6FA7714BFF2B07C5D4D15E906A4D3AEC603A4382A2A0
6922A90E994163070AD9171889A5764F8F0AC537DA35C8CD794DAD3B8AABFE50
8D129FAA51AAF7D68A60DA9F73A9D36613378FD39C78DE0FDEAA6B668DBCD543
68A961C1075C98B6EC97085B1F5E4BE0406FA9B4C5F0D7AD05A0E7A076CBBA83
C2618CA7020077FEFA38258D8141CA9763ECF9CA8E57CDDFDC4F8F98BE3CF47F
D54A9CFAA0C37C6DB79141B188555CAAB45DF4E3C764274A17B01CFE349AED01
67FE0911E48988E23DDA6A797518D41D24D7D97E36B0A6443C10924F31CDBB11
5F866285560DAFCBE976F3ABE9D60966B714833088E5C3EEC89C1F6F9EFD4350
00C413450932D320E5ACB35555AA8728F0D2F17A0918194A920F4AAEB90F561C
56403A09005E5F2515DAD9340547A7E6EC18C7564084F927FE8A7B0A0637CA64
49B64900B805D678DD1EABA6C13050FCBB2D04764BD2A1C73888ED04DC833B54
FE2409CE6EAA3D17E4A82FD0DF57DD8C813C897B09A5715C312FAE829256AB34
EC1986FA7346A52CCCABA96E0BC7FF1800E19F7E07C73D78BDFAC539B482E317
1E25DC302C860AADC65E3122C63F43BF72E542BC9466625EF8D4358F568F8C2D
A5DABBE4564B0E2B0B2F2442641EFC543A15D8265AE71E9D29693D9AC9805D5A
2890074EAFFC8948ED72236023F0E9DAED512D024828F35A351DBB2C83483406
B756D433D266FEC7CDACBB78BA1CC68B29716E69419C3076060AB34F3BF48472
1C7B7F55CAFF44ABD0B5B33D92D83305550037A757EAA4FF69E330F9A8A950C2
7EBA3F620D54184FC12A5ACF3AAED56420CFDB3B81A1B10B03AA37559EE4598E
3FDDA1994833BE2BDB7582179432E02337B4719FFABAB255535425CA1C8DB0C7
B0C738B42C3B2D2E9C6E09B2BF8B7566BC34F1CCB00F29FF2B9A65DCFE6C69B4
8569F7B063A02D79D55EA34723C8EC4129403D39DA0C812F37E5AF0FF5540C7B
789348BDEB5DE9A33BD2FAB007409957CE7993B0EADDD9FDF65D79DB7E81F820
7CD48620D8F206D240438FD277DD78259457752B05C43BA7CF1FFBC83B92C056
DA142B4BE931DC8D7409EA6F217038EDE3CE5F2C3D069A1E22689705ECB5519A
5B66F55DB02B5B2F700A3D41D48B125C6302931052608603554A0DB2DB1F1D1B
AEF45753E2239239E9E4577376E91E6B0DD20BA3126F9252BBA4DBB853314813
455AB90D6C4D4697EB763218BD689A961D3B8FA3EC8078EF33BD13EBA41CC6DF
716AAB4623FC261537C4C17FDC460E550C2C571908FC0E05CA0C92A03C7096C2
AA92828A6C5F6679C2404F0E30E6532063651C0BB3A2995328AE915FE841EC79
3BAC395B3BFD21204B9007BB6536D596E90752A63BA2C06FFA53A66A4AB4F6FE
5CCB6CBF6A080E6CF3F7F2B3640642558F5B6DDD51CCA76C870D4435910D50AA
CBD854C272812D48DC6637899234E89A9F703F632EB88FD5C8FF23454EBCDF35
113EB4D08A366A02AD194E29C3AB1C9FD88B366BF8BDDE60A27C8FDB27FDF4A8
010AD9942EF5AF14587DC37D3AECD165912A576BF0CF0709282CBD2C6B085162
53FD52D66767A0F807A49BC495BDB07BC4C13957FA4AECF8D35DCB1FB919029A
33191E083BC240A9AD143F7F0499127E9918726511D08588C75C8CE9FAA31573
1C9294BEC9561D411F3A37123A7451DC09AECD2764081B7FD0A3FD635646F778
5BE8462E2CC7C945DD7E76334060B9BE81C47B33C07EC6734C4BA701C6231930
D27C8A67140642D4543E4E71880EC75182BEBE386B310FC3F01D6D4F67F16DE5
09C8F9D526BC976C157DCB7E2FC3FEBD9D33CDE1EF0656FDA74E01DF117FA0F3
21920B512F82A17ED50AA9CC246B0E28D0665035950AA8D92C73BEB48C4BF9E7
7D1CD774041FA07D5AB0B8D5CD29CACD412751F60C15DFEDCE3FA458E5D3D198
0F281A28EC3EC562F8928955CC3BD5F81EEE9B8BCE7A740E464866AA4D15B85A
B4B7C23594E743CF71490766CDF9485038E053F8743493EEB46962D79CBC9DF8
07F832BF033D5BFBC1EC88DEF5C8C01F0B3CB5B98C2C97A3AF6E31D33BFA541D
414D9517A1ACAE9BF748DD2A66091F80993480A7CCD38FC2B5F401C36887CEE1
02D412AE88B976CE7807A0D1099688219CC1BF75E681CACD960946F48E0B8F0C
74585AF96389E0CE9B1A5C48F71E075363071147C1EB65F6F73D63853374A357
1D226280B4C9ED291F187FF294B53E50AECD71905C68020375A0D147910CB6D2
25D322A9B7BCD9849475BFACC5E95ABC596BFB6D7CC87A266E895563E466BC3B
0676EBA163C381EC3F107E9E1E2A0AD0CB5EAE8E2BFFE728BCDE4E614D015312
9B686ABD8C07320694370E3838AD221574C0CF5F83B40AE05E2781C15BC8C147
64836841193CB46E38737A8EEC5D49B40B829CDCFD5FCACED410A90AB3E86552
A48B2BCAB7D1132242CBB082BC332FD1219593287D50A41B98E14BB0E53AB228
3D0219A9E1DA313D7F062D5DFAB44387784753E5ECB6C786B8674465ECB9405A
FE05998D8AC1A1C338984A5FD54416F64E04CA61CFA6C14FA50A3FA4F93E104E
F53CEF13EF8F956DEF3A9535EC3D1C81C990D3B80B36C73837259101BF5B84D4
C7265CBB3F3A63BA8EF418C41BB9BE33AB860265F89E6416567BBC7A72FECD1E
CE9F216CD12F7B8D91EA1E76403777F9EAEE7E8EF9185E41F8C63625AA6BED57
7AA20B642D5DA915E62CA1F1B2BA5DB8FC9E44C5AF6223A687D858D01A4ED5F3
677F22BC877C7741078B86AE0179C9538515D430C476591AC7D5BFEA5BE5F06A
A705DE7C2410927B36CE54F4537BC58C83621D6DEECBD7BFE3CBE0546859D4A5
71198D06C4B374A0589830E8760E528A8A7CB1E728A269B486254D7702B3F407
7BE26F5CB5497BABB8E16BD08F9719D460FB996B0B38F968882C4D0549218DE6
F8CCFE4CD9B251D4E17DA779638375B1D7C333744A0239280CFACADEBDF96C59
0F3C65D2547167ED9D32D257D99285CEEF19146CFD89EBE387AE9DE3167E4031
624FADC91DBF200BCC4FD8849A67F9CD8AFEE6EA958C99A06BD46A50F9C9E314
307AA321C50161D83CB92F0B4D1F1A7055A20DA103444374D0916B9929B4677E
8BC7E17A295C5018F996ADB572C1B726035B63EAB41E25AA325150A533CA6485
365527F985BE49301EDB9D91FCD158AA329898F6BF605F8F52228DDB821EE6F8
6BCC296370E0ABF3CFC00512CB3B01DE99FC234A063895C6417DD0CCBF587FB9
07A970D8817427618B21DAD050C68EB1D4F1B7B5D9996554DF948167CB772C54
AAD33F7DB4A1533EAEE7C29EC5B804052B1DA6FF09C9D04AB18D7A02E516C183
7ED43CD51DE59189DF9B45DBB1C005441A18C68A52D5516C99BFE28B84B34673
9A10070D8A9D1BA0333501D6D871258251E02D57D416913F4996B4F30F501D9A
04504DC3BE1FDAFD9348F51272DB8CEA7CE89D6197D78BB97C4FE19481A5540D
F37C560B4A39071D68F2FCAEB4DC7315B46C504B0F8306AA48EEC40BC5DAF1F5
94090CA7009AC5CAAE3438281A4A83238DE0EA6288D76C7C5453030065C7D18C
8AB714883D82D6E65DAA221C66BFECA0CDF3DA5153B6B97CFF8792C925FC0CEB
C563B60925E6E022449DACCEB1AAF0D28B6BF25BBA9B47BB8B91B116B12CB0C6
FE3514B85FF5FD29C5B869E7D895CE91C1EB9518AFED518600CA13D99FA95F67
AE4DEC84B967CE31C5F19DBAD9FFF884E2617F216879F3C4BB202DE985FF00D4
21EC02C266CD77E2FC83FD5CAB86A89F9F8C34B817E956A576933CE5218600E0
F9FC89EC1998584B8A2D8E2F777339B7340FCC8E84F20CEEFE25BFA889C8F297
392F417E03D4B60E8BA1D491C347912AEDD546525D58284D0FF4471589DABC35
BC3DB4676779591C2C139BBF48671F7481B29D9807955E1C5A89CED3AB7F716E
3E8225E9ACAEE79D819369A8CF52FD4800B8015A0A022CCEA31EAAF4A54F936A
9AD2DB1FB292998A0972619D25B5BF949853444226580A13DC175D503FC0851F
743FB9D3EB806FFA22FABBE7C484A035B4308561E56AB96B354DE7FFA930F756
B90795C0D6608A4253CAB976D10C69F212FC93C477EE09DFC590A4AFF3367767
F33E6DDAA85F4E78909E787E3FC01D35BC1E296670811F0DB9B6CC6ACAF597EB
9AFD6438483851C2F3E7037007A05825ED10512A8F35F9EE3497A68C9EFB9E83
3353157A5F7C185BB0695CB857D7D1139F8AFF5FF94FE5F3C90B752C3EBA9C73
4B05BDDD272C9C80CEFC693354061328A86C2A04A8CCBCC4156497666B0DD23E
27D5D0526CCD2632BBBAD571C3F11B9CB721E67CC2F30BE1500A3D089710EE8B
8B0B25F4C5BAD389133BD9CD6E559CE8E10B4F1D5047921862DD9B2E33F7BF3E
1ACDAFB77514C00EFAC8B1C139B7A4EE5090DCFA7FDC8495C1307C30CAE57482
10897B8EEFD4C36B1B7F13209857C6CE20C8E1291CC12A53EE4D79E75BB32F9F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70CCD429EF7488E7E5C782C8311B03F19DC37
7EF382B6427E01E60CCE30B07576ACBB6E7EE72D60244102BC6864CD99B068EF
5C3E6357348AD409FC3794D1DDA03961ECB2B2BBC1FE5C4865D0CCCE24AEFF7C
B60CDC148E37E05F6347E3D00B90A3A4335C6936A3821D250453B717ECB74A69
D50CD330AB8C79E320B141AFB0A29B682141753FB270FF2FC011EB0C265A7F46
9C62A20129AE3E4BA0F07DD494B4114540300E20CF57FCDC3F4E629FB0962BC4
650AEA303ACE987078B4501CA9C5FDC801B144AF10D52201E30265C6F1E4F392
7D1831307D5C292F043816FCFE7404346B5B885308D3930ECB2586DEEBED572A
5B78F2F91BD1E02DC080947C26F0D99CA6F2EABD7C71E8D9276FCFD4500D476A
9F7B6100184F2C3DB312ADD4135C4D71C304C1517DE76F66ABDF150C4220A12D
CF9423C342D03F8A82185F484CE3BDE42D7A0E9DBCB32E2FFDDA98F40A5EDA62
57A5C2A53B9ABF64699D340E74D7A866214D195D4F47B76154A2169741AF1008
C907041C068CD3F2F1D1279B5184FE4A1E3AC76D6C4835F0D9DED65B83052A39
47A20E563AD874884C4B1C1C408C193E708E58A72802D8947A4232789E3551EB
F9A5555221A0E220B2F71570BA086A89D29836A164952C6293CB82291253DC34
1FCC259318638E9FBAA22DBB57801B7B3069346428FF14F8AC1EB3F7742A6E48
F554D137417820153326D03C002BE2CFEE23856F48A519ECF3FDF799E51D1077
ED338431A38BD3F3FFA5DF8078A2CBEA54E2659A986696BBBCCE59FA98500ECC
91742DB62DD10C66C85DBCB0960C198B8A02361E7591B7C6A2949F7E314A6DE1
AFDE64B67E0D1D4C1D920543A266D0C2512C0BF2ADE9F1C09FE058173A37AF37
EF63873EA5F110400A854F1756E48ED4A738FEA11249376D13A0823D7190AFFF
DB523E5F8D87725FA50C6A01FF43D9640FF0DF06AB796DEA6B3DD8CD394AA08A
1EAE40A2E709318E9239131494072A4EDC14E6451D28E7FC3904DF55E01981A4
A18EC26969599FA5BAD606D9BA0E5EAC966D0D29CE4DB2425CA2905C0F3D7E02
80447AF55120DFD774E9D93C2F8005460E624CF65874596AAF8264AFC4C96D49
0966C3D678265CF6BD85A6264605F5D198C2CB87162B2D3823882F9679787CF1
7ABF4B906E4C1608D4246FF813CB11A2A3AB3873D3D9BC885725C146B966A3A2
4F87AE7673C50BDEE057F4DEC1BE4AF7C09FA259BCB22B3FE1911ABB6256F4F5
D030A115BA92494D4ADBF61CE0CD679903C8169B89B184DE294044434D530A68
46AFF64F4557FCE536D8E8F7A9EB869B81DA420AF8D7A344D715751F11086F67
439065F7452E2E28A85E6E1EA1E1F98BB321D2130F34C97ABC0C81FCDD0CEF53
59B2DAB8797A0E2984629873B3361A15DC2D00486CA341BAD068D1C12872079A
679FAB64AEEC518F34A3C018B6B455434D82267F4087ED142AC7FCC63BE0A8E8
AF211641C05D6637684DD10D189FD3F65F962AC3EEC4D9F712BDCCE92FCE3C0F
8EC98FEE9FA1C653C572F2D65E4D4AFB72D367947971283058310CEDB0DB1248
205515C92A8F3B8C724F25D7435F30C596A75BEE97D6769C3EAFB62F6372FD9A
6D049033FD54EA81F7F3B477FD15ECA11EC249BB95126DD3E5894089F3412C87
F820F905C4492ECDAB8D44743298B61D59F2E64D8412381ECFE63DA3BE1FF842
4A7BBC133D6EC3A52D7EB9EF10F2B95FA56BD2BA4859816B4E77A8D2674DDF46
E63B157728A97D06FC5691C938270AF29141FF8B5C8B4B362A7B53BDA20FCB85
B40C600474387CE0D383B623987D097A99AD9C7934E03C195B485B38703397EE
5C9289A540757E78E77BE76F7A975E136145BF6BF7126E4D5242A14F3045FBCF
2F2A948DAAFA2799B32DC53F76343D46C3D5A67F8B52E3174A8E8F3FDD94D87F
EC66ADE17A55B76D038F5BE34851804E9D551020EF07808C48A35EE0CA2A8852
29EE37A08BF26512D3B619D648DF044ACF76F413C3CE6E391FA286D4C5CCDF5B
DEC342928D6A79625FA63F8ACA8B41043EA5730DBF4783D2E0BCAAE2F75A3328
B6AE84124924BE8C37C1E455DBBAFABC7790788805BF0AF1CC6E2F98D4593CA1
40D997EEF5ACE301CBE15899CFE737528ED0748C8A57DAFAE09F0A9B6749C66F
55DB0553A02BED5DE7B579A89E2BD4491B61ED45F772A532F80448767A6E2852
A309500BB8BC5AA57B9CD0F40F8168F05B2EEE9A194AA4158DDE3D03DBF5C3A6
8A5120FDF2F3EC9C00BB1712A05D625ABEE2C393F0879914AAB54EE661DAD3A2
43D39559F78B5684C12D68346FAC0B30B4C3F7E1B41C3B6A6F7FB82137A62F0A
5C77CCCADC2C5A332C36B254869B936C90CF5CB7869A8AF0048AFE4AAA5DB5DC
731F6278CB311192DBCAAE541F3AF7719F277C3617F26D23F456AFD2BBDF7A78
33FED6D84E6F659EB751B1F7A7A63DDBACB43BD02319C5B2744410C12542E736
109A2E7DE8EAE44C79B13DFF9EAF59310E8E53670D8107C1549F95ED67497393
D7918343B66E6BDFFA4E4EC52C6B8217538CDA78A06DAA0DD113268C2A182954
83C6D3EF51D18322B6482FED0E63F90B8DF6B9C376652BC8D7C02B0960DA2766
63A64A5F0538415EF552F2B1F53D2CAEC1150E675C5AFB7CB1576A758547FB2C
4403E37D0DEB6527B5DDD15BF8847E45E5C092E2175FA8B5EAF0F738951441AD
E06C3D4A83C6968FD5E6D8F4B653C1EB7984D2AC4CCF96EBC8D9E1EC42A15E26
E622C87B25244131E55DFCCA6072221C9C21FE32FF030E72F74F684118DCA629
67D9B0691CF44D1FF800D3577896A48BEC73EE486FAAE441BCE33BCF7F2BD9D9
954D71AF0B9481CB127D73A4761FE4A57B05DE6B5585FE7F05E24019A9403065
3C81266E0B7F9B1E0458614E75394F8C9D22CE11F4AC2790033859CE1D75BE2C
3409D3FA39A244EA20674772C3661D55294D2E543BB636E2BA739EB8CFB7FC01
B16CD1D6A9C82214AE4D66DE9001B03AEF76AD125C2132AF7CB8CE260009D5D5
943AAB403132C74D75B189AEA52679BAB4312E0EA62624E5F7D7AA4C30E9F2B6
DECA36B13EA2D57539AF4AA1ABE435B898C94ECF7F946C607FC76C1283B2D0F8
C5503D7CE95DA59D42FDCC711B02D631AF5753C5DFA989600A1AC2FFC0661CFB
B9C616DE329634A2F68417F95789BDA31F92CFF55CEA2D6ECAEC73240FE2E492
354BE4E6B5FF3C5EBFAB62163D969AC8F655328320D9CE707BD542D159234BA3
5531343B21C1B8BB1A7A9D57AEF1E1DC793D431D2FEE07F190E7D0CBB8AB032B
40DC515B1EE314F7DBFBA5B8C66122658298E12112C2BEA8E7B81EDDD403E9A5
663374DDFB5AF18B939B9220D3300A534D8D57C7B7EFD637721387596C2AADCD
5B7012646F444B69D0B0E0EEFA5A06D5A6A32192B0C6787CBDD100507221A753
90F4C2375881BBF374673990F8D02CB047D961E78102BA4A3EA094B08DEFDDDE
60530ACBFD5351829C1995BE126B08BC97EF6DBDED57D904DED392AE5DC785E4
710EBEFBCA1BAC884D54008C5078AAF89104E6304406183E363B920947957793
3880FE48B3BEB950F5DF5063C35662C54E6291AFC0043B52FC6A86B79C0FD9E0
4839964974C7CEAF0740231BC5A46067813F8C3B40A71E11A71485C1A5817765
7D8496688C68D98FBB649F39A925F7521D089C71E75BD626B03A75161A0ECE2E
2909EF7C898349DE6400070597F6E2089BE1328FDF787893433F7CEE33CF2810
647622ABC97462878D047236A5A5673DD115FA573BFFC0DB20027EC275563D7C
027532B5693FE12308C730052A2C5A9A7B7510761D09210830260BF24623B213
418EC718228843ADE6C693F207B3838E75D1547B44CE136C1F124520416785B1
8254E523C579C7BD997109B7A63F2AC55E0E26D9DE429E63DD52F6748F13A527
BA15C47F1293F066685C9EBB79134F59E7E976C01D1A75EC143818F47112FA0A
806D80A91914D0F796A4BA01B6F81510E26E9845771DC0AF93BB51C908C391EB
22FA9C284969C0B23CCDDC1490B5DC73AF9ED8B3AFAFA20C24ED6F9A841501A9
6CCC5F88628FF1B9BE9EA7838710517E222267919493AFDFABC240610FEA9884
DFF2FFF3AFD82F35E3F731215F173BE162C16C9807A065F91B95A609F9CE4278
63A62D978398DB1F3F627AE63CA11F3288DF676709109AFD0BE6FDBBA8A1D641
5FD85D845AB240BB6F59A31541628A9153AE402ECEAB47A7D013A624C2746B7D
09AF596416AE2A1C3E9C54875B2146E9474797C8895B2CF23FCAE96ECAB2D983
DF5C42EB70E27D3CD769D82649F9587F1281352CBCEA720593EF0A8CEF9D1A21
79828316C30F7BE9D36A1B23DB9E1D80888A50A3B056AD12C315F1058005F88B
1F9E933225414F6C1E0BE5C4679C0AEC5DB63400F128B8FA726769AF9D46AE2B
198FDE3EEC9241C66599A36B76C6EAA4D4C476D5CD84059F7DE82DDC06869170
B871ABF423D62A339ADC12D8A625FB22B0E483B065765DE631ED588181E253CB
5F1B9292CEB93C99316AE793F3622F969B4BA742FA1B6919F70ED7639A4E5BE8
1E9335C3EBCB4592E50CE9D521A486312251376D04546F70D6DEEA6C97A27DFC
F4696A6277258EB018D070B860EC5A1ABEE96387515BFBE8C969D554E7AEBAE0
02CFAE646E7D0708F27BD705FB17572E0F4C215982169C1ADC3F4F0D830019B2
AAB051AB2B4A83AA70AE18D8C058EC0345C162458466F9555988BA82D243B72B
3E700F975E2CE90CDEB917B877BBB6241974559B357086DBDE9949A646271166
3B411548A9CBF74D919C851B8A3E38D504806D5221009E084A1DFAC4EB04199D
B282B1B25FCB415DEBB24CB4DB4B623C6E04BEA28BC877C26464F4A571336A57
E33EF7F5DC55B572B9CDEA1453EBB713BF5928C6AAE7CF913B742E34003B6A6D
11E31639FE1A719D9A1CED5610A6F1E22AF98FC6CD62A26FBF65D33AB0154902
26315995FBF7983E72BF5FB4697A19CD582733B90F836D9E1C94CBEBFA8218E7
5D75C6446565AFAEF6AEF8FFAAAA591759B1CF7BBCC51BBE3FC27EF1FB17A3F1
0D2A23E38A381FD50B39EBE2EC605A247FFEABF7F2DC209AFDC4D16E423D42F7
24703CE426D30C5CAD3944685A49E4A05E2A67BC0B49A0929F364814241BD563
E59FE2D3D429271BF7931E03DBDDAD15BDB7A57F83C6F0E2FD89262EDF5D70E6
D1E42951E135D9B0D42683701DA587C0C02B262755F9604EC300E51B10EEAF27
2815EF1E9648EB64B5238A0270CBF8AA5F99142D94C3B92BFB551B999532439D
F6B88E83A9B98ABA6A55D7CF17DC22E61E47EB515B134E7EF14D2FA18ED74574
4A7FB07470B61A5C0885F7BFA169D67B3F1E948709E910971E1711AF46633FDF
3DBEAE9CFC2863E4A8EF2A1B32EB605CE743C4278742F58080E90D4EDA24B807
465F766A7B7B9907401CF6BC41F06633E60063221678159D8B855AC137430D84
23CAA523F7E22E909450C9B7D8BFA08E3B5E8DF6F8C91D6A159DC3E36DF899B9
98B376BEE2A32764E1DE91310F945B661F0492EF7FA187394E4F9A91C9411D2B
A17BD1BC4C6BDDFC77B8D306BE1DD965714753EF35E4988118CE3A961D209D7B
64D41728B1B4F9C7E922F4707CADDEE7C91D007B68FE4B73ACD391A7728D51B1
8AB0F84302CD72BEA7E60B88A998443A603F4407BFCC88871B199925D1A7E434
4E457FAF0046F370373CED579DC8E217A2EB8CFF7F86858385F8225961BA56B6
C79D748E661E1968CF6310156350337E8E30189395C5747DCE03B73891C8F07D
885D3F8CEE969B0CD52DECE8308560FB5C764E3914D2828D3849D034AD73F1E9
BF5DCA6B4088A36ACCC6792C397475B6BAC3AB0707F93CFE6B8FEA0F6A0A18E1
0236F7D5546C845036CB9D6D59ADBEEE5E29C24774BA8F749ACB7D229C035278
80308589D7D3414C62CFA769A8A9A225FDFCBEA7CCA35B84DF97F073960B8F17
CB19314CD114663A45723E779FB527E6180FD267393420DF053DB9B8A3492CE9
53F0BDB7BDFEF235EF3EA94AD04809C49896E189B6A2D64D422EAF35B01D2B88
7BB75C098E62259E101EE9F16A111CEA4FCA21F51A86E012D762DDEC7037C504
B808318144189E8241189A49A0FF4B48E76290869D0EDD7358EBC8A19A0882EA
2A862E3D561BDB7856145C5F0573E4FC894E0CBC4711547EBEDCB191472EDCE8
000BA8868F21A7EDF59A6C1D5B6A552FE068B24505C9FBAC31118758CF3693D9
F0F43683A2E370774B098F58E712D6BDD8A16AA6C3DC30D2841C2450465852E9
ED4C85C3C0213098CD7062E113B840A7B9C3E08507370BE9C372FFD7C63E97DA
A02890CF8802E33E6607D80D09FC5DB2B0DB7D0D6A65B35BD5C90271C7229D8A
BE69C6E80901DF02C398BFBEF7ACF1F27D80A392BE0BBEFC261AE9608FA7E0DD
E050FDFF3FD398A3891B1A1A07D0E2DD9649F0A4E757081E9B2A8BA89FFF0689
07D4CFAEBC8EE35CBD80A35F376F7719EACA56793D9730C42B46754AFABA8A58
5B4B47941175F4F0D5FD48073013A975251FEEC3549711979E868DF2D028913C
BBA2753DFFB38C456582DF9178863E3AC6FD3192C306B8A2CBA9E54EC6B9C6DE
1006E0E442F71B8869C9B3175D809BA208607561CB285C39AED6F2E5DA1CDB6A
854AB16A9D029C599E0DC47553569343E7DC72D7498FC8EFA9DD01218252AEF5
79EB3DF5B7C05CBA4E45B271B88655773642991B9480F7537CA41C205A35DC9E
8FF037C2DC99A63B5F7DACE8C7CA637F01504E23FE89ABF71F55ADF71696FA34
EE6093EA58FF876F5E49914468DD0C75A873E0AB5D29B3EDB1C6F2D0342C9801
D40A7177CD8F997A2AE2E200D2E95E85C67F4FD25C64BBBB8EC79ABDAA611DCB
E0F1C9CD80A437237C14606FCC8C95780CA94F28C708069694B448CDF6E59662
CFB66FC6194B0EBFBF5F5C5EE3B0CFC0439C6BA920D51D994E44B1B59731DE73
AF5A0C83BF2EA800EEF5302FC20F67C4AC8BAD3EF0E79A15FC70E0FDA9CDCD11
9082ECD6A85C2D22DFCDB3045F4EFE77037671FAAFACEA08C7256F87078B0DE9
E385F034B20CFD4C9BA5A73E30605223E9BA1FA2809E4069B6366B964BF50B59
D9C0A8145F5C157BD3E7C5B56E6A42B578E70A61069476CB4ABA37445A33B70C
2FE32BDE31747B008411D4F74D74CCD66E35B8D5BE8EDF1902CB0684C49BC546
38D43D605CF835AF645BED477B33E8099E3CC727970F6AB546C3465B8BD1B7CF
2887B36FEAB9B47DBE17ED11483900275C628F732080CC96B5155C759863236B
41FA029C37C1D7144127AD473C96E3E6B79DEDB2FC0A5E04F745BEFE9B1F7C85
F99FC3BC5BD82C4F2C9F49BF4B159C76E0803E3A0E47613E2D4933A43455DA1A
15EED960B99F1F19D47D9C28D7A29FC46B8EDD90DCA9AA2A7D137B668A9F37EF
911CB4D200937F8537D9BE0354B50089466BA1AC28B8BD30E9F2197315730CE1
41014C9E27B8809F74AA84A995C71A69F35BD07533490E74CB4AF7149FAC6F63
3B47A1D627707BFBF5BC09B6B213B7E88F8EBA6A1B79866E587C1F110CD44283
11ED0BE4C07AC5E2DF096414FBE3A6223B8F9856A4711B9DBB1DA9EED43F4717
331A612E3C5864CBE1FBB502F05EC920105675C61D078F996AA956BBCDF2DBAD
9EF2E69AF286DD3D83B332724ACC32A79C8E69D50B67AE4ABEAA79E75DC453A6
BA3F4D4F3A2B50D821EE3D5C80D2D2404107D8437F39613E1D27D4A3A72820C8
3FF281742F340ED164BD35E17B2C6A7868C3CA998CDA95ADB2BBEE10963AA58B
24BDC69D18D70B19C5EA60BC52819D54AE40110FF48E1BEE3129C0C8A2523E9D
F33B1C4E6D6A60B4DC479C2EF228D873C6790FE1357EC49F4084FD66B4AA9A56
7F6FF27418CA32DFDDCE54C6AE4ECC0F744A768668A137ADC55DCB8C7580E552
2245593DE23495C9A57D75054258DD49CDEDA7739B39B6B828EFDA00F21BDC87
6237E6A1A899EA7F8F3C36944B2AF551D68658821FCCDDA3B478DCF88C95654F
942EC84FA2F1B61ADBA14857E38279FD07AF28B483A6B7B3BDEA5DD4C273FDF1
F99D419716CE9B8A46FEF7430C435147D7AB2425DAFC61171A085CFE13FEE73C
8BAD9D9F288A1A9E831048CF75537F1758F44D0D886E5E273EA77434032E180C
AA449266F3EF69C2CE9B5D4BD5F49978C85021C4CA4C0DD6F93C2D9568670247
BB2D2A5BC34740B5CEADD049A9FA44B4E5E2277DC44D4057930C309216F6B6D1
C9C6EA8668C65A939148E74764D3EC0B1C6A7EB78A881D104BA8A2390DACC0E7
638B01AB4D2CA28EE3C5B519491A60EBBFC1922845122D061407B9D1D874BA57
7C80ECA5E79FEFF099523D911AC758EBBDDFE0ECB50D47D148A733CA3714388A
6A00AC0B0F5ED48E01AA3F60151886A0322FB38E16442CEC3CF5A42CA4E2D97F
FABDBFCDEF2B4EAF046184171602820F1A97E2D90F7F98C42E2DD4A4535B7014
12A6E2A461C893A1D1912D14B9C6D2B813D4D0E4F53D4C8DE7E3BB7ADEBA9C88
953CB704A8A0BC074DFE06F7CFD0B74F522B861E04E5D76FD9654664E09D687E
0BD46C0559382BD29F101902FE7665D602174F75FE535F9EC32616E92FEDC947
98459CB4009AA15E4E40F80E967D4A4BCD6EFE838BB42455C1FD9296356DCE5D
362BA3807BFF5957B267965DAE6797DC9D91ECB2F82E3168B863FD710AB13970
6DEE54C919F3057F5ED0FEA490B2855C7F688DE111C17A27FF9E8B9F4F3D0DCC
9A7D92D0F1D57DFA867963EF27AF93C47ED790DCFB78E76D1DD0689591E58475
3CDF69788D1C66F25C2E4CEA45C2B9804A7F49654F2B9C7B3D24AE59EE9E0C59
1DF4FB57E4AE02524485C03FC85929B9BC3CA9AC70056E9FCE2B866437346734
4B0CAAEDEE7D3CA802D8455D5B35C47A716C5D16CB8681C73E8F8C83DB65AC63
82EC6E85298BC91314AB5B33C4F40CF7F1A339415A3DE13B6EBF25CDD13010C3
B020ACE1600DC4AB920097D384D51BA108095A949851B0AE4594C337DB17E2DA
88A755F655C03FFD60E46F8019B477141575436CE329BD8B4FDFF9A4FFACB66E
E387DAAD44E027F08D495401FB4DB2F33BBB0E09A8F8DCB2D0914A5A9F8150D1
FC4B1798DB7183A41202FF4B1608F8F70EA079BABF7C568C728173FE368D541F
A9E1C7BA3A8FFB1F92924ECF4AF2792547EF4E1ACE4CBAE67C7DB7A51D6FF71C
47DE10CA8F1EDDF6601B7433D1063C57C0E8A6296D1694DC4485CC69DF0E9563
7EBB4FCE6C3C2CA197D6D25EC221AF6B19CB72F78391E247082220D8151B26ED
12A7EC5E7007EC6D87CB4A8EE59608439AB0285FE691294814756258475285E3
76C847D8A01AC8CC89635E8D53BE2E3A56F2AE0CB1F8C831400DE4B62FD66932
F048175D644BA1A58FE0E325A088CC6FFBA0443EF49B7BE848A01DD7FA9589C7
D011D460025113753D000B13A946289C58D62789EAAB826BE92FA6DD932F8F22
0C60D7327EBD0BABB3E30443B69597A689F8101E0F80C30D361B2D4B816A5A5B
EB3E2A5708A4D0FAB8B5E754CBD1F32F15BF7F410AD2DF61B3F6BA04EA54FF2A
DAF5F68C9F451A41594CCA9E48A69DA3C44E90EC3981977B7DB63137B7583303
AA20EB450CBC3A74F3BE1D9B985390427683064932FE1C3F3B81A6B0B2780EB9
B548E152DD8A0F4EDFE74B2E32EC673287A3F8C111A5F8832F2C98A66F3C4E7A
5B23649BA04BF3FA1970289D83067AC80776874173F9656475E1EFA69DC38997
9AC060DCC4C5825C7A3B665E7129D0337557BF9B76390ED1E724E64D4A37CB6B
57937AE7E8520B97BC748777661CE285D330ACC1937C268210379DE097010EAC
FAC0C90613DD48D88D0D5CB5CA16D7303CD815E4ED57575CB64B250665DA1520
F8FF930B8BB1C134D5EEA5648DB0B438B10492CF019460443940D6983174E7A9
3CE041AEEDB05202B64992A49C9A10902546E02D94B5CF07B581C89CC6C5B237
350356CD261B5EE00CAE37F3A8812D3623D72478B0B810F058C466532660B580
00E8EEE2C5746017B88EA0AC93AD64305C5C4A93E69BD9FA92A575750E20767C
6B52851E621508ECAC6685A5CC0C08B72F0281C9F150ED0C6F75D260696BAF88
1BAC65BF872D51937B87787AB1C6CD2A9CB2FBB567C8CE3F6FFDD972102BAA17
99FBEA09F5E01C562E5A37F0C083E28FC02F0DAA6D7F571CA901CA02BE4FE587
812D9BB308865B08AEC6684E33EAC5977FD570FC508F26E227A27673D4DE573B
25281F7612769ADDCF3CF727E7211327F13F81333BD8A6803D18002AEADF806D
FB8F33320E1B90EFE683ECCBE76142008890812A568CFEA792BED2D0E826EDA5
C35CB1E66441E3E2E65741D293ABD46E322889D9BEF63E4824E5B216F3208E33
5B6EC73872139CEC5E6BB9418827EB1EFA2F642EF042E5605B3062D35BF43F4B
0A27181F4E14E4596C8AB9F1BC4BF1E970F26F54FDBEE338E6C6C5367732B4A5
1CA96C2998A1D54B39C8A4710AEF5AA03B983734D94416D0ED2CD72D73172353
4EDE4A64F47571D4F495B71BDD622ECF5E29C24EAA63E1AB6EA2150091183615
8B835DD90C15CC03F069C49E02F50A939C8C2C8590188B2274DADE55CE867BB0
31B383F7D72C5F37D6436903472B9DAA6C7F1BE6FA344E5C790CE1F91B540641
1F3FFEBA062DC7CE7D733A6EB99F5BABBA6F40EC2EF71B74D9D0DD0C9E0167DB
CF7B63D80530DE9A7B380FB9D782AA0EF8E3660689FB18489849FAE511188B21
4158545180D8D2A6E0C20F502F2ECA9CA1231FD6775D586AB920F3A57E938045
75E4AC04E5B5142DDDB2FB2EEB089562690BF43C15DEA87A48622394A5096F1F
3C7E36210EF2D75539006F699A5B114BBCBF8F6DB5B05EDCFB8CF57D17BAA577
56C9B86A956FC94D7DC035DD10B742E442241A46B47EE4BC9AEAE21F812BAC85
C9D4911E16D943E48194EA8B28C74192A9FFABC1C122CB17B75239DB385D1160
BD13C75235873C73FCCCF2F23069160636AFA990E81BE87FEA2776C62FB07839
BEDE7C7AFC764A7CF4046B802AAC174C56038DB1B08BEE1DCEB9AE2282D1A389
27F2A22EEBBB6EB12960991E0C3B36AC78FFB4580F5D4FD2B288C24A20A8D378
066A7BD8092E85878E8FEC537CB5FE30C67BF07609E9689A3A5E79A0D9A8C682
987A19E9E614F8FE024A7CA5BB5430D0B70A890EFD3FF41F74CE252715575C87
7F37F47CC96AA507F8465D6C32E5A03C9642775F80DA71E86202505CC006B7C5
18CFC913EBC516356C09B7A353BCDDED015D1C5AA21D7F4576A0EDBE315CAC84
10545E514982CEF1607D7F91AE354C0FAFBE0D588F0D0ED565DC0C5AAF6D6E1B
99D60C02FB8D8D33FAD0EF425B2159FBC2D0249B64409FDB3A4650AF48B3A4D4
58713A57A81CC7BA77EDB219ED76B48E529E7E4267AECDC4A01BB84BE8337CC2
563BFAB71DCD76EB44F46AF7D220825FEEF6447AC81AEF1E0092AC7E5A8F46C4
62654DC7B7C576DAC7C3D236F977640CB4C4801344243F8228DD8EF1FE088009
AA8CF3D85ECE481118FA4617293E1AA96C47B86B2651BFA95D7BE4374611F831
0FFBA78006AD11EE84B5EB2E4590AC972D0B6AE4CDA8E334F270A0221684518A
EAA7D43D04689260DDF95EAC7263DC33E7F1CF99201468B2A9052981C3FD9835
0A73F49E5993A88BAC90540E890C37971E76C37A58FBACF7980201F6235C9615
99605EB9E5FD40E6A5BC7232B4DA01813CAFB6AD663C475126EE56E5F33A61D9
D5AB175D04521C93ACD0654AFA64CFBE018938F96891D6616C596D695FCE446A
CFD140F6B526CEDBFCFA906213ECEA132252F2E008AC98776A23BB7FFAD7CB9C
B793AAF6377A84729329E9B7A80D6379C6EAFD71936FDA817559A36A625020B4
163C5E135D18B4699102336D2C313AF832D7BC8F11ED81C406F3A4D96A274FA8
B241E1CD9A485E0B33F6B53D94DD50B5CC149C0C2EE074395BB25EF18CF77D3D
6A2EC5C436AC031CDADE4147DA106DE788456797BC8D311DDE1A514512A0885E
69066B4B99AF72C908726B0E26086EB807437938D789E6F6866FCA6C55E555D8
A4D4B9C26C909C02ADF8EE1451E56CC7A7C5EA8B92245284900BCD205CFCE332
DC4E3E3C3CA37BF101D916CCCBC55C4D559CE11D2CCEDA8DFEB7FB457FDC08C5
60DD289A37B5F3CBA79C1920EEF513837A7BCAA564B82D6D8439BDFA951CC48E
A60C693CF45C9DC1DF1AF7855EDE45BE7FD07FA5777B82ED93ABC9BB0098F5E3
B027A98486D65D5F3F7028547731CD8926F8BC805321DAD4A8919E01757021B3
19721540314D8A454FBDB384C50BF6786AA6BE947E92241E6AB0F4E53528E49C
D5BBD9458B5DFB00E83E89DA7DD98DFF8DD4E68E7CD1D05D342484DE0EBAAE7D
3AC59621C456E7CBDD6B96AB33E48D8257AC13136D0F1F47BE9C89D425597DA0
F35A2068854CC90E5ABC30D33551DD7830348664040738DF70AA3A421603EC60
6838186CBC5A8CFE1322970EC20CBB4142424695FAA0BC07A06648DFE5C19C9A
90052D34074E057F360DE9CD6458B8D4DB5AF56CC044AB68DEB9FE2F6018514A
04232D6A3F6FD2799F765BDACF157970AF3B59D084AC574336D24FECA85C0DBC
02F615447A939CB1C5F8950C618C392B924F3C13D105D8CB78C83416CB88C7CA
ABE2BE8021770426CC9CFD4178AA1FBA08856BA2B7D1AD59BE1F344AA9A0F169
09E9D28B9FC63F29D863DC8859278D7F2DB1731FD65753AEC90F7CC5FC05151B
9A5888DD78020FFDEE59572363F721AE92E2138AE5F5B0EC6DA6B1C987C26189
E2249ACD0062D279D29F225DFEE4F724CBDEB74CB54CFD00D1112205D0D70245
12F32B1F4FA1DA9096EF4BCD617D1CF1170F4819673CD2185EF9DC4422C8EC6B
F4D57AEDBE77E777C7DF1238770A366DF3AB09B68B2ADB031E1CE6CF98F31ECB
9A447D2B9AC3BDCBD24E3954D34B04D2D5D6E4BB441BCDD7305FE7F2AF983798
877D7A75524FB10D4F9883094F010C3CA3190760B32195E4359B9D328E5AD07E
B8933EF8236F35E179BEB8E4E7F4233B4FBF185301D4CC6DADC8A85BABD30A58
622CC4EFCD50187636FE8A266CAF5EBCD781921032532E933F4342D0B05283E6
471740FBD4081586CB427A93072A2702FDDB7BE7D02882C1DBEAE018124AE73D
1B2542C818F7DE018E855A735A2715C86DF9AE88FFADDFE8C444CFFBEAB05D3C
27ADA5E54A0AFFF6C048F934F99D16DEC23D6038E9FBCFADC36AB73D04AC8FB0
819630E56AEF3A80A5424A4505124FF959EA450255E0DCB18C48F4705ED81A90
00F4786C64C9C7898654F1CD835516AFE2AAE5C6E61692472D26C1505C096B6F
7907BA7D8A38416E617009646B58E5377D9B6DB4B4B4B28063BC54416FCE8306
710699C33D59F50879CAD64DF09EC8C799623D27DCD24D67DED3C5ADF589B04F
8A147179F1FF392424818826839DEB0859B47ABD954806029519BD4056C50C07
FE781AA77DC57441D2397219D226D6A45EC281404FD8C4B78C5FD4D4C1975956
E08FEBF6C62955B522F72308C5A122DEE4EA546B563D93859908374065387872
1AD1687D7C98932D9953B13DBE46A79147C0D5692937176FD6883E077C1965B1
2274346D1DE154AB38A0E2DC4D7F29A778F4278298E0D2FCF5560A9375E37D02
A56864DF77477BD31195B2C1E673771ED793A5A0DA233D218434F85B8F3392AC
4D8B252A3F5FF8DF3B9E26DEFBF329BCBC2971F7F9268AFD6DFA8624DA6FA999
B40ECAF17D4DF5350FE17DC10565BDF181EFC66311754B42D39426676C0C6ABB
F2393B52CA1DD5D9D9B86B2A5592AA6035C14622D4F1CC8383DA04376F20646F
CF632828DE9E2600304B22DB84FBA40E149E6938CBEC65D3C033557C9C89294A
9DB7B38830CECC20E05BF465A0B7665A3725ABBF79DEA9BD0955DA6F2FFF11AF
D56FA929E38A095B8C2E4FA6142352B2DCB8F28F021A5FED79EB0F2B081F8420
F998E32331B9E5130B4E0724DAD0C4C479D5E5D0A49225273DF9293C9B4501F8
6613C99FE45FF3F49A0D304EBFE0FE31A8D8F42FD97A477A34AAF19B1D2FC100
3DC1DF1D37317DDB9ABC96FE2FB93767CBA119BFEF1A92696529774EE37D3FE5
4A0B4BA7F2D12672DA14E3489D274582151F5723313FA9A2E7DDBF998A78F08B
D9453BA3CE8A943EB455328DE6F1264CD527035AF9B8F440CA5F7A156A97A167
BA3C582BF98E846B5A5738FB938A66FB04A182F2E9DC920868DF625C56B4264D
1E92EDC7362DEDD36995E5A2B480D8D166AE11BE5083FF153CB9135A2447A37B
8E7A1764AAEC589D876BF3A20DA9670B7927643D015A442350CAB8AED6DC6AEB
975D46B6419725AC0D07891D11B1A5E1E94AB9C3F89012333F084BF596A47A70
9501427FFA970D128533A73E8575EF113CB33B2F4D4D9B711A6293B6B6EB3230
9E68F6D38BE7983C82C55D77ED6C5B3D48B2DE57A179DB4885A48A1739257801
68EEC36B619924C6523A14262AB24B6BB1A4C006D600B8D47E7B3CCD2D9EEDE4
E15A5E0A18F1571677001423AC53FDB83AD6CF76E1AE8C3069FBBFE1CB77F7AD
9CBFF7C0FA57A31C839A24C211E054249B3693C005CFB12A7706CF0AAEFCA2CB
0740D76B9AF8CC94480455EE190CA7DB5E39FFF9874CE50D8F2F85309B46F2D1
D91DB1C8DAA933DBAC882519E913BA5C2F5D66C49C67BDBDC01F2FDDFF7BF2EB
23F148DAA972DD8FF0A96E4DD4CBBC2CFDD1B3A3D6E1074B97662304D98343F3
C86A731EF8DAF17D45D9824F4F1C5393E369ED07D7D778313FBCF2A942D21812
2CD9209986869BC5D4E6C2C4913DE17CEA0B5DBAAB734921FE67E3D9406D2DD3
C85CC2C80F3842DBF99E18B186A6CFBC6133950FCF7A38A06C3F4F294532A8D5
C31CA5C0F90FA7C627B54BC4DC2E68C1772EBF660E454144D1A4AA0B8951D339
7D1C8A5F5C582223024AC3CE51255AA9AE1053FA2EFA323B20275F9A06758D49
8F7789EDE9E01AB1011923818C425FA3A29268F980FEC062C393B0EE4C1DDFF9
2BD8AD098018A9D4E248F88F9E71EA3F0A219A1234F99B573F73111DBF280BAB
6E8876132268DE48598CD3A2F8BBF23CBB9EBDFFAAED371FB1DDEFC34C84A557
AE4423C8B927A463CAD21F918A48E437E624331FA854F7FB82D5E3609408693D
CED80A49EC4F4211E9A9A5414AADD38AD46E23A642A65CE43CE8C919EC5CD182
D455DCA84089F0B84594A8D68EBF82E4844A5E5AC7ECB307ED55A43938DD6A0D
F8340CEC0051A4EEF6083AD202D66DD761F360FBC2FBEB423140F2C9B914022B
DBF854283C0C396F630FC2EC1F6D1920827DF0B043C3000D42207208EC4622C0
3FCB85C2343AF7A6984D619DA7F47AFB106173D80F325DC2782E3C9D39B0BA46
5F5C7358B513752AACA51BF29C3212023E7AB42DC01AC8139DD7A58E6A09DBBF
237F4C85C18190A4BBCEE8BC870E1DEA4EFC2FF30F08C10AD515EB6203A34A88
86FB33016B9E840ADB1CFBEAD3D3878D5875FDDCC1A30B48C9D2EDBD5717403B
5B2EED10675764B326446A071BCA59CE95120B87F5484625A6F2DBD4B0FA3482
EB76E5DD474C72AF5EAECF1305B75E97E6DC03C8CB0549111EB9C8E51DC6B057
309108D9409926618D4F9D56F5F2B1A3EC2FF079B202DBA31EFCEF180C977FC2
65C456DFDA739A43E520AD67D2A3EB4E0CDAFB7E19622AB4058CC70EAEBE1DF0
25EE3EDF5E7705C6FF8A51E943BFEA0FCE29F8EDA217A407913D102B606B6FDD
B85A223E2AD4970368D8594690D2845B039BE2E6B0201DD446008225808FFF6E
0EC903AC4E43B2EF10618A79A39873AEF55DAA299E2FEA31505EC9AD54BDCF91
967436722F72A453DE79CE10460D5DC3228A10E1EA4D3CDA8CBF87C7F1C3C2BC
9D6A7A48A720317E34D0DAFACFC5985289DA0FE9651EAB9B4C66361F5FD28CE9
9D427BD8B0D4E0AD86938A354059AA24E9C27D176E6A20E76BBDD0432536F939
5C55386025AE54BEE72E827E6CF383B8D1575C3D81E3B9641B1BA2D5D8FCD132
6079C3F24ED0C50A56BBB52B01432949770D92B3B3893E65B94508C851C78B9E
9EC9C61C9EEC69A1BCA9E2F45F70B19C583820DC4FFCB62437BCEFC740533AC6
9E79EA5A904326C99A6C2C6A29E4F010AB9C8C4E1ED98EFC8A31929E5BD978F4
DED60AF156FC80E8B7BC5D556644F4306EBD8415D6BB26ED590F1DD45FCD0154
168031D75607346F61003F0514C62DFE4AEDD128D6E041135312FD33B476C254
FFB6D6C6EA96D1540FD179364F5C7A138EF15B7952342ADAAE9382AAAEC740FE
117873741B5E73A20BADCC3DC3ED4030297443EA46ACC45835DA0489838BC659
38DB5CFDA5E0844129AA8F40E13DFF48C5AEF374F7D434A806646EA6CD69CDFE
D55EC30044FAE86B4A3E7C1AA2A85FB8E025F6BA8B52F3222CBE7A4083AEFDFE
A2AFC7B59729024D4371CAFF008E0FB0EB3C6252596378BD867171701FAA2EA5
4568CF926316B2DF3A5BDDB9AE781E107F0427F4DFD5CD6432443BCE649D6C3C
12854ED78CE2A64EDB22C3075C773DB77344C0D79F4FE80B951AEC4255226FB2
4E0EFBA4339E79025D47E6F4412A68BF81FBA57276152CCC14C26BB367D85F6F
36AD71BDBB1D03B83000360A382EF21A8D4F61BA2C7DA960727C66CF55170541
C4A8E9778A707966426F0C453B31D46A1213F24B9631159AC0BEFCAB5B07F730
8231DB7238F80C9DC9A3C9C1AE4B7630CCC48D4D771D54E8742096376DDEE8EE
214C5F7E5E3DA422B2700CB9B08A944394D4CB0AA823A4291C79A9C3CAA05CFF
E8A0425661CFDF01552938806FA049F16FB26CC25FEDC64E83689D0D5C0691F0
E2AACFDED9143368B1BBD8EE7E95B93E7F1AACC865A7F4F8299DA336427A4FB1
1087FF06E7B88142AF56F21FFF0E8C51DFEF8DD7651F4644CF51DAA8F646607A
B7BA9EE5F0158AAA093F333619EBCFF23560CC7ED8B0F4877050E6AFAFF5B978
DA553E965E3D937AE8420FB1014DF57D2A07ECC562DB3FE1720EF2748D6ABF94
42394A24CCD6C486BE1C646184B6A78A4C6A0E7B937FBAF5F204410E54FBE8EB
C3EA894B5CDAA4D3537A13CBF60B3132DF0074367ED74E37A286319ED415332B
3D0B9667B9CA1064AC4B3DBCA19C41860A7747119FAC6D11270FFE5F92BA2E6C
37639E895A49BECA63211A4B634B2FBA836AAD231CE7E81122AC246BBB6FB2D8
A44E899B1A7C04A71A7CC12D65F0024CB15C87CFB2F135FBBEB182A66B1C920C
9331948CB43C3E1E1B69D06AF89C0139FB5A1FB44DBFE94FB265A3695856C551
963AFD3D85A5771D6CBD43963194130033BDF8E7E6A8ACF4BAFDA553031B5CFE
694816C48F715BCAF6AB8F5B958FE57EC9189FD32797B33E53CB7F19DCD51601
3F36D9F54727CA5E071C5DB5777DFD54DA9A99188BB46E8C2AAF8050FC4789BA
92FC9CDDD5BA3F2237D37628ED44DBA70F3A156BD27909FCCE9E4D820B866D1D
A0A5057925BA3E89663B5F0C6C7898507AE756DC1F23BEC5BCA930A5AA451D05
133186BC8D25A9792A3BA7834DD49B6143C3C8676E703B067028AEE0C4F3FF05
9BFF2E28E228FEBD90AF9B979612CCADD05D8ADC885BA63E2DD8F679C8E6579A
FEA6EADDE181D239FF987FBB6C2F44EB5C8B17C56AF69372C20A945E7CB08B0E
F11077F92D31BE41FA56C3D67E13785AB502467DEEF2D2A11AC3BB762F4C9A0D
5FD6BB45108010D729FCAE9358E6474A4DD7C34C75AF44486ED3F5690E33B161
A23F0D143E80889812EB87246F9A309E9C40E624DC10E6556AA69FCE0CCE350C
8130162C56746FF2AE68E9E3B64F8B7D82898B688F5BC59FBBD09F6F3AB9A0E5
82F8DCA2D24F01BC573BBB163DD66E89F2520E549FE71C664805658149EFFFC7
C609BA9BE8E6F5F7FFE9AAD70404170504EF75434DEB9272DD092CA51CECBD2A
ED454BB1309C9151F49BCC38221A64FE6DC39DB77186850E21DE485FF6B2482F
F6F8D3E76D3A9B228B1A0E08CDD17C4DDB1403A2FF4CA230F195CF8299753CBC
1CA20FC9EF515AF4E0EA8DAA8234A5350770E85F5CF16B927EBA2304E7A8FD97
537C6919356B9BF8A47F59E6D941693980F8001DD576D9E5289DB24C928A5D4B
2248BB85255FEEEF54B90B9D026A28F28B97D09B3D3A99878AAFED34D2F5914F
43C2213E4F7981698B72E3B57DE4F12866F7B08758B691F06B021F85A1110130
2EFE8E455E7ADD1AF464D995525B1213B65E38215BEEC18AE8D03C1EBE858A00
24AA08B083766965AF11D92EF21A5493C6339204233204E2525C7D5C1A1088A0
75419DC5393E2DDC1A96530E199DAF39480F97ACEF4B6F6480ABC492F9B1CBA7
BBDF63277A28B6891DDCD36F0B3C22C922D09EEE86EA0861FF20D8D0DD746689
23D339E8E28160D4C0DE94138C675AB18A019F35D5A12BC3220783394427566D
004FE201314CAC218AA503A47BC756F23D8F668AF1F78BDF982F16B3B1C94828
61A7318CE751FEF2DACB35DD63EA45A506063F64A26F73CCFD06842B1CBA3C8E
5E817A5085C2A8F5122D0BE68CAC319AF2FD47434B30C9982661E4812C68DBB1
007B0E34037E5CD066BE7359F85A1590360BFD3C479392A867DB76F262FAD996
C868AE8BCD0FB07D22094ABB1A7399DA29003284F4C8770061BF7ADA680FEB3B
FA05161A5399EB81B789F2457139CC4E72F6B93393B836B6ABDAD451CA58A1A4
FE70DF9CC43DAEF51325
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158278 55380994 1000 8000 8000 (art.dvi)
@start /Fa 206[441 49[{}1 774.872 /CMR7 rf /Fb 137[584
615 430 437 434 584 615 553 615 4[307 615 1[338 492 615
492 1[553 12[799 34[553 553 1[307 46[{}20 1106.96 /CMR10
rf /Fc 154[590 590 100[{}2 1328.35 /CMSY10 rf /Fd 140[435
7[490 107[{}2 885.568 /CMMI8 rf /Fe 133[531 1[598 1[598
1[432 531 548 1[664 664 731 1063 332 2[399 664 2[598
664 598 1[664 16[881 1[966 12[966 52[731 12[{}21 1328.35
/CMTI12 rf /Ff 140[613 4[776 2[676 6[676 20[994 19[361
59[{}6 1328.35 /CMMI12 rf /Fg 133[759 1[797 1[797 1[644
672 593 1[894 877 894 1381 407 2[407 3[815 894 779 1[837
10[1169 1[1169 3[1120 1[1266 5[1266 4[1120 1[1169 13[877
877 877 2[487 4[682 682 27[934 12[{}30 1594.02 /CMSSBX10
rf /Fh 192[706 63[{}1 1328.35 /CMBX12 rf /Fi 135[956
1[956 1073 773 807 712 1[1073 1052 1073 4[489 2[643 978
1073 935 1[1004 12[1403 1[1344 8[632 7[1403 14[1052 1052
7[818 818 40[{}23 1912.83 /CMSSBX10 rf /Fj 128[606 4[539
640 2[640 673 1[478 475 1[673 606 673 1[337 2[337 673
1[370 539 673 539 673 606 9[1246 6[825 2[1111 1[943 6[926
1[859 19[337 46[{}26 1212.12 /CMR10 rf /Fk 140[470 470
2[470 1[470 470 470 1[470 2[470 470 1[470 1[470 32[470
17[470 46[{}13 885.568 /CMTT8 rf /Fl 138[523 366 1[367
3[523 784 261 497 1[261 3[418 3[470 19[862 7[640 10[261
1[470 470 2[470 2[470 470 2[314 45[{}19 885.568 /CMR8
rf /Fm 139[677 687 677 1[977 2[1477 478 2[478 2[527 777
2[977 877 13[977 1302 6[1376 18[877 5[877 877 877 3[478
44[{}19 1912.83 /CMR17 rf /Fn 135[1377 1[1377 1[1113
1[1025 1[1545 6[704 1545 2[1408 1545 2[1446 12[2020 1[1936
16[2020 65[{}13 2754.12 /CMSSBX10 rf /Fo 138[1196 1[849
3[1076 1[1793 598 2[598 4[1196 956 1[1046 13[1196 5[2041
10[1530 66[{}12 1912.83 /CMBX12 rf /Fp 128[650 2[1301
650 578 686 686 939 686 723 506 513 506 686 723 650 723
1084 361 686 397 361 723 650 397 578 723 578 723 650
3[361 650 361 795 2[1336 975 975 939 723 957 1[885 1[975
1192 813 1011 668 469 975 1021 849 885 993 939 1[975
3[1012 2[361 650 650 1[650 650 650 650 650 650 650 1[361
434 361 1012 1[506 506 361 4[650 19[1084 1[723 759 11[{}75
1328.35 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
268 1124 a Fp(Departmen)-36 b(t)432 b(of)j(Informatics,)f(Univ)-36
b(ersit)g(y)435 b(of)f(Z)36 b(\177)-686 b(uric)-36 b(h)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 17221 14065
a Fo(MSc)718 b(Basismo)60 b(dul)p 0 TeXcolorgray 0 TeXcolorgray
9183 19336 a Fn(The)1010 b(Adaptive)f(Radix)h(T)-252
b(ree)p 0 TeXcolorgray 20176 23723 a Fm(Rafael)578 b(Kallis)19111
25605 y Fl(Matrik)-26 b(eln)g(ummer:)418 b(14-708-887)19053
27486 y(Email:)i Fk(rk@rafaelkallis.com)18014 37256 y
Fm(Septem)-50 b(b)50 b(er)580 b(1,)d(2018)8401 38761
y Fj(sup)34 b(ervised)404 b(b)-34 b(y)404 b(Prof.)g(Dr.)f(Mic)-34
b(hael)404 b(B\177)-606 b(ohlen)404 b(and)h(Kevin)e(W)-101
b(ellenzohn)25071 56015 y

 25071 56015 a 25071 56015 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 [1.0 0.0 0.0 1.0 -150.83124 -106.30052 ] concat

 pgfs



 0 setgray

25071 56015 a @beginspecial 0 @llx 0 @lly 229 @urx 74
@ury 425 @rhi @setspecial
%%BeginDocument: images/IFIlogo.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Logo UZH_IfI_e_pos.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: glinz
%%CreationDate: 9/15/10
%%BoundingBox: 0 0 229 74
%%HiResBoundingBox: 0 0 228.2217 73.9326
%%CropBox: 0 0 228.2217 73.9326
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 44 8
%%BeginData: 5720 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD09FF7D7DFD05527D7DA8FD73FFA87D27527DA8A8FFA8A8525227
%7DA8FD70FF7D5252A8FF7DA8FFFFFFA87DFFA852527DFD6EFF52527DA8FF
%FF527DFFFFFF7D27A8A87D7D5252FD6CFF7D527DFF7D7DA85227FFA8FF52
%277DA87DA8A87D7DFD29FFA8FD12FFA852A8FD2BFF7D527DA85252A87D52
%52A8A8A87D527DA8A852A87D527DFD05FFA8277DFFFF5252FD06FFA8F8FD
%13FF2727FF7D27FD0EFFA8F8F87DFD2AFFA8527DA87D7DA8FF7D7D27A8A8
%A8527D52FFA8A852A87D52A8FD05FFF87DFFFFF852FD06FFA87DFD08FFA8
%FD05FFA8FFA8FFFF7D7DFF27F8A8FFA8FFFFFFA8FFFFFFA8FFFFFF52F8A8
%FD2BFF7D52A87D7DA8FFFF7D27277D7D7D522752FFFFA8527DA8527DFD04
%FFA8F852FFFFF827FF2727F827A8A8277DF87DFF27527DF8F827FF5227F8
%7D52F827FF275252F8F82752F8A8FFF87DFFFF27F8F87D7DF8F827A8FD2A
%FF52A8A87DA8FFFFFF7D2752A852A852527DFFFFFFA87DA8A852FD05FFF8
%7DFFFFF852A8F8277DF8A87DF8A82727FFF87DF82752F87D7DF8527DF852
%FFFF2727A827277DA8F8A87DF8A8FF52F87D52F8FF27277DFD2AFF7D527D
%7D52FD04FF7D27527D527D522752FD04FF7D7D7D527DFFFFFFA8F852FFFF
%2727FFF87DFFF87D7DF8FF52F852F87DF8F827F87D52F8FFFFF8F87DFFF8
%27FF52F8FFFFFD0427FFFF2727FF7DF8A87DF8FD2BFF7D7DFF52A8FD04FF
%7D52527D277D525252FD04FFA8A8A87D7DFD04FFF852FFFFF87DA8F8A8FF
%F8A87DF8A8FFF8F827FFF852A8A8FF7DF8FFFFFF27F87D27F8FF2727FFFF
%7DF8F8A8FFFF2727FF7DF8FF5227FD2BFF527D7D52A8FD04FF7DF827277D
%2752277DA8FFFFFFA87D7D7D52FD04FF52F827F8F8A8A8F8A8FFF87D7DF8
%A8FF27F87DFF27F827F8A852F8FFFF2727F8A8F8F8FF52F827FFFFF8F8A8
%FFFF7DF827F852FF52F8FD2BFF52A8A87DFD05FF7DA87D7DA87D7DA852FD
%05FF7DA8A87DA8FD04FF7D2752A8FFA87DA8FF7DFFA87DA8FFA87DFFFFA8
%525252A8A87DFFA85252A8FF7D7DFFA85252FFFF2727FD04FF7D527DFFFF
%A87DFD2BFF52A852A8FD05FFA8A8A87DA87DA8FF7DA8FD04FF7D52FF52A8
%FD2AFFA87DF8A8FD36FF7DA87DA8FD05FFFD047D527D7DA87DFD05FF7DA8
%A852A8FD2AFF52F852FD37FF27A87D7DFD05FF7D7D7D52F8527D7D7DFD05
%FF7D7DA852A8FD18FFA8A8A8FFFFFFA8FFA8A8A8FFA8FD05FFA8A8FD38FF
%52A8A852FD05FF7DA87DA852A87DA87DFD05FF7DA87D7DA8FFFFFF275252
%52A8FD09FFA827A8FD04FF7DF8FFFFFFA87D7D7D277D5252A8FD3EFF527D
%A87DA8FD04FFFD047DA8FD047DFD04FFA87DA87D52FFFFFFA827F8F8F87D
%FD0AFF52FD05FF7DF8A8FFFFFF275252527D27F8A8FD3EFF7D52A87D7DFD
%04FF7DA8A87D7D7DA8A87DFD04FFA87DFF527DFD06FFF827FF7D52FF7D7D
%FF7D5252A852FFFF52277D7DF852F87DFF7D52A852FD04A8FD3EFFA8527D
%A8A8FD04FF7DFFA8A8FFA8A8FF7DA8FD05FF7D52A8FD05FF52F87DFF2727
%FF52F8FFF8F8527DF8A852F8277D7DF82727F8A8FD47FF52527D7D527D7D
%7D527D527D7D7D527D527D7D7D527D7D5252FD05FFA8F852FFFF5227FF52
%27FF2752FF7D27A8F852FFFF7DF8FFA8F8A8FD47FFA82752277D277D527D
%527D5227527D527D277D277D275227A8FD05FF52F8FFFFFF2727FF2727FF
%F87DFFA8F8A8F852FFFF7DF8A8A8F8A8FD48FF7D277D7DA87DA87DA87D27
%27277DA87DA852A8527D527DFD05FFA8F8F82727A87DF852F827FFF852FF
%7DF8A852F8527D7DF8FF7DF8A8FD49FF52527DA8FD04527DF852F8525252
%7D52A87D5252A8FD05FFA852272727A8A827275252FF527DFFA827FFA852
%F87D7D52A8A827FD4BFF7D527D52A87D7D7D272727527D7DA87DA8527DA8
%FD6CFFA87D277DA8FFFF7D2752277DA8FFA87D277DA8FD6FFFA8525252A8
%7D7DFF7DA8A87D52527DFD73FF7D5227FD07527DFD78FFA8A87DA8A8FDFC
%FFFDFCFFFDFCFFFD9BFFA87D7DA8FD2FFF7D7DFFFF7DA8FD06FF7DA8FD16
%FF7DFD28FF27F8F8277DFD11FF527DFD11FF527DFD07FFA8F852FFFF5227
%FD05FF7DF87DFD13FF527DA827A8FD27FF2752FF2727A852F852A8522727
%7DFF272752FF525227F8F8A85252277DF87DFF7DF852A87D272752A8F827
%A8FFFF52F827A852F87DFFFF27277D522752A827F8A87D27F8A8A852277D
%5252277DF87DFF52F8527DF8F87D27FF7D27F8A8A827F87DFD1FFFF87DFF
%7DF87DF852F87DF82727F8A85252F87D52F87D2727A8F852272752F87DF8
%52F852272752F87D2752FFFFA8F87D27277DF87DFFFF52277DF852F87D52
%277D275252F8A8F8277DF852272752F8A82752F87D2752A8277D27522752
%52F85227FD1FFF277DFF52F827F8522752F8A8FFF87D5252F87D2752FF52
%52FFF8FF277DA82752F85227522752FFF8A8F87DFFFF52F8FF7DF87DF8FF
%FFFF27275227FF2752A827A8F8FFA8F852F8A8A8F8FF277DA8F8A85227F8
%7D5252FFF87DF8FFFFA87D27F852FD1FFFF8527DF8527DF87D277DF85252
%2752F87DF87D527DFF2727A8F8A82752A8F87DF87D527D277DFFF8A82752
%FFFFA8F87D27277DF8A8FFFF52277DF8FF277D7D27A8F85252F87DF8FFA8
%F8A82752A8F87DF87DF87D5227A8F87DF85252527D5252F8FD1FFF522727
%52FFA852F827A827272752FF2727277D527DFFA8F87D27FF527DA852A852
%F827A8527DFF27FF5227A8FFFF52F827A8A827FFFFFF52527D52FF527DA8
%52FF7D27F87DA852FFA827FF527DA852A82727527D7DF87D27FF52F827A8
%7D27F87DFD29FFF8A8FD7DFFA87DA8FD54FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Präsentation3</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>glinz</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-09-15T11:17:58+02:00</xap:CreateDate>
         <xap:ModifyDate>2010-09-15T11:42:03+02:00</xap:ModifyDate>
         <xap:MetadataDate>2010-09-15T11:42:03+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>84</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAVAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9UkgCp2A6nFXmGtfmjqe&#xA;sXk2meRo45o4VZrnXpgDAiKSGkiDlIxGOJ/fyNxNP3aTUICrGPMvl+zsLzR387a7Pq51Zw1woeK4&#xA;ghtyVT1Giu1lt5QZ54k/0e0iJUluNEbFWU69+UP5aaZoM99d2yW9ppcL3DzR2mns6rEhNUR7Zk5A&#xA;bKFXFWK6JHr2neXbXX/L3mQ2qGb6leaTfzJLEl8p4yW/N3+oyj1FIj9D6qHqD6m4GKs/8lfmZFrF&#xA;7+g9btTpPmNOS/V25CKdkHJxF6gV0kC/EYnHLj8SGSP4yqzjFXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8v8AzU1251XUE8kafcJbwSR+v5gu5G4Rx2/Ev6cj&#xA;1XjEI0aWf4hVeEe3rBgql2heWtS1eRtH025m0jRLSTjqMSpFHdVFvJDJBqEE8TxXJu1lhlVgrRLG&#xA;vCPgAruqwb877HTNO1B9AghupHstDitfLs3K4Pp35lmuGceipUt6MR+GmwGwC4qzf8wvNseqeWPN&#xA;FtarcMZI9DJgVpWKx37iVlCR8+NYlYNwFf14qgPyc0vRvMOieYoNPjktrO31OXUfLQuPVmgih1DT&#xA;0hgZop6CYIQ7DlUb7HFW9Z0e+ub668s3MUsF7pdvbSadrVxcpCHlklC2VjFOzevK0rxO0Vw/xpOG&#xA;4oE+AqvQvyy84S+Y9CdL0/7mNMcW2oAqELmlY5jGPsGRftp+xIHj/YxVL/z780675V/KfXde0G6+&#xA;p6tZ/Vfq1zwjl4+reQxP8EquhqjsN1xVJ/NXnjzTY/8AON8HnG1vfT8yPomm3rX3pQtWe5WAyv6T&#xA;IYvi9RtuFB2xVS038+PLXl3yN5MvfPV/KupeYdNS7e7S35IzoimVmWBQFqXFAq/IYqmflz88PI3n&#xA;TRvMTaFfXVlc6NZzXF00tuFnhjVGpcRRvzSTiVrxPenIb4qkf5c/nN5YsvLPk/Tta1+91vUPMckt&#xA;pp+s3Np6CzTRz+iY3oTx4M6ryYkmtSd8VZfqv5xeRNK81aj5Zv7x4L/SbI6jqcpjJggtwivV3H7R&#xA;EiBVAJJYAbnFUk8lf85H/ln5v8wRaDp891a390WWw+uwGKO5K1P7pwzj9k0D8SaU64qiE/5yD/Li&#xA;TzafKcc9y+trqT6S0AhNFmicpI5YmgiQru33dDRVV8q/nz5B81+aU8vaC15eSymVYtQFs62bNAhk&#xA;cCVqfsr/AC71GKvI7P8APSbQ/wAuvO+qQ+ZtS1zVDqzWei3F3Zwr9Uluo5pYfhLMpSlu+1OC0AVA&#xA;CcVZD+Wn/OTfl4/lsup+bZr641PTJYrfWr5bVODT3r3EkBRYio48LcqfhABoO+KvUtY/NLyhpXmD&#xA;y/oEs8lxqXmYK+lx20ZlVomICyuwoFQgk18AcVUPzD/N7yP5AFsnmC7cXt4C1pp9tG01xIoNOQQb&#xA;KK7AsRU9MVYtr3/ORHkq6/K/W/NHlq+lluraOSzt0+rsZYL+WCR7YzRMNoyyV57rsfA4qxn/AJxR&#xA;uotas77XbrzDrereYBCI9XtdRkd7GM3EztE1tzrybjBRjy79Bir6DxV2KuxV2KuxV2KuxV2KuxV2&#xA;KvnlNVvTomu+aorlra+1u5PpXLWJ1CA2kyR3XCVSGVIprWe0gkYg1WHahoQq9t8n+Xrfy/5ds9Lh&#xA;iWH01aSaOPjwE0zGWbhxWNQvqO3EBQAOwxV4N+f3FfP9vMPVdoo4RI0axMLaOSOUG4+OKWh5AAn+&#xA;UEU3LBVjk+oPKuqXF1JNFY+Y7TTYIo0KepytIljjjlAjkMfKNHCkhuPKh4ueOKvTf+caVK6TqaMp&#xA;ilWOxE1qVRBC5jkLRqsaRgKCagb9epxVmv5kaTYGLT9flM0E2l3CrLdWSc7wwXAMIihKpI4rPJEx&#xA;48TxDDkAWqqxTytdTaf+ZtjO4mjXzJZcblLiL6szXDJLOtIeTheL6fdTcVZh+/JqRTFU8/5yC8va&#xA;t5h/J7zJpWkwNdX8kUM0NvGOTuLa5iuHVFG7MUiPEDcnYYq8L1n86vLev/kRZ/lrpVhqNz5yewsd&#xA;I/RqW7EiWzMKu9QT8LekaACviB1xVOvNHky4svNv5D6Bqtt67abbrFqEYHOJZoVgdlYiqlRIlPfF&#xA;UXc2cy/nj+czpAyxS+V2EbBCFZ2sLYmhpQktXFWK23km/wBX/wCcStM1Czhkj1zyzfXOqWnFWEoR&#xA;LpxNxHXZD6n+xGKobTvJnnDzf+Tn5j+fZ7aV/MPme8ieKySMs7WNldJNKkQPxBQw2H2v3IHfFUo/&#xA;LC4/LvVvMX5fwXnmXzLea9p15aCz0iaKOWztJ45I2aNGaT4Ld2jA+AV49QMVes/kZoent58/OS+1&#xA;Kyrz1i6g9Z0PI2z3F00ixsezbVp1oMVYN+SfmS50v81NO8tflnq2o675CvWe41a0v7XglmHVix9Q&#xA;nZl4r8YCBm2o2KoD8pNPvrj8o/zmghgeSZkUrGFPI+mJ2ag70UYqzX8objQ/zN/5x31P8u7WOUat&#xA;o1lwmaZQsX1qaee4s2jcMSQHhHLYeGKpN/zitpes+avOknmrXlZk8m6ZBoOlhwao4DJQV7xxcww/&#xA;yxiqefmbrdv5C/5yP0/zv5osJ5/LVxpX1Wyv44zMIJwGB41oA4NagGtHriqVeRdN1HV9C/Ovz5a6&#xA;dPp3l3zHpmoLo1vLGY2uP3E7mVUHX7XUVHJiAdjir1//AJxzili/JXyvHKjRyLBNyRgQR/pMvUHF&#xA;XpGKuxV2KuxV2KuxV2KuxV2KuxV8++Xbi2i8p+UrxEa3isjBE8cclxC/1m4tdN+rxl7O0u5V5CRY&#xA;zEJYg/RuQ+yq+gsVeWeeNR1y11zzBFp9uJbe4s40uCXC8wLC+b02rHJwA4+pzqN1C/tYqwrSPMPn&#xA;C58zzaTLpF39X0K90Y2klxqVw0MxnoSD6iGOT4unEDh74q9K/Li71K71/wAx3GoxendSRaWWPIMX&#xA;BtSfUICx8S3Urx2xVknnQyDyvqAiE3qNGERraBrqZGZgokSBGjaT068uIO9Oh6FV5nZQGHzR5AsY&#xA;pp3mtpHE8tzFJHcEGDUipm9SSeQNxgmWpfixPw0U0Cr13UdT03TbVrvUbuGytEID3FxIsUYLGgBd&#xA;yqipxVLbXzx5Ku7mO1tPMGm3FzMwSGCK8gd3Y7BVVXJJPgMVTvFXYqgbvXNGs9SstMur6CDUdR5/&#xA;ULSSRVlm9Icn9NCatxG5piqOxVI9F87eVtb1nVNF0q/S61PRXEWqWyrIphcsy0JZVU7ofsk4qq67&#xA;5t8u6DIkerXq2jyW13fIGV2rb2CLJdSfCrbRo6k9/CuKpRH+bX5eyX0tiNXUXUPoc4mhuF/3qmWC&#xA;EgtGAweWRVBG2Ksg0fW9K1m1e70y4FzbxzTWzyKGAEtvIYpU+IA/C6EYqkP5j6Z+Yuo6RDB5F1a0&#xA;0jUDI31q4vIzIphaNlolEko4cqwNO2KqP5S/lvZ/l75Mt9Ahn+t3Rd7nUb4jiZ7mWnN6EmgChVX2&#xA;HjirMsVdirsVdirsVdirsVdirsVdirsVdirsVeA3tlaaTqeueU9REHpJfR3+kpe+l9XkMnqenyae&#xA;3vEUNZyeiv7lifqstOoxV6lovnby3a6RZ21/rtrc3sMKR3E8a+mjuqgMyoBQA+33DFWF+adR8par&#xA;qnmC6N5auPqcYi9S3SdrkC0u4/Qjd1LIVmljkqm9Vp0Y4qg5YfKccOkyT6lpt7At5C8lkmnQROkT&#xA;XETpzkUFiLeJXRqj461bcYqnPkTXfK+ia3rkUupW5R4tOX67HCttHczRW3CeZY4lEaln3IXYdMVT&#xA;Lzxr/l7XdHW0sdZ0ovHJ67WuqWzXdrccEb043AZHipIVcSJVlKggHoVUo8hLa+YPzDu9ZsPi0LQ7&#xA;VbPTZObPzDqEt6s5ZmZY/XmDH7UdwhxVn3nDyr5a80aBcaP5ltxdaPJxluImlkgX9ywkVjJE0bAK&#xA;Vr9rFXzL+S/5b+VPNf5yXvmzyvpp0vyF5VnCaXSWeQ3d5H9iTnO8j0/3aQCKDgKbnFXpWgfnX5q1&#xA;Dyn+ZmsTWtitz5MubuDS0SOYRyLbhyhuAZSWJ4CvAriqUeafz/8APmmeRvy81vTNKsL7VvOBkjuL&#xA;EpMEMtUSJLf99VeTSU+MtiqJu/MXmWD80/yx0zzhomjT+Zb+3vWvNQSKR5bVgZSq2riXgBwRftK2&#xA;9aUrirXlX82fzh/MPXr2/wDI2m6TD5J02/Wye51AytcXCgqZXTg6jkImD8aCnICrYq8+8v61+ZWm&#xA;fm1+bL+RbGynuI7qa71C71Av6UUFrJM3poqleUsxb4amnwn5hV6Ro+lXv56fl35d8z3Wov5d1RYN&#xA;T02/FlEk0M1veEW10irMSyeokClTyqtSN+uKp9cfkJp91LrCXms3FzYavNYSSWssMRZItMkja3gE&#xA;wpJ6YjjKU/yi3XFWZ+RfJdh5O0H9CWEjSWi3NzcxcgBwFzM03pinZOfEYqyHFXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXn/5ufl23mjTEvdPhjl1mxWiQSCOlzCGEnpfvQ0fqJIiyQlwV5Di3wO9&#xA;VXj+nWejx6eY4rCK91OzlWDR9Ni0lLq5kuVWt296jIsssClGVomIeAyDl0ikxVMYPLkcl2LSLyrq&#xA;KxiL1LSa40CAU1VgtWuJOIU2PIk+kOnI0oFXgq8j8n6vqWp+YrFoLOC9k1qC7k1WwttLSeRRwmul&#xA;TT4ZV9FJUggCxcVQFj/uwbhV6sfK87Neiw8r6hbzW8iWehPdaDbyRLaSzSxSPdBg31iZAiusrbhQ&#xA;hNecnNVD6p5O0rUdeXy95dtrfUbUoiaZF9XjWVEccb0X9wkdZljchGnr+6AKIWuCCir6D8n+V7Ty&#xA;zoUOlwOZpAWlu7pgFaaeQ1kkKrsorsqjZVAUbAYqkX5zeW/N/mb8vtR0HypcQ22o6hwgmkncxqbZ&#xA;j++TkFcjmvw9OhOKvOvyq8i/85C+ThouhPLoMXlOznU38UHJrh4mflM3Mxrykap3JxVJL38kPzrt&#xA;5PPPl/Q77SofLPm26nv5L+VpPrRDl3S2VQKJ6hYRyEg7bg9iqyG4/JTzjJo35R2avaer5IvornWa&#xA;ytQok8Mh9A8PjPGM9aYqyrzn+XXmDWPzj8l+cLRoBpOgRXCXyyOyzEyq4X01CkN9odSMVYP5H/Kv&#xA;88vy31S70Xyjd6Pd+Tb/AFAXnqXxl+sRREqjjiAPjaJAppyHw12xVkfk78p/NGj+b/zN1a7e2Nr5&#xA;u9T9FCORi45mYj1gUHH+9HQnFWR/kZ5G1ryR+W9h5d1loW1C2luHkNu5eOkszSLRmVD0bwxVn2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViHnD8s9C8xym+Rm03WPhP6Qtwp5mMfu/Xj&#xA;YcJOH7D7SJ+w6Yqxe70T82bK0bTb22svNmkmh9KZYrpmEZ5KBDeS2LLuOst3OfFsVYXpv5c6xawa&#xA;BbR+QI2vNC9MXV7La2Ev1/hZSWQN1HJqMUbcDKJBSVqFfhoDirNk8jfmLr1uljq15a6BoQXgdNsF&#xA;Ugp4LbRgRJ/qyz3EZHWPFWd+V/J+heWbR4NLhIkmIa6u5WMk8zKOKmSQ70UbKooqjZQBtiqdYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYqxz8xPOUXkvyZqfmeW1a9j01Eka1VxGX5yLHQOQ1Pt16Yq8703/AJyMuI7nRn81+TdQ8t6J&#xA;rskcOn63LIk9sXnXlFzIVOKsu9fDelAcVeoX3nDyjp+px6Vf63p9pqktPSsJ7qGO4bl9njE7BzXt&#xA;tirtQ84+UdNuJbbUdb0+zuICgnhuLqGJ0MgBQOrsCvIMONeuKqmr+aPLOjWkN5rGr2Wm2lxQQXN3&#xA;cRQRyEio4PIyq22+2Ktv5n8tJa292+rWa2l4SLS4NxEI5Su5EbluL09sVYza/nN5Eu/Pcfk21vVu&#xA;L2azF9FqEUtu9k6k0ESyrKWMtPi4hOm9cVT2Pzz5Jlmjhj8waa800bzQxreQFnijrzkUB6lV4nkR&#xA;sKHFURZeZ/LV/ps2q2OrWV3pluWFxfQXEUkEZQVfnKrFF496nbFVKw85+T9RsLjUNP13T7ywtKfW&#xA;7u3uoJYYq9PUkRyqfScVbtvOPlG6uJra21zT57m3jM1xDHdQu8cYXkXdVYlV471O1MVSf8t/zR8r&#xA;/mDptzfaG0kf1Sd7ea1uTEs440pJwikl/dvX4WJ3ocVTbV/Onk7RbuOz1jXdO028lAaK2vLuCCRg&#xA;TQFUkdWNTirD/wAxfzqsPKXmfQPLVnYprGq64xLxi8itVt4QVpI7SBh8alii7cuNB1GKpl+aX5nQ&#xA;eQbXRp5tPbUBrGoxaaqpIIvTMoJ9Q1V+VOPTFU+u/Ovk2zmMF3r2nW84lNuYpbuBHEw6xcWcHmP5&#xA;euKsQ83fnRYaH+YmgeR7GxTVL/WHh+tzC7igW0imkVQzBg3N+Dc1jqCwpTqMVZcPO/ks6x+hBr+m&#xA;/pnn6X6M+twfWvU/k9Hn6nL2piqrL5s8qw3jWUus2Md4sq27Wz3MKyiaSvCMoW5c2oaLSpxVRi88&#xA;eSpZo4IvMGmyTTRvPDEt5AzPFFX1JFUPUqnBuRGwocVV7XzX5Xu9Km1e01ixuNJtiwuNQiuYXt4y&#xA;n2g8qsUXjXepxVKdW/NDyNYeVtR8zRavaanpmmxmSY6fc29wzMASI0pIEMjcSFUsK4qlGnfnBp2r&#xA;33lBdHsTdaf5rill+tPcwRyWhiQP6csCtIXfejKjfD3xVlMXnLyhNrDaJDrmnyaypKtpiXULXQZd&#xA;yDCG9So+WKtSedfJsesDRJNe05NZLCMaY13ALrm3RfRL+pU+FMVTnFXYq7FXYq7FXYq7FXm//ORk&#xA;Usv5K+aI4kaSRoIeKKCSf9Ji6AYq8U83+bo/zQ8h+Tfyz8p6bqE2rRPYfpS7lt2igto7S2MUjl2P&#xA;QM1a9KDxIxVg3nTTI7fzf5907zfN9T1nUtTkm0+OTSH1C9uoXmYwtYXAkhWIcabVUEbf5IVTKdvJ&#xA;Gj/mR5mj/MrT7rVXt/L2mQW0ssL+sl7+i7VAJkieRY5mFfiZyFYHeu+KtQw32meVfy403zZp0Flb&#xA;vBqM9nrWq2N5qf1ZJ53KW6acj+jI8gVXHqxtsyn4eOKrfKXlhNb8jeRfL2qW0zW0vnWeDUrVkeJ1&#xA;gkig5qyqQ0XJaioO3bFXpWq+WvKHlT/nI2xtE0iGy0y68tmDReNsZEN8rOqFXCvSVY4yObGoHelM&#xA;VeaaD+X2h3Pkb8qri40f/TNY8zNZ61NwcSS2jXaxlJT1C+nsMVRXnTylrFpZfm3pHliwmh0Wy1zS&#xA;J5tPtkkMf1IJeGT04wd1WX0manQL4DFUDZWGnahbectT8sXjX1mnl14L86Zo503TiTJGUjfnMWM4&#xA;ahosXxUrXqcVZzonkTQNJ84fkjJp+jpB+mNGlfXyI2YXDzWCmT6wGqDyMzghux49NsVZb/ziZHot&#xA;lo/mTRzZraeZ7LU5hqKG2MUwtjQW6NKUAZVZZOKcjx60Fd1XnPniXyhovnj81bf8xNJmvNd1xCfJ&#xA;d1JC8wYGN1gFvIB8BUtCvIdOJXtQqpl5N8mXaefPyXtfNGkpNeNpN+2oJdQK54xR3Mlis/NT8UMf&#xA;phA26EClCMVZ/wD85UW882l+SxDG0hXzFbMwRS1Bwfc0xV5rrHkjR9Ti/PXWL/Shc6pYXxOk3Tox&#xA;ePlLIzGH58RUjFU/0DyvDd/mJ+XM66bAdRl8iW1ybueBGP6RgtwtvPK7Kf30RROLH4loKdMVeU/V&#xA;vLh/L+18n2+h3i/nWmsn1JPRkF0G9UkOZv5ePEUr9r4+m+KvYfIPkHSdX/OH8ztc16y+tanok1s+&#xA;lztzWNZ5YpjJKijirENCtKjbFXmWgfl9odz5H/Km4uNHBvNY8zNZ63NwdZJbRrtYykpFCE9PbFU3&#xA;1+yh8tWf5xaZY+X0u9BTWNIWKwkN1HaW8TG5dp+Nq8MjIjInwhqfZrUCmKpZ5c0awv8AUPzLjtoY&#xA;NVs5/K8lzpMsGlHTbeWWARESWlm68gY2DUenIkFu+Ksj8si1vb/8lG8swrFNBY6pBcyJA0KLqK2o&#xA;WRpKqoZvV6vvy8TiqUflXF+XJj8veWdT8s6ncfmna66Zb6WH1ILiEpKWWeaZuX7mJeHNadQW71Kq&#xA;Ra99QtPPmqW0Noms6pdeYpJH8r6tZTQ6uZpJT8dvqdk3Jo6n4azqp+16Z6lV914q7FXYq7FXYq7F&#xA;XYq7FXYq7FXmHlP/AAX/AMr488/UP0l/ir6pYfpn1/Q/R/p/V4fR+rcP33Lhx58+9aYq9PxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:634D03044DC2DF1195C0FDC5A26545EA</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:674D03044DC2DF1195C0FDC5A26545EA</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>89.500001</stDim:w>
            <stDim:h>34.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -73.9326 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 73.9326 li
228.222 73.9326 li
228.222 0 li
cp
clp
[1 0 0 1 0 0 ]ct
153.756 9.89648 mo
153.395 9.77051 152.98 9.73438 152.639 9.73438 cv
151.629 9.73438 151.178 10.2568 151.178 11.4463 cv
151.178 12.2031 li
153.268 12.2031 li
153.268 13.9873 li
151.178 13.9873 li
151.178 21.1597 li
148.889 21.1597 li
148.889 13.9873 li
147.322 13.9873 li
147.322 12.2031 li
148.889 12.2031 li
148.889 11.4824 li
148.889 9.0498 150.006 7.86035 152.457 7.86035 cv
152.943 7.86035 153.449 7.89648 153.918 8.00439 cv
153.756 9.89648 li
cp
142.152 13.9692 mo
141.125 13.9692 140.115 14.7622 140.115 16.6006 cv
140.115 18.4385 140.781 19.3755 142.115 19.3755 cv
143.252 19.3755 144.115 18.4565 144.115 16.6362 cv
144.115 14.9063 143.504 13.9692 142.152 13.9692 cv
cp
141.918 21.3398 mo
139.377 21.3398 137.736 20.0244 137.736 16.8345 cv
137.736 14.0415 139.594 12.0234 142.314 12.0234 cv
144.855 12.0234 146.494 13.4287 146.494 16.5103 cv
146.494 19.3213 144.604 21.3398 141.918 21.3398 cv
cp
130.836 21.9883 mo
129.771 24.7817 128.836 25.6289 126.781 25.6289 cv
126.385 25.6289 125.898 25.5742 125.52 25.4844 cv
125.664 23.502 li
126.078 23.6284 126.457 23.7002 126.889 23.7002 cv
127.646 23.7002 128.15 23.3579 128.619 22.0244 cv
128.926 21.1597 li
125.627 12.2031 li
128.188 12.2031 li
129.395 15.627 li
129.664 16.4023 129.898 17.2852 130.098 18.0957 cv
130.115 18.0957 li
130.313 17.2852 130.691 16.0957 130.98 15.249 cv
132.043 12.2031 li
134.512 12.2031 li
130.836 21.9883 li
cp
122.834 21.3398 mo
120.854 21.3398 120.223 20.6191 120.223 18.5283 cv
120.223 13.9873 li
118.689 13.9873 li
118.689 12.2031 li
120.223 12.2031 li
120.223 9.44629 li
122.529 8.8335 li
122.529 12.2031 li
124.709 12.2031 li
124.709 13.9873 li
122.529 13.9873 li
122.529 17.916 li
122.529 19.0693 122.799 19.3936 123.592 19.3936 cv
123.971 19.3936 124.385 19.3394 124.709 19.249 cv
124.709 21.1055 li
124.133 21.2495 123.465 21.3398 122.834 21.3398 cv
cp
114.707 21.1597 mo
114.707 12.2031 li
117.014 12.2031 li
117.014 21.1597 li
114.707 21.1597 li
cp
115.861 11.0498 mo
115.068 11.0498 114.438 10.4194 114.438 9.64453 cv
114.438 8.8877 115.068 8.25684 115.861 8.25684 cv
116.654 8.25684 117.303 8.86963 117.303 9.64453 cv
117.303 10.4194 116.654 11.0498 115.861 11.0498 cv
cp
108.744 21.3398 mo
108.094 21.3398 107.445 21.2676 106.869 21.1777 cv
106.924 19.2852 li
107.482 19.4297 108.166 19.5557 108.852 19.5557 cv
109.734 19.5557 110.311 19.1953 110.311 18.6006 cv
110.311 17.0146 106.689 17.916 106.689 14.8701 cv
106.689 13.3027 107.969 12.0049 110.492 12.0049 cv
111.014 12.0049 111.59 12.0771 112.131 12.167 cv
112.059 13.9873 li
111.555 13.8433 110.959 13.7529 110.4 13.7529 cv
109.5 13.7529 109.068 14.1133 109.068 14.6719 cv
109.068 16.1318 112.744 15.4829 112.744 18.3843 cv
112.744 20.1504 111.193 21.3398 108.744 21.3398 cv
cp
105.59 14.2754 mo
103.932 13.9336 103.104 15.0146 103.104 17.5015 cv
103.104 21.1597 li
100.797 21.1597 li
100.797 12.2031 li
102.977 12.2031 li
102.977 12.6538 102.924 13.3745 102.814 14.0054 cv
102.852 14.0054 li
103.283 12.8701 104.148 11.8789 105.697 12.0049 cv
105.59 14.2754 li
cp
95.0313 13.6992 mo
94.0762 13.6992 93.4082 14.4019 93.2832 15.4829 cv
96.5801 15.4829 li
96.6152 14.3657 96.0039 13.6992 95.0313 13.6992 cv
cp
98.7969 17.0508 mo
93.2461 17.0508 li
93.2285 18.7266 94.0566 19.5376 95.7148 19.5376 cv
96.5977 19.5376 97.5527 19.3394 98.3281 18.979 cv
98.5449 20.7632 li
97.5898 21.1416 96.4531 21.3398 95.3359 21.3398 cv
92.4902 21.3398 90.9043 19.916 90.9043 16.7627 cv
90.9043 14.0234 92.418 12.0049 95.1016 12.0049 cv
97.7148 12.0049 98.8691 13.7891 98.8691 16.0059 cv
98.8691 16.312 98.8516 16.6724 98.7969 17.0508 cv
cp
87.2109 21.1597 mo
84.8672 21.1597 li
81.5527 12.2031 li
84.0762 12.2031 li
85.498 16.2402 li
85.7148 16.8525 85.9316 17.5732 86.0938 18.2222 cv
86.1289 18.2222 li
86.2734 17.6094 86.4531 16.9248 86.6699 16.312 cv
88.1113 12.2031 li
90.5625 12.2031 li
87.2109 21.1597 li
cp
77.9487 21.1597 mo
77.9487 12.2031 li
80.2559 12.2031 li
80.2559 21.1597 li
77.9487 21.1597 li
cp
79.1016 11.0498 mo
78.3091 11.0498 77.6782 10.4194 77.6782 9.64453 cv
77.6782 8.8877 78.3091 8.25684 79.1016 8.25684 cv
79.8945 8.25684 80.543 8.86963 80.543 9.64453 cv
80.543 10.4194 79.8945 11.0498 79.1016 11.0498 cv
cp
73.1558 21.1597 mo
73.1558 15.4287 li
73.1558 14.4922 72.9033 13.9336 72.0562 13.9336 cv
70.8848 13.9336 69.9658 15.2666 69.9658 16.8345 cv
69.9658 21.1597 li
67.6592 21.1597 li
67.6592 12.2031 li
69.8398 12.2031 li
69.8398 12.6177 69.8037 13.3203 69.7134 13.7891 cv
69.7314 13.8071 li
70.272 12.7441 71.3174 12.0049 72.7769 12.0049 cv
74.7954 12.0049 75.4438 13.3027 75.4438 14.8701 cv
75.4438 21.1597 li
73.1558 21.1597 li
cp
60.1089 21.3574 mo
56.2705 21.3574 55.4058 19.2676 55.4058 16.9429 cv
55.4058 8.99561 li
57.7485 8.99561 li
57.7485 16.7988 li
57.7485 18.3301 58.2529 19.4116 60.271 19.4116 cv
62.0732 19.4116 62.8301 18.6548 62.8301 16.582 cv
62.8301 8.99561 li
65.1548 8.99561 li
65.1548 16.438 li
65.1548 19.772 63.3169 21.3574 60.1089 21.3574 cv
cp
114.922 31.6279 mo
114.922 29.7168 li
113.242 29.7168 li
113.242 31.6279 li
112.182 31.6279 li
112.182 27.0381 li
113.242 27.0381 li
113.242 28.7998 li
114.922 28.7998 li
114.922 27.0381 li
115.982 27.0381 li
115.982 31.6279 li
114.922 31.6279 li
cp
108.164 31.6279 mo
108.164 30.7979 li
109.639 28.3301 li
109.713 28.208 109.795 28.0918 109.883 27.9766 cv
109.762 27.9834 109.605 27.9902 109.162 27.9902 cv
108.211 27.9902 li
108.211 27.0381 li
111.182 27.0381 li
111.182 27.9014 li
109.625 30.4033 li
109.57 30.4922 109.516 30.5674 109.449 30.6621 cv
109.537 30.6484 109.795 30.6484 110.34 30.6484 cv
111.209 30.6484 li
111.209 31.6279 li
108.164 31.6279 li
cp
105.334 31.7158 mo
103.873 31.7158 103.52 30.9277 103.52 30.0098 cv
103.52 27.0381 li
104.58 27.0381 li
104.58 29.9482 li
104.58 30.4854 104.75 30.8252 105.402 30.8252 cv
106 30.8252 106.232 30.5732 106.232 29.8867 cv
106.232 27.0381 li
107.279 27.0381 li
107.279 29.8262 li
107.279 31.1182 106.551 31.7158 105.334 31.7158 cv
cp
99.4785 40.2021 mo
99.4785 34.4717 li
99.4785 33.5342 99.2246 32.9756 98.3789 32.9756 cv
97.207 32.9756 96.2891 34.3096 96.2891 35.877 cv
96.2891 40.2021 li
93.9824 40.2021 li
93.9824 27.0469 li
96.2891 27.0469 li
96.2891 30.8857 li
96.2891 31.4268 96.252 32.1826 96.125 32.7061 cv
96.1621 32.7236 li
96.6855 31.7148 97.7109 31.0479 99.0996 31.0479 cv
101.117 31.0479 101.766 32.3457 101.766 33.9131 cv
101.766 40.2021 li
99.4785 40.2021 li
cp
89.7285 40.3643 mo
87.2422 40.3643 85.6934 39.0674 85.6934 36.0215 cv
85.6934 33.2285 87.1523 31.084 90.3242 31.084 cv
90.9375 31.084 91.5859 31.1738 92.1621 31.3359 cv
91.9277 33.3369 li
91.4414 33.1563 90.8828 33.0117 90.3066 33.0117 cv
88.8457 33.0117 88.1074 34.0928 88.1074 35.7871 cv
88.1074 37.3184 88.7012 38.3643 90.2344 38.3643 cv
90.8457 38.3643 91.5137 38.2373 92 37.9854 cv
92.1797 39.9502 li
91.5664 40.1846 90.6836 40.3643 89.7285 40.3643 cv
cp
81.6992 40.2021 mo
81.6992 31.2461 li
84.0059 31.2461 li
84.0059 40.2021 li
81.6992 40.2021 li
cp
82.8535 30.0928 mo
82.0605 30.0928 81.4297 29.4619 81.4297 28.6865 cv
81.4297 27.9307 82.0605 27.2998 82.8535 27.2998 cv
83.6465 27.2998 84.2949 27.9121 84.2949 28.6865 cv
84.2949 29.4619 83.6465 30.0928 82.8535 30.0928 cv
cp
79.9258 33.3184 mo
78.2686 32.9756 77.4395 34.0576 77.4395 36.5439 cv
77.4395 40.2021 li
75.1328 40.2021 li
75.1328 31.2461 li
77.3135 31.2461 li
77.3135 31.6963 77.2593 32.417 77.1514 33.0479 cv
77.187 33.0479 li
77.6196 31.9131 78.4849 30.9219 80.0342 31.0479 cv
79.9258 33.3184 li
cp
70.4839 40.2021 mo
70.4839 39.7881 70.502 39.085 70.5923 38.6162 cv
70.5742 38.5986 li
70.0337 39.6611 69.0063 40.4004 67.5288 40.4004 cv
65.5103 40.4004 64.8618 39.1025 64.8618 37.5352 cv
64.8618 31.2461 li
67.1499 31.2461 li
67.1499 36.9766 li
67.1499 37.9131 67.4028 38.4727 68.2676 38.4727 cv
69.439 38.4727 70.3398 37.1387 70.3398 35.5713 cv
70.3398 31.2461 li
72.6465 31.2461 li
72.6465 40.2021 li
70.4839 40.2021 li
cp
54.9551 40.2021 mo
54.9551 38.4004 li
59.3345 31.2637 li
59.5864 30.8496 59.8384 30.4893 60.127 30.1104 cv
59.6943 30.1289 59.1177 30.1465 57.9106 30.1465 cv
55.0991 30.1465 li
55.0991 28.0381 li
62.9561 28.0381 li
62.9561 29.9121 li
58.3247 37.2285 li
58.1445 37.5166 57.9824 37.7871 57.7661 38.0762 cv
58.0728 38.04 58.9014 38.04 60.3975 38.04 cv
63.0283 38.04 li
63.0283 40.2021 li
54.9551 40.2021 li
cp
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
f
31.5615 34.6221 mo
31.5615 11.4697 li
31.0645 11.4697 li
31.0645 8.91699 li
31.0591 8.59912 31.0137 8.39844 30.873 8.07275 cv
30.8374 7.99072 30.7861 7.90039 30.7285 7.81055 cv
30.7285 6.88867 li
30.7285 6.88867 30.7275 6.16504 30.4287 5.62012 cv
30.1035 5.02539 29.4727 4.7002 29.1655 4.5708 cv
29.0947 4.5376 29.0483 4.52246 29.0396 4.52051 cv
28.9883 4.50293 li
28.9248 4.52051 li
28.894 4.5293 28.395 4.6875 27.9204 5.3335 cv
27.4902 5.92676 27.4751 6.68604 27.4717 6.89648 cv
27.4717 6.93066 27.4727 6.95068 27.4727 6.95313 cv
27.4727 7.80273 li
27.4155 7.88672 27.3354 8.01416 27.248 8.20166 cv
27.1162 8.52539 27.1069 8.8252 27.1025 9.00586 cv
27.1025 11.4697 li
26.603 11.4697 li
26.603 19.9224 li
25.2349 18.5542 li
25.2349 16.1416 li
24.7705 14.585 li
24.0918 9.24365 li
24.0918 9.24414 li
23.5908 14.3613 li
23.125 16.1431 li
23.125 18.3779 li
21.7695 19.7334 li
21.7695 11.4697 li
21.2725 11.4697 li
21.2729 8.91699 li
21.2676 8.59912 21.2222 8.39844 21.0811 8.07275 cv
21.0459 7.99072 20.9941 7.90039 20.937 7.81055 cv
20.937 6.88867 li
20.937 6.88867 20.9355 6.16504 20.6372 5.62012 cv
20.3115 5.02539 19.6807 4.7002 19.374 4.5708 cv
19.3027 4.5376 19.2568 4.52246 19.248 4.52051 cv
19.1968 4.50293 li
19.1338 4.52051 li
19.1021 4.5293 18.6035 4.6875 18.1289 5.3335 cv
17.6987 5.92676 17.6836 6.68604 17.6802 6.89648 cv
17.6802 6.93066 17.6807 6.95068 17.6807 6.95313 cv
17.6807 7.80273 li
17.624 7.88672 17.5439 8.01416 17.4561 8.20166 cv
17.3247 8.52539 17.3154 8.8252 17.311 9.00586 cv
17.311 11.4697 li
16.8115 11.4697 li
16.8115 34.6221 li
4.64648 34.6221 li
2.94434 31.4893 1.97461 27.9014 1.97461 24.084 cv
1.97461 17.9766 4.44922 12.4487 8.45166 8.44531 cv
12.4551 4.44287 17.9829 1.96777 24.0908 1.96777 cv
30.1987 1.96777 35.7266 4.44287 39.7295 8.44531 cv
43.7319 12.4487 46.207 17.9766 46.2075 24.084 cv
46.207 27.9014 45.2373 31.4893 43.5352 34.6221 cv
31.5615 34.6221 li
cp
30.9556 29.375 mo
30.9556 34.6221 li
27.0132 34.6221 li
27.0132 29.375 li
30.9556 29.375 li
cp
30.9556 25.9326 mo
30.9556 29.0352 li
27.0132 29.0352 li
27.0132 25.9326 li
30.9556 25.9326 li
cp
30.9556 20.8379 mo
30.9556 25.5928 li
27.0132 25.5928 li
27.0132 20.8379 li
30.9556 20.8379 li
cp
29.7397 18.5059 mo
29.7397 20.498 li
28.2334 20.498 li
28.2334 18.5034 li
28.2334 18.1196 28.374 17.8081 28.5977 17.5942 cv
28.7085 17.4883 28.8398 17.4097 28.9858 17.3525 cv
28.9873 17.3525 li
29.1357 17.4102 29.2642 17.4883 29.375 17.5938 cv
29.5991 17.8081 29.7393 18.1191 29.7397 18.5034 cv
29.7397 18.5059 li
cp
30.9556 16.5034 mo
30.9556 20.498 li
30.0796 20.498 li
30.0796 18.5034 li
30.0801 18.0352 29.9038 17.6279 29.6094 17.3477 cv
29.4521 17.1973 29.2651 17.0859 29.0596 17.0142 cv
29.0503 17.0098 28.9858 16.9902 28.9858 16.9902 cv
28.9858 16.9902 28.9248 17.0103 28.918 17.0127 cv
28.7114 17.084 28.5215 17.1973 28.3628 17.3481 cv
28.0684 17.6279 27.8926 18.0361 27.8931 18.5034 cv
27.8931 20.498 li
27.0132 20.498 li
27.0132 16.5034 li
30.9556 16.5034 li
cp
29.6621 14.75 mo
29.6621 16.1636 li
28.3115 16.1636 li
28.311 14.75 li
28.3159 14.2036 28.5845 13.8247 28.9858 13.6475 cv
29.3877 13.8242 29.6572 14.2031 29.6621 14.75 cv
cp
30.9556 13.0225 mo
30.9556 16.1636 li
30.002 16.1636 li
30.002 14.75 li
30.0024 14.2808 29.8286 13.8843 29.543 13.6123 cv
29.3887 13.4653 29.2041 13.3545 29 13.2842 cv
28.9873 13.2798 28.9883 13.2793 28.9883 13.2793 cv
28.9883 13.2793 28.9858 13.2798 28.9731 13.2842 cv
28.769 13.3545 28.584 13.4653 28.4302 13.6123 cv
28.1445 13.8843 27.9707 14.2813 27.9712 14.75 cv
27.9712 16.1636 li
27.0132 16.1636 li
27.0132 13.0225 li
30.9556 13.0225 li
cp
30.9556 11.877 mo
30.9556 12.6826 li
27.0132 12.6826 li
27.0132 11.877 li
30.9556 11.877 li
cp
28.0361 8.34277 mo
28.1274 8.56543 28.1426 8.80664 28.145 8.97754 cv
28.1484 11.4697 li
27.5137 11.4697 li
27.5137 8.97461 li
27.5176 8.80664 27.5356 8.57813 27.6309 8.34473 cv
27.7007 8.19482 27.7676 8.07031 27.8252 7.98535 cv
27.8979 8.09131 27.9663 8.19336 28.0361 8.34277 cv
cp
29.4731 8.99365 mo
29.4722 11.4697 li
28.4995 11.4697 li
28.499 10.7793 28.4985 8.99316 28.4985 8.9917 cv
28.5063 8.82959 28.5186 8.60547 28.6357 8.375 cv
28.7583 8.13281 28.9893 7.98877 28.9893 7.98877 cv
28.9902 7.98877 li
28.9902 7.98877 29.2095 8.13281 29.3325 8.375 cv
29.4551 8.61768 29.4663 8.82764 29.4731 8.99365 cv
cp
30.1465 7.98779 mo
30.2075 8.07275 30.271 8.19727 30.3408 8.34717 cv
30.436 8.58105 30.4614 8.80908 30.4648 8.97705 cv
30.4648 11.4697 li
29.8232 11.4697 li
29.8232 10.9214 29.8232 9.71387 29.8232 8.97754 cv
29.8262 8.80664 29.8564 8.56836 29.9478 8.34521 cv
30.0254 8.16992 30.0879 8.07031 30.1465 7.98779 cv
cp
27.9009 6.74902 mo
27.918 6.4707 27.9932 5.94434 28.2627 5.58496 cv
28.4678 5.30615 28.6709 5.14063 28.8193 5.04492 cv
28.8877 5.00049 28.9424 4.97266 28.9824 4.9541 cv
29.0225 4.97266 29.0771 5.00049 29.1455 5.04492 cv
29.2939 5.14063 29.4971 5.30615 29.7021 5.58496 cv
29.9717 5.94434 30.0469 6.4707 30.064 6.74902 cv
27.9009 6.74902 li
cp
30.0674 7.08887 mo
30.0674 7.2749 li
30.062 7.3125 30.0518 7.36816 30.0327 7.41992 cv
30.001 7.50488 29.9214 7.63965 29.8159 7.80469 cv
29.7759 7.87012 29.7056 7.979 29.6279 8.13574 cv
29.5273 7.98145 29.4424 7.87988 29.3818 7.81641 cv
29.3154 7.74609 29.2266 7.65625 29.1543 7.5708 cv
28.9966 7.38477 28.9883 7.27295 28.9883 7.27295 cv
28.9883 7.27344 li
28.9883 7.27344 28.9834 7.38477 28.8257 7.5708 cv
28.7529 7.65625 28.6646 7.74609 28.5977 7.81641 cv
28.5366 7.88086 28.4507 7.98389 28.3481 8.1416 cv
28.2686 7.98047 28.1968 7.86914 28.1558 7.80176 cv
28.0503 7.63672 27.9712 7.50195 27.939 7.41699 cv
27.9082 7.33545 27.8984 7.24023 27.8975 7.23242 cv
27.8975 7.08887 li
30.0674 7.08887 li
cp
26.603 29.375 mo
26.603 34.6221 li
21.5664 34.6221 li
21.5664 29.375 li
26.603 29.375 li
cp
23.1553 25.9326 mo
23.1553 27.9307 li
25.0283 27.9307 li
25.0283 25.9326 li
26.603 25.9326 li
26.603 29.0352 li
21.5664 29.0352 li
21.5664 25.9326 li
23.1553 25.9326 li
cp
26.603 23.3535 mo
26.603 25.5928 li
25.0283 25.5928 li
25.0283 25.0322 li
25.0283 24.5161 24.6094 24.0957 24.0918 24.0957 cv
23.5747 24.0957 23.1553 24.5161 23.1553 25.0322 cv
23.1553 25.5928 li
21.5664 25.5928 li
21.5664 23.3535 li
26.603 23.3535 li
cp
26.603 20.8379 mo
26.603 22.7588 li
21.5664 22.7588 li
21.5664 20.8379 li
26.603 20.8379 li
cp
24.0918 17.9878 mo
26.6016 20.498 li
21.582 20.498 li
24.0918 17.9878 li
cp
23.5664 16.1299 mo
23.9629 14.4346 li
24.126 11.5996 li
24.2227 14.4331 li
24.6187 16.1299 li
23.5664 16.1299 li
cp
24.6338 16.5376 mo
24.6338 17.9531 li
24.0918 17.4111 li
23.5508 17.9521 li
23.5508 16.5376 li
24.6338 16.5376 li
cp
21.1641 29.375 mo
21.1641 34.6221 li
17.2217 34.6221 li
17.2217 29.375 li
21.1641 29.375 li
cp
21.1641 25.9326 mo
21.1641 29.0352 li
17.2217 29.0352 li
17.2217 25.9326 li
21.1641 25.9326 li
cp
21.1641 20.8379 mo
21.1641 25.5928 li
17.2217 25.5928 li
17.2217 20.8379 li
21.1641 20.8379 li
cp
19.9482 18.5059 mo
19.9482 20.498 li
18.4414 20.498 li
18.4414 18.5034 li
18.4419 18.1196 18.582 17.8081 18.8057 17.5942 cv
18.917 17.4883 19.0479 17.4097 19.1943 17.3525 cv
19.1958 17.3525 li
19.3438 17.4102 19.4722 17.4883 19.583 17.5938 cv
19.8076 17.8081 19.9473 18.1191 19.9478 18.5034 cv
19.9482 18.5059 li
cp
21.1641 16.5034 mo
21.1641 20.498 li
20.2881 20.498 li
20.2881 18.5034 li
20.2881 18.0352 20.1123 17.6279 19.8179 17.3477 cv
19.6606 17.1973 19.4736 17.0859 19.2681 17.0142 cv
19.2583 17.0098 19.1938 16.9902 19.1938 16.9902 cv
19.1938 16.9902 19.1328 17.0103 19.1265 17.0127 cv
18.9199 17.084 18.73 17.1973 18.5713 17.3481 cv
18.2769 17.6279 18.1006 18.0361 18.1016 18.5034 cv
18.1016 20.498 li
17.2217 20.498 li
17.2217 16.5034 li
21.1641 16.5034 li
cp
19.8701 14.75 mo
19.8701 16.1636 li
18.52 16.1636 li
18.5195 14.75 li
18.5244 14.2036 18.793 13.8247 19.1943 13.6475 cv
19.5962 13.8242 19.8652 14.2031 19.8701 14.75 cv
cp
21.1641 13.0225 mo
21.1641 16.1636 li
20.21 16.1636 li
20.21 14.75 li
20.2109 14.2808 20.0371 13.8843 19.751 13.6123 cv
19.5972 13.4653 19.4126 13.3545 19.2085 13.2842 cv
19.1958 13.2798 19.1968 13.2793 19.1968 13.2793 cv
19.1968 13.2793 19.1943 13.2798 19.1816 13.2842 cv
18.9775 13.3545 18.7925 13.4653 18.6382 13.6123 cv
18.3525 13.8843 18.1787 14.2813 18.1797 14.75 cv
18.1797 16.1636 li
17.2217 16.1636 li
17.2217 13.0225 li
21.1641 13.0225 li
cp
21.1641 11.877 mo
21.1641 12.6826 li
17.2217 12.6826 li
17.2217 11.877 li
21.1641 11.877 li
cp
18.2446 8.34277 mo
18.3359 8.56543 18.3511 8.80664 18.3535 8.97754 cv
18.3564 11.4697 li
17.7227 11.4697 li
17.7222 8.97461 li
17.7256 8.80664 17.7441 8.57813 17.8389 8.34473 cv
17.9092 8.19482 17.9761 8.07031 18.0337 7.98535 cv
18.1064 8.09131 18.1748 8.19336 18.2446 8.34277 cv
cp
19.6816 8.99365 mo
19.6807 11.4697 li
18.708 11.4697 li
18.7075 10.7793 18.7065 8.99316 18.7065 8.9917 cv
18.7148 8.82959 18.7271 8.60547 18.8438 8.375 cv
18.9668 8.13281 19.1978 7.98877 19.1978 7.98877 cv
19.1987 7.98877 li
19.1987 7.98877 19.418 8.13281 19.5405 8.375 cv
19.6636 8.61768 19.6748 8.82764 19.6816 8.99365 cv
cp
20.3545 7.98779 mo
20.416 8.07275 20.4795 8.19727 20.5493 8.34717 cv
20.6445 8.58105 20.6699 8.80908 20.6733 8.97705 cv
20.6733 11.4697 li
20.0313 11.4697 li
20.0317 10.9214 20.0317 9.71387 20.0317 8.97754 cv
20.0342 8.80664 20.0645 8.56836 20.1558 8.34521 cv
20.2339 8.16992 20.2964 8.07031 20.3545 7.98779 cv
cp
18.1094 6.74902 mo
18.126 6.4707 18.2017 5.94434 18.4712 5.58496 cv
18.6763 5.30615 18.8794 5.14063 19.0278 5.04492 cv
19.0962 5.00049 19.1509 4.97266 19.1904 4.9541 cv
19.2305 4.97266 19.2852 5.00049 19.3535 5.04492 cv
19.502 5.14063 19.7051 5.30615 19.9102 5.58496 cv
20.1797 5.94434 20.2554 6.4707 20.2725 6.74902 cv
18.1094 6.74902 li
cp
20.2754 7.08887 mo
20.2754 7.2749 li
20.2705 7.3125 20.2603 7.36816 20.2412 7.41992 cv
20.209 7.50488 20.1299 7.63965 20.0244 7.80469 cv
19.9844 7.87012 19.9141 7.979 19.8364 8.13574 cv
19.7354 7.98145 19.6509 7.87988 19.5903 7.81641 cv
19.5234 7.74609 19.4351 7.65625 19.3623 7.5708 cv
19.2051 7.38477 19.1968 7.27295 19.1968 7.27295 cv
19.1968 7.27344 li
19.1968 7.27344 19.1914 7.38477 19.0342 7.5708 cv
18.9614 7.65625 18.873 7.74609 18.8062 7.81641 cv
18.7451 7.88086 18.6592 7.98389 18.5562 8.1416 cv
18.4766 7.98047 18.4048 7.86914 18.3643 7.80176 cv
18.2588 7.63672 18.1792 7.50195 18.1475 7.41699 cv
18.1172 7.33643 18.1069 7.24268 18.106 7.2334 cv
18.106 7.08887 li
20.2754 7.08887 li
cp
43.0269 35.5146 mo
5.15527 35.5146 li
5.04492 35.333 4.93848 35.1484 4.83301 34.9629 cv
43.3486 34.9629 li
43.2432 35.1484 43.1367 35.333 43.0269 35.5146 cv
cp
41.541 37.6729 mo
41.2842 37.1318 40.7334 36.7568 40.0947 36.7568 cv
39.2109 36.7568 38.4941 37.4736 38.4941 38.3584 cv
38.4941 38.875 li
37.915 38.875 li
37.915 38.3584 li
37.915 37.4736 37.1982 36.7568 36.314 36.7568 cv
35.4302 36.7568 34.7134 37.4736 34.7134 38.3584 cv
34.7134 38.875 li
34.1338 38.875 li
34.1338 38.3584 li
34.1338 37.4736 33.417 36.7568 32.5332 36.7568 cv
31.6489 36.7568 30.9326 37.4736 30.9326 38.3584 cv
30.9326 38.875 li
30.353 38.875 li
30.353 38.3584 li
30.353 37.4736 29.6362 36.7568 28.7524 36.7568 cv
27.8682 36.7568 27.1514 37.4736 27.1514 38.3584 cv
27.1514 38.875 li
26.5542 38.875 li
26.3726 37.6768 25.3408 36.7568 24.0918 36.7568 cv
22.8428 36.7568 21.8115 37.6768 21.6294 38.875 cv
21.0146 38.875 li
21.0146 38.3584 li
21.0146 37.4736 20.2979 36.7568 19.4141 36.7568 cv
18.5298 36.7568 17.813 37.4736 17.813 38.3584 cv
17.813 38.875 li
17.2334 38.875 li
17.2334 38.3584 li
17.2334 37.4736 16.5171 36.7568 15.6328 36.7568 cv
14.749 36.7568 14.0322 37.4736 14.0322 38.3584 cv
14.0322 38.875 li
13.4526 38.875 li
13.4526 38.3584 li
13.4526 37.4736 12.7358 36.7568 11.8521 36.7568 cv
10.9678 36.7568 10.251 37.4736 10.251 38.3584 cv
10.251 38.875 li
9.67188 38.875 li
9.67188 38.3584 li
9.67188 37.4736 8.95508 36.7568 8.07129 36.7568 cv
7.4375 36.7568 6.89063 37.126 6.63086 37.6602 cv
6.24072 37.1592 5.87305 36.6406 5.52637 36.1064 cv
42.6553 36.1064 li
42.3057 36.6445 41.9346 37.168 41.541 37.6729 cv
cp
39.7295 39.7227 mo
36.2793 43.1729 31.6963 45.4863 26.5854 46.0596 cv
26.5854 43.5303 li
27.5195 43.5303 li
29.2515 43.5303 30.5034 43.3857 30.5034 43.3857 cv
30.5034 43.3857 29.2148 43.1904 27.5195 43.1904 cv
26.5854 43.1904 li
26.5854 39.4697 li
27.7021 39.4697 li
27.7021 39.4629 li
27.7021 39.4629 li
27.7021 38.3584 li
27.7021 37.7197 28.2202 37.2021 28.8589 37.2021 cv
29.4976 37.2021 30.0156 37.7197 30.0156 38.3584 cv
30.0156 39.4697 li
31.4829 39.4697 li
31.4829 39.4629 li
31.4834 39.4629 li
31.4834 38.3584 li
31.4834 37.7197 32.001 37.2021 32.6396 37.2021 cv
33.2783 37.2021 33.7959 37.7197 33.7959 38.3584 cv
33.7959 39.4697 li
35.2642 39.4697 li
35.2642 39.4629 li
35.2642 39.4629 li
35.2642 38.3584 li
35.2642 37.7197 35.7817 37.2021 36.4209 37.2021 cv
37.0596 37.2021 37.5771 37.7197 37.5771 38.3584 cv
37.5771 39.4697 li
39.0449 39.4697 li
39.0449 39.4629 li
39.0449 39.4629 li
39.0449 38.3584 li
39.0449 37.7197 39.5625 37.2021 40.2017 37.2021 cv
40.708 37.2021 41.1377 37.5283 41.2939 37.9824 cv
40.8027 38.5889 40.2813 39.1709 39.7295 39.7227 cv
cp
25.4141 41.5322 mo
25.2588 42.1182 24.7266 42.5508 24.0918 42.5508 cv
23.457 42.5508 22.9253 42.1182 22.77 41.5322 cv
25.4141 41.5322 li
cp
23.7153 40.376 mo
23.8208 40.6689 24.0991 40.8799 24.4292 40.8799 cv
24.7861 40.8799 25.084 40.6328 25.166 40.2998 cv
25.3867 40.3105 25.6079 40.375 25.8271 40.5596 cv
26.0381 40.7363 26.1206 41.041 26.1499 41.1914 cv
22.0337 41.1914 li
22.063 41.041 22.1455 40.7363 22.3569 40.5596 cv
22.8076 40.1807 23.2676 40.3047 23.7153 40.376 cv
cp
23.1797 37.2305 mo
23.6279 37.8711 li
24.0859 37.002 li
24.5435 37.8711 li
24.9912 37.2305 li
24.8135 38.3428 li
23.3574 38.3428 li
23.1797 37.2305 li
cp
23.3911 38.6836 mo
24.7925 38.6836 li
24.8462 38.8125 24.98 39.1377 25.0625 39.3262 cv
25.1196 39.457 25.1924 39.5977 25.1035 39.7422 cv
24.9971 39.9131 24.8589 39.8887 24.7612 39.8809 cv
24.7563 39.8799 24.75 39.8809 24.7446 39.8799 cv
24.647 40.1475 24.3926 40.3389 24.0918 40.3389 cv
23.791 40.3389 23.5371 40.1475 23.439 39.8799 cv
23.4336 39.8809 23.4272 39.8799 23.4224 39.8809 cv
23.3247 39.8887 23.1865 39.9131 23.0801 39.7422 cv
22.9912 39.5977 23.064 39.457 23.1211 39.3262 cv
23.2036 39.1377 23.3374 38.8125 23.3911 38.6836 cv
cp
25.7939 46.1357 mo
25.2319 46.1787 24.6641 46.2012 24.0908 46.2012 cv
23.5186 46.2012 22.9512 46.1787 22.3896 46.1367 cv
21.9717 43.5303 li
22.4541 43.5303 li
22.334 43.2441 22.125 42.7441 22.0449 42.541 cv
21.915 42.2148 22.0117 41.999 22.2285 41.915 cv
22.4395 41.833 22.6777 41.9492 22.7524 42.2275 cv
22.9639 43.0195 li
23.2715 43.0195 li
23.271 43.5303 li
23.2715 43.5303 li
23.271 43.6318 li
22.5435 43.6318 li
22.5435 43.9717 li
23.6099 43.9717 li
23.6113 43.5303 li
24.9043 43.5303 li
24.9033 43.0195 li
25.2129 43.0195 li
25.4258 42.2275 li
25.501 41.9492 25.7412 41.833 25.9536 41.915 cv
26.1719 41.999 26.2686 42.2148 26.1387 42.541 cv
26.1035 42.6299 26.0464 42.7764 25.9844 42.9355 cv
25.6963 43.6318 li
24.9189 43.6318 li
24.9189 43.9717 li
25.9238 43.9717 li
26.1064 43.5303 li
26.2119 43.5303 li
25.7939 46.1357 li
cp
21.5981 43.1904 mo
20.5781 43.1904 li
20.5781 43.5303 li
21.5981 43.5303 li
21.5981 46.0605 li
16.4863 45.4873 11.9023 43.1729 8.45166 39.7227 cv
7.95654 39.2275 7.48486 38.709 7.03809 38.1689 cv
7.12891 37.6201 7.60352 37.2021 8.17773 37.2021 cv
8.81641 37.2021 9.33398 37.7197 9.33398 38.3584 cv
9.33398 39.4697 li
10.8018 39.4697 li
10.8018 39.4629 li
10.8022 39.4629 li
10.8022 38.3584 li
10.8022 37.7197 11.3198 37.2021 11.9585 37.2021 cv
12.5972 37.2021 13.1152 37.7197 13.1152 38.3584 cv
13.1152 39.4697 li
14.583 39.4697 li
14.583 39.4629 li
14.583 39.4629 li
14.583 38.3584 li
14.583 37.7197 15.1006 37.2021 15.7393 37.2021 cv
16.3779 37.2021 16.896 37.7197 16.896 38.3584 cv
16.896 39.4697 li
18.3638 39.4697 li
18.3638 39.4629 li
18.3638 39.4629 li
18.3638 38.3584 li
18.3638 37.7197 18.8818 37.2021 19.5205 37.2021 cv
20.1592 37.2021 20.6768 37.7197 20.6768 38.3584 cv
20.6768 39.4697 li
21.5981 39.4697 li
21.5981 43.1904 li
cp
24.0908 1.56836 mo
11.6553 1.56836 1.57471 11.6489 1.57471 24.084 cv
1.57471 36.5195 11.6553 46.6006 24.0908 46.6006 cv
36.5264 46.6006 46.6064 36.5195 46.6069 24.084 cv
46.6064 11.6489 36.5264 1.56836 24.0908 1.56836 cv
cp
24.4556 39.2324 mo
24.6494 39.2324 li
24.6494 38.8926 li
24.187 38.8926 li
24.187 39.6455 li
24.4561 39.6455 li
24.4556 39.2324 li
cp
7.47705 7.47656 mo
3.22461 11.7295 0.595215 17.6016 0.595215 24.0908 cv
0.595215 24.0908 li
0.595215 30.5801 3.22461 36.4521 7.47705 40.7051 cv
7.47705 40.7051 li
11.73 44.957 17.6016 47.5859 24.0908 47.5859 cv
24.0908 47.5859 li
30.5801 47.5859 36.4521 44.957 40.7051 40.7051 cv
40.7051 40.7051 li
44.9575 36.4521 47.5869 30.5801 47.5869 24.0908 cv
47.5869 24.0908 li
47.5869 17.6016 44.9575 11.7295 40.7051 7.47656 cv
40.7051 7.47656 li
36.4521 3.22412 30.5801 0.594727 24.0908 0.594727 cv
24.0908 0.594727 li
17.6016 0.594727 11.73 3.22412 7.47705 7.47656 cv
7.47705 7.47656 li
cp
0 24.0908 mo
0 10.7856 10.7861 0 24.0908 0 cv
24.0908 0 li
37.396 0 48.1816 10.7856 48.1816 24.0908 cv
48.1816 24.0908 li
48.1816 37.3955 37.396 48.1816 24.0908 48.1816 cv
24.0908 48.1816 li
10.7861 48.1816 0 37.3955 0 24.0908 cv
0 24.0908 li
cp
122.851 21.3423 mo
120.868 21.3423 120.237 20.6216 120.237 18.5313 cv
120.237 13.9902 li
118.706 13.9902 li
118.706 12.2061 li
120.237 12.2061 li
120.237 9.44873 li
122.544 8.83594 li
122.544 12.2061 li
124.725 12.2061 li
124.725 13.9902 li
122.544 13.9902 li
122.544 17.9185 li
122.544 19.0718 122.814 19.396 123.607 19.396 cv
123.985 19.396 124.4 19.3423 124.725 19.252 cv
124.725 21.1079 li
124.147 21.252 123.481 21.3423 122.851 21.3423 cv
cp
114.708 21.1621 mo
114.708 12.2061 li
117.015 12.2061 li
117.015 21.1621 li
114.708 21.1621 li
cp
115.861 11.0527 mo
115.068 11.0527 114.438 10.4219 114.438 9.64697 cv
114.438 8.89014 115.068 8.25928 115.861 8.25928 cv
116.654 8.25928 117.303 8.87207 117.303 9.64697 cv
117.303 10.4219 116.654 11.0527 115.861 11.0527 cv
cp
95.0303 13.7017 mo
94.0752 13.7017 93.4082 14.4043 93.2822 15.4858 cv
96.5801 15.4858 li
96.6162 14.3682 96.0039 13.7017 95.0303 13.7017 cv
cp
98.8691 16.0083 mo
98.8691 16.3145 98.8506 16.6748 98.7969 17.0537 cv
93.2461 17.0537 li
93.2285 18.7295 94.0566 19.54 95.7148 19.54 cv
96.5977 19.54 97.5527 19.3423 98.3281 18.9814 cv
98.5439 20.7656 li
97.5889 21.144 96.4541 21.3423 95.3369 21.3423 cv
92.4893 21.3423 90.9043 19.9189 90.9043 16.7651 cv
90.9043 14.0264 92.418 12.0078 95.1025 12.0078 cv
28.9854 3.40918 mo
28.7524 3.40918 28.5635 3.59814 28.5635 3.83105 cv
28.5635 4.06445 28.7524 4.25293 28.9854 4.25293 cv
29.2188 4.25293 29.4077 4.06445 29.4077 3.83105 cv
29.4077 3.59814 29.2188 3.40918 28.9854 3.40918 cv
cp
29.3169 31.7207 mo
29.3169 30.7207 li
29.3169 30.5342 29.1655 30.3828 28.979 30.3828 cv
28.792 30.3828 28.6406 30.5342 28.6406 30.7207 cv
28.6406 31.7207 li
29.3169 31.7207 li
cp
29.1938 27.9307 mo
29.1938 26.8047 li
29.1938 26.6885 29.1001 26.5947 28.9844 26.5947 cv
28.8691 26.5947 28.7754 26.6885 28.7754 26.8047 cv
28.7754 27.9307 li
29.1938 27.9307 li
cp
29.1938 24.5386 mo
29.1938 23.4116 li
29.1938 23.2959 29.1001 23.2026 28.9844 23.2026 cv
28.8691 23.2026 28.7754 23.2959 28.7754 23.4116 cv
28.7754 24.5386 li
29.1938 24.5386 li
cp
29.3755 15.5479 mo
29.3755 14.6797 li
29.373 14.3643 29.2178 14.146 28.9863 14.0439 cv
28.7549 14.1465 28.5996 14.3647 28.5972 14.6797 cv
28.5977 15.5479 li
29.3755 15.5479 li
cp
29.3755 19.8687 mo
29.3755 18.5239 li
29.373 18.209 29.2178 17.9907 28.9863 17.8887 cv
28.7549 17.9907 28.5996 18.209 28.5972 18.5244 cv
28.5977 19.8687 li
29.3755 19.8687 li
cp
19.1938 3.40918 mo
18.9609 3.40918 18.7715 3.59814 18.7715 3.83105 cv
18.7715 4.06445 18.9609 4.25293 19.1938 4.25293 cv
19.4268 4.25293 19.6157 4.06445 19.6157 3.83105 cv
19.6157 3.59814 19.4268 3.40918 19.1938 3.40918 cv
cp
19.5254 31.7207 mo
19.5254 30.7207 li
19.5254 30.5342 19.374 30.3828 19.187 30.3828 cv
19.0005 30.3828 18.8491 30.5342 18.8491 30.7207 cv
18.8491 31.7207 li
19.5254 31.7207 li
cp
19.4019 27.9307 mo
19.4019 26.8047 li
19.4019 26.6885 19.3086 26.5947 19.1929 26.5947 cv
19.0771 26.5947 18.9839 26.6885 18.9839 26.8047 cv
18.9839 27.9307 li
19.4019 27.9307 li
cp
19.4019 24.5386 mo
19.4019 23.4116 li
19.4019 23.2959 19.3086 23.2026 19.1929 23.2026 cv
19.0771 23.2026 18.9839 23.2959 18.9839 23.4116 cv
18.9839 24.5386 li
19.4019 24.5386 li
cp
19.584 15.5479 mo
19.584 14.6797 li
19.5811 14.3643 19.4263 14.146 19.1943 14.0439 cv
18.9629 14.1465 18.8081 14.3647 18.8057 14.6797 cv
18.8057 15.5479 li
19.584 15.5479 li
cp
19.584 19.8687 mo
19.584 18.5239 li
19.5811 18.209 19.4263 17.9907 19.1943 17.8887 cv
18.9629 17.9907 18.8081 18.209 18.8057 18.5244 cv
18.8057 19.8687 li
19.584 19.8687 li
cp
19.8398 42.9414 mo
19.6069 42.9414 19.418 43.1299 19.418 43.3633 cv
19.418 43.5967 19.6069 43.7852 19.8398 43.7852 cv
20.0732 43.7852 20.2622 43.5967 20.2622 43.3633 cv
20.2622 43.1299 20.0732 42.9414 19.8398 42.9414 cv
cp
23.8794 19.853 mo
24.3047 19.853 li
24.3047 18.9385 li
23.8794 18.9385 li
23.8794 19.853 li
23.8794 19.853 li
cp
24.0918 8.07617 mo
23.8589 8.07617 23.6699 8.26514 23.6699 8.49805 cv
23.6699 8.73145 23.8589 8.91992 24.0918 8.91992 cv
24.3252 8.91992 24.5142 8.73145 24.5142 8.49805 cv
24.5142 8.26514 24.3252 8.07617 24.0918 8.07617 cv
cp
25.583 31.9736 mo
25.583 30.7852 li
25.583 30.5635 25.4028 30.3828 25.1807 30.3828 cv
24.958 30.3828 24.7778 30.5635 24.7778 30.7852 cv
24.7778 31.9736 li
25.583 31.9736 li
cp
23.4058 31.9736 mo
23.4058 30.7852 li
23.4058 30.5635 23.2256 30.3828 23.0034 30.3828 cv
22.7813 30.3828 22.6006 30.5635 22.6006 30.7852 cv
22.6006 31.9736 li
23.4058 31.9736 li
cp
35.9951 41.7734 mo
35.9648 41.7734 35.918 41.7715 35.8906 41.7666 cv
35.835 41.7559 35.8311 41.7402 35.8218 41.6865 cv
35.812 41.6025 35.812 41.4404 35.812 41.2461 cv
35.812 40.8887 li
35.812 40.5811 35.812 40.5244 35.8169 40.4609 cv
35.8242 40.3906 35.8311 40.3779 35.8813 40.3672 cv
35.9053 40.3623 35.9199 40.3604 35.9404 40.3604 cv
35.9619 40.3604 35.9907 40.3486 35.9907 40.3193 cv
35.9858 40.2861 35.9561 40.2861 35.9307 40.2852 cv
35.8496 40.2852 35.7134 40.29 35.6616 40.29 cv
35.6025 40.29 35.46 40.2852 35.3809 40.2852 cv
35.3486 40.2861 35.3193 40.2852 35.314 40.3193 cv
35.314 40.3486 35.3428 40.3604 35.3643 40.3604 cv
35.3892 40.3604 35.4141 40.3623 35.4351 40.3691 cv
35.4756 40.3838 35.4883 40.3945 35.4946 40.4609 cv
35.4971 40.5244 35.4971 40.5811 35.4971 40.8887 cv
35.4971 41.2461 li
35.4971 41.4404 35.4971 41.6025 35.4878 41.6846 cv
35.4785 41.7441 35.4727 41.7588 35.439 41.7676 cv
35.4214 41.7715 35.3989 41.7734 35.3687 41.7734 cv
35.3379 41.7734 35.3184 41.793 35.3184 41.8125 cv
35.3193 41.8428 35.3491 41.8506 35.376 41.8506 cv
35.46 41.8506 35.603 41.8438 35.6499 41.8438 cv
35.7061 41.8438 35.8496 41.8506 35.9883 41.8506 cv
36.0127 41.8506 36.043 41.8438 36.0454 41.8125 cv
36.0454 41.79 36.0239 41.7734 35.9951 41.7734 cv
cp
34.7241 41.7734 mo
34.6943 41.7734 34.6465 41.7715 34.6201 41.7666 cv
34.5645 41.7559 34.5601 41.7402 34.5508 41.6865 cv
34.541 41.6025 34.541 41.4404 34.541 41.2461 cv
34.541 40.8887 li
34.541 40.5811 34.541 40.5244 34.5459 40.4609 cv
34.5532 40.3906 34.5601 40.3779 34.6104 40.3672 cv
34.6343 40.3623 34.6494 40.3604 34.6694 40.3604 cv
34.6909 40.3604 34.7197 40.3486 34.7197 40.3193 cv
34.7148 40.2861 34.6855 40.2861 34.6602 40.2852 cv
34.5786 40.2852 34.4424 40.29 34.3906 40.29 cv
34.332 40.29 34.189 40.2852 34.1099 40.2852 cv
34.0781 40.2861 34.0483 40.2852 34.043 40.3193 cv
34.043 40.3486 34.0718 40.3604 34.0933 40.3604 cv
34.1182 40.3604 34.1431 40.3623 34.1646 40.3691 cv
34.2046 40.3838 34.2168 40.3945 34.2236 40.4609 cv
34.2266 40.5244 34.2266 40.5811 34.2266 40.8887 cv
34.2266 41.2461 li
34.2266 41.4404 34.2261 41.6025 34.2168 41.6846 cv
34.208 41.7441 34.2021 41.7588 34.168 41.7676 cv
34.1504 41.7715 34.1279 41.7734 34.0977 41.7734 cv
34.0669 41.7734 34.0479 41.793 34.0479 41.8125 cv
34.0488 41.8428 34.0781 41.8506 34.105 41.8506 cv
34.189 41.8506 34.332 41.8438 34.3789 41.8438 cv
34.4351 41.8438 34.5786 41.8506 34.7168 41.8506 cv
34.7422 41.8506 34.772 41.8438 34.7744 41.8125 cv
34.7744 41.791 34.7534 41.7734 34.7241 41.7734 cv
cp
33.4531 41.7734 mo
33.4233 41.7734 33.3755 41.7715 33.3491 41.7666 cv
33.2935 41.7559 33.2891 41.7402 33.2798 41.6865 cv
33.2705 41.6025 33.2705 41.4404 33.2705 41.2461 cv
33.2705 40.8887 li
33.2705 40.5811 33.2705 40.5244 33.2749 40.4609 cv
33.2822 40.3906 33.2896 40.3779 33.3394 40.3672 cv
33.3633 40.3623 33.3784 40.3604 33.3984 40.3604 cv
33.4199 40.3604 33.4492 40.3486 33.4492 40.3193 cv
33.4443 40.2861 33.4146 40.2861 33.3887 40.2852 cv
33.3076 40.2852 33.1719 40.29 33.1201 40.29 cv
33.061 40.29 32.918 40.2852 32.8389 40.2852 cv
32.8071 40.2861 32.7773 40.2852 32.7715 40.3193 cv
32.7715 40.3486 32.8008 40.3604 32.8223 40.3604 cv
32.8477 40.3604 32.8721 40.3623 32.8936 40.3691 cv
32.9336 40.3838 32.9463 40.3945 32.9531 40.4609 cv
32.9556 40.5244 32.9556 40.5811 32.9556 40.8887 cv
32.9556 41.2461 li
32.9556 41.4404 32.9556 41.6025 32.9458 41.6846 cv
32.937 41.7441 32.9312 41.7588 32.897 41.7676 cv
32.8799 41.7715 32.8569 41.7734 32.8271 41.7734 cv
32.7959 41.7734 32.7764 41.793 32.7764 41.8125 cv
32.7778 41.8428 32.8076 41.8506 32.8345 41.8506 cv
32.9185 41.8506 33.0615 41.8438 33.1079 41.8438 cv
33.1641 41.8438 33.3076 41.8506 33.4463 41.8506 cv
33.4712 41.8506 33.5015 41.8438 33.5039 41.8125 cv
33.5039 41.791 33.4824 41.7734 33.4531 41.7734 cv
cp
32.3589 41.7734 mo
32.3413 41.7734 32.3086 41.7715 32.2832 41.7627 cv
32.2402 41.749 32.2114 41.7305 32.1768 41.6875 cv
32.1279 41.6279 31.7979 41.1064 31.7178 40.9844 cv
32.0581 40.5195 li
32.1221 40.4307 32.1616 40.3799 32.1987 40.3711 cv
32.2266 40.3643 32.252 40.3604 32.271 40.3604 cv
32.2959 40.3604 32.3203 40.3467 32.3213 40.3213 cv
32.3193 40.29 32.2891 40.2852 32.2661 40.2852 cv
32.187 40.2852 32.1006 40.29 32.0615 40.29 cv
32.022 40.29 31.9238 40.2852 31.8423 40.2852 cv
31.813 40.2852 31.7817 40.29 31.7803 40.3213 cv
31.7813 40.3496 31.8057 40.3604 31.8232 40.3604 cv
31.8394 40.3604 31.8672 40.3604 31.8843 40.3662 cv
31.9028 40.3701 31.9092 40.3809 31.9087 40.3838 cv
31.9092 40.3955 31.9023 40.4229 31.8867 40.4482 cv
31.8545 40.501 31.6914 40.7412 31.6191 40.8477 cv
31.54 40.7168 31.4585 40.583 31.3711 40.4297 cv
31.3604 40.4111 31.3511 40.3838 31.3516 40.3789 cv
31.3516 40.377 31.3535 40.3701 31.3677 40.3662 cv
31.3828 40.3623 31.4033 40.3604 31.4141 40.3604 cv
31.4351 40.3604 31.4629 40.3506 31.4639 40.3213 cv
31.4619 40.29 31.4307 40.2852 31.4038 40.2852 cv
31.3252 40.2852 31.1958 40.29 31.168 40.29 cv
31.0688 40.29 30.8999 40.2852 30.8496 40.2852 cv
30.8237 40.2861 30.7939 40.2861 30.7896 40.3193 cv
30.7896 40.3408 30.8062 40.3604 30.8276 40.3604 cv
30.8467 40.3604 30.8794 40.3643 30.9111 40.374 cv
30.98 40.3965 31.0186 40.4346 31.0703 40.5146 cv
31.4331 41.0801 li
31.0308 41.624 li
30.9585 41.7217 30.9297 41.749 30.8735 41.7646 cv
30.8447 41.7715 30.8145 41.7734 30.8018 41.7734 cv
30.7773 41.7744 30.7568 41.791 30.7563 41.8145 cv
30.7563 41.8389 30.7808 41.8506 30.8037 41.8506 cv
30.8398 41.8506 li
30.8745 41.8506 30.9766 41.8438 31.0161 41.8438 cv
31.0679 41.8438 31.2051 41.8506 31.2183 41.8506 cv
31.2563 41.8506 li
31.2837 41.8506 31.3145 41.8467 31.3164 41.8145 cv
31.314 41.7891 31.2949 41.7754 31.2734 41.7734 cv
31.2578 41.7734 31.2417 41.7715 31.228 41.7715 cv
31.2148 41.7715 31.2046 41.7637 31.2041 41.7549 cv
31.2041 41.752 li
31.2036 41.7373 31.2139 41.71 31.2324 41.6807 cv
31.5254 41.2275 li
31.6172 41.3779 31.7261 41.5596 31.8418 41.7471 cv
31.8462 41.7539 31.8467 41.7588 31.8467 41.7607 cv
31.8472 41.7637 31.8447 41.7646 31.8447 41.7646 cv
31.8228 41.7695 31.8037 41.7852 31.8037 41.8076 cv
31.8101 41.8447 31.8418 41.8418 31.8936 41.8457 cv
32.0654 41.8506 32.2324 41.8506 32.2827 41.8506 cv
32.3447 41.8506 li
32.3696 41.8506 32.3999 41.8438 32.4023 41.8125 cv
32.4014 41.7881 32.3799 41.7734 32.3589 41.7734 cv
cp
30.5811 41.7734 mo
30.5635 41.7734 30.5313 41.7715 30.5054 41.7627 cv
30.4619 41.749 30.4336 41.7305 30.3994 41.6875 cv
30.3501 41.6279 30.02 41.1064 29.9395 40.9844 cv
30.2803 40.5195 li
30.3442 40.4307 30.3838 40.3799 30.4209 40.3711 cv
30.4487 40.3643 30.4736 40.3604 30.4932 40.3604 cv
30.5186 40.3604 30.543 40.3467 30.543 40.3213 cv
30.542 40.29 30.5107 40.2852 30.4883 40.2852 cv
30.4092 40.2852 30.3232 40.29 30.2832 40.29 cv
30.2437 40.29 30.1455 40.2852 30.0645 40.2852 cv
30.0352 40.2852 30.0039 40.29 30.002 40.3213 cv
30.0029 40.3496 30.0283 40.3604 30.0449 40.3604 cv
30.0615 40.3604 30.0889 40.3604 30.1064 40.3662 cv
30.125 40.3701 30.1313 40.3809 30.1304 40.3838 cv
30.1309 40.3955 30.1245 40.4229 30.1089 40.4482 cv
30.0767 40.501 29.9136 40.7412 29.8413 40.8477 cv
29.7622 40.7158 29.6807 40.583 29.5933 40.4297 cv
29.582 40.4111 29.5732 40.3838 29.5742 40.3789 cv
29.5742 40.377 29.5757 40.3711 29.5898 40.3662 cv
29.605 40.3623 29.6255 40.3604 29.6357 40.3604 cv
29.6572 40.3604 29.6851 40.3506 29.686 40.3213 cv
29.6841 40.29 29.6533 40.2852 29.626 40.2852 cv
29.5474 40.2852 29.418 40.29 29.3906 40.29 cv
29.2905 40.29 29.1221 40.2852 29.0713 40.2852 cv
29.0459 40.2861 29.0166 40.2861 29.0117 40.3193 cv
29.0117 40.3408 29.0283 40.3604 29.0498 40.3604 cv
29.0693 40.3604 29.1016 40.3643 29.1333 40.374 cv
29.2021 40.3965 29.2407 40.4346 29.293 40.5146 cv
29.6553 41.0801 li
29.2529 41.624 li
29.1807 41.7217 29.1519 41.749 29.0952 41.7646 cv
29.0664 41.7715 29.0361 41.7734 29.0239 41.7734 cv
28.999 41.7744 28.9785 41.791 28.978 41.8145 cv
28.978 41.8389 29.0024 41.8506 29.0259 41.8506 cv
29.0615 41.8506 li
29.0962 41.8506 29.1987 41.8438 29.2378 41.8438 cv
29.2896 41.8438 29.4268 41.8506 29.4404 41.8506 cv
29.4785 41.8506 li
29.5054 41.8506 29.5361 41.8467 29.5386 41.8145 cv
29.5361 41.7891 29.5171 41.7754 29.4951 41.7734 cv
29.48 41.7734 29.4639 41.7715 29.4502 41.7715 cv
29.437 41.7715 29.4268 41.7637 29.4263 41.7549 cv
29.4263 41.7539 29.4258 41.752 29.4258 41.752 cv
29.4258 41.7373 29.4355 41.71 29.4546 41.6807 cv
29.7471 41.2275 li
29.8394 41.3779 29.9482 41.5596 30.064 41.7471 cv
30.0684 41.7539 30.0688 41.7588 30.0688 41.7607 cv
30.0693 41.7637 30.0664 41.7646 30.0664 41.7646 cv
30.0449 41.7695 30.0259 41.7852 30.0259 41.8076 cv
30.0322 41.8447 30.064 41.8428 30.1162 41.8457 cv
30.2876 41.8506 30.4546 41.8506 30.5049 41.8506 cv
30.5664 41.8506 li
30.5918 41.8506 30.6216 41.8438 30.624 41.8125 cv
30.6235 41.7881 30.6025 41.7734 30.5811 41.7734 cv
cp
28.8032 41.7734 mo
28.7856 41.7734 28.7529 41.7715 28.7275 41.7627 cv
28.6846 41.749 28.6553 41.7305 28.6216 41.6875 cv
28.5723 41.6279 28.2422 41.1064 28.1621 40.9844 cv
28.5024 40.5195 li
28.5664 40.4307 28.6055 40.3799 28.6431 40.3711 cv
28.6709 40.3643 28.6963 40.3604 28.7153 40.3604 cv
28.7402 40.3604 28.7646 40.3467 28.7656 40.3213 cv
28.7637 40.29 28.7334 40.2852 28.7104 40.2852 cv
28.6309 40.2852 28.5449 40.29 28.5059 40.29 cv
28.4658 40.29 28.3677 40.2852 28.2861 40.2852 cv
28.2573 40.2852 28.2261 40.29 28.2241 40.3213 cv
28.2251 40.3496 28.25 40.3604 28.2671 40.3604 cv
28.2837 40.3604 28.3115 40.3604 28.3286 40.3662 cv
28.3467 40.3701 28.353 40.3809 28.353 40.3838 cv
28.353 40.3955 28.3467 40.4229 28.3311 40.4482 cv
28.2988 40.501 28.1357 40.7412 28.0635 40.8477 cv
27.9844 40.7168 27.9028 40.583 27.8154 40.4297 cv
27.8047 40.4111 27.7954 40.3838 27.7959 40.3789 cv
27.7959 40.377 27.7979 40.3701 27.812 40.3662 cv
27.8267 40.3623 27.8481 40.3604 27.8579 40.3604 cv
27.8794 40.3604 27.9072 40.3506 27.9082 40.3213 cv
27.9063 40.29 27.875 40.2852 27.8481 40.2852 cv
27.769 40.2852 27.6401 40.29 27.6123 40.29 cv
27.5127 40.29 27.3442 40.2852 27.2935 40.2852 cv
27.2681 40.2861 27.2383 40.2861 27.2339 40.3193 cv
27.2339 40.3408 27.25 40.3604 27.272 40.3604 cv
27.291 40.3604 27.3232 40.3643 27.3555 40.374 cv
27.4243 40.3965 27.4629 40.4346 27.5151 40.5146 cv
27.8774 41.0801 li
27.4751 41.624 li
27.4028 41.7217 27.374 41.749 27.3174 41.7646 cv
27.2891 41.7715 27.2583 41.7734 27.2456 41.7734 cv
27.2212 41.7744 27.2007 41.791 27.2002 41.8145 cv
27.2002 41.8389 27.2246 41.8506 27.248 41.8506 cv
27.2842 41.8506 li
27.3184 41.8506 27.4209 41.8438 27.46 41.8438 cv
27.5117 41.8438 27.6494 41.8506 27.6626 41.8506 cv
27.7007 41.8506 li
27.7275 41.8506 27.7588 41.8467 27.7603 41.8145 cv
27.7583 41.7891 27.7393 41.7754 27.7173 41.7734 cv
27.7021 41.7734 27.686 41.7715 27.6719 41.7715 cv
27.6592 41.7715 27.6489 41.7627 27.6484 41.7549 cv
27.6479 41.7539 27.6479 41.752 27.6479 41.752 cv
27.6475 41.7373 27.6577 41.71 27.6768 41.6807 cv
27.9697 41.2275 li
28.0615 41.3779 28.1709 41.5596 28.2861 41.7471 cv
28.2905 41.7539 28.291 41.7588 28.291 41.7607 cv
28.2915 41.7646 28.2891 41.7646 28.2891 41.7646 cv
28.2671 41.7695 28.248 41.7852 28.248 41.8076 cv
28.2544 41.8447 28.2861 41.8428 28.3379 41.8457 cv
28.5098 41.8506 28.6768 41.8506 28.7271 41.8506 cv
28.7891 41.8506 li
28.8135 41.8506 28.8438 41.8438 28.8467 41.8125 cv
28.8457 41.7881 28.8242 41.7734 28.8032 41.7734 cv
cp
20.707 41.4336 mo
20.6792 41.4326 20.666 41.46 20.6641 41.4883 cv
20.6582 41.5215 20.6304 41.5781 20.5967 41.6152 cv
20.5181 41.7021 20.4238 41.7168 20.2378 41.7168 cv
19.9653 41.7158 19.603 41.4951 19.6025 41.0244 cv
19.6025 40.8281 19.6396 40.6387 19.7891 40.5107 cv
19.8809 40.4336 19.9917 40.4004 20.1738 40.4004 cv
20.3633 40.4004 20.5005 40.4502 20.5664 40.5146 cv
20.6152 40.5635 20.6401 40.6318 20.6421 40.6914 cv
20.6421 40.7158 20.647 40.749 20.6807 40.751 cv
20.7173 40.748 20.7241 40.7129 20.7261 40.6846 cv
20.7285 40.6436 20.7285 40.5313 20.7334 40.4658 cv
20.7383 40.3945 20.7427 40.3721 20.7427 40.3525 cv
20.7446 40.332 20.7241 40.3125 20.6968 40.3125 cv
20.6362 40.3047 20.5674 40.29 20.4878 40.2783 cv
20.3926 40.2666 20.3125 40.2568 20.1807 40.2568 cv
19.8662 40.2568 19.6602 40.3398 19.5049 40.4756 cv
19.3003 40.6592 19.2539 40.9014 19.2539 41.043 cv
19.2539 41.2412 19.3101 41.4766 19.522 41.6533 cv
19.7168 41.8174 19.9639 41.877 20.252 41.877 cv
20.3892 41.877 20.5488 41.8652 20.6367 41.8301 cv
20.6738 41.8174 20.6934 41.7969 20.7017 41.7598 cv
20.7241 41.6875 20.7471 41.5146 20.7476 41.4863 cv
20.7471 41.4648 20.7383 41.4365 20.707 41.4336 cv
cp
19.0293 41.4336 mo
19.001 41.4326 18.9883 41.46 18.9858 41.4883 cv
18.9805 41.5215 18.9521 41.5781 18.9189 41.6152 cv
18.8403 41.7021 18.7461 41.7168 18.5601 41.7168 cv
18.2871 41.7158 17.9253 41.4951 17.9243 41.0244 cv
17.9243 40.8281 17.9624 40.6387 18.1113 40.5107 cv
18.2031 40.4336 18.314 40.4004 18.4956 40.4004 cv
18.6855 40.4004 18.8223 40.4502 18.8887 40.5146 cv
18.9375 40.5635 18.9619 40.6318 18.9644 40.6914 cv
18.9644 40.7158 18.9692 40.749 19.0029 40.751 cv
19.0396 40.748 19.0459 40.7129 19.0483 40.6846 cv
19.0508 40.6436 19.0508 40.5313 19.0557 40.4658 cv
19.0601 40.3945 19.0649 40.3721 19.0654 40.3525 cv
19.0664 40.332 19.0459 40.3125 19.0186 40.3125 cv
18.958 40.3047 18.8892 40.29 18.8101 40.2783 cv
18.7144 40.2666 18.6343 40.2568 18.5029 40.2568 cv
18.188 40.2568 17.9824 40.3398 17.8271 40.4756 cv
17.6221 40.6592 17.5762 40.9014 17.5762 41.043 cv
17.5757 41.2412 17.6318 41.4766 17.8442 41.6533 cv
18.0391 41.8174 18.2861 41.877 18.5742 41.877 cv
18.7109 41.877 18.8711 41.8652 18.9595 41.8301 cv
18.9961 41.8174 19.0161 41.7969 19.0239 41.7598 cv
19.0459 41.6875 19.0693 41.5146 19.0698 41.4863 cv
19.0693 41.4648 19.0601 41.4365 19.0293 41.4336 cv
cp
17.3511 41.4336 mo
17.3232 41.4326 17.3101 41.46 17.3086 41.4883 cv
17.3022 41.5215 17.2744 41.5781 17.2407 41.6152 cv
17.1626 41.7021 17.0679 41.7168 16.8823 41.7168 cv
16.6094 41.7158 16.2471 41.4951 16.2466 41.0244 cv
16.2466 40.8281 16.2842 40.6387 16.4336 40.5107 cv
16.5249 40.4336 16.6362 40.4004 16.8179 40.4004 cv
17.0078 40.4004 17.1445 40.4502 17.2104 40.5146 cv
17.2598 40.5635 17.2842 40.6318 17.2866 40.6914 cv
17.2866 40.7158 17.291 40.749 17.3252 40.751 cv
17.3613 40.748 17.3682 40.7129 17.3706 40.6846 cv
17.373 40.6436 17.373 40.5313 17.3779 40.4658 cv
17.3823 40.3945 17.3872 40.3721 17.3872 40.3525 cv
17.3892 40.332 17.3682 40.3125 17.3408 40.3125 cv
17.2803 40.3047 17.2114 40.29 17.1323 40.2783 cv
17.0366 40.2666 16.9565 40.2568 16.8247 40.2568 cv
16.5103 40.2568 16.3047 40.3398 16.1494 40.4756 cv
15.9443 40.6592 15.8984 40.9014 15.8984 41.043 cv
15.8984 41.2412 15.9541 41.4766 16.166 41.6533 cv
16.3608 41.8174 16.6084 41.877 16.8965 41.877 cv
17.0332 41.877 17.1929 41.8652 17.2813 41.8301 cv
17.3184 41.8174 17.3379 41.7969 17.3462 41.7598 cv
17.3687 41.6875 17.3916 41.5146 17.3916 41.4863 cv
17.3911 41.4648 17.3823 41.4365 17.3511 41.4336 cv
cp
15.3682 41.1055 mo
15.3682 41.3125 15.3257 41.4873 15.1963 41.5947 cv
15.0732 41.6963 14.9385 41.7285 14.75 41.7285 cv
14.5879 41.7295 14.5098 41.6846 14.4897 41.6553 cv
14.4785 41.6436 14.4702 41.5693 14.4692 41.5215 cv
14.4668 41.4814 14.4639 41.3262 14.4639 41.1123 cv
14.4639 40.8574 li
14.4639 40.6982 14.4639 40.5313 14.4668 40.4629 cv
14.4688 40.4414 14.4668 40.4453 14.4819 40.4375 cv
14.4907 40.4307 14.564 40.4238 14.6045 40.4248 cv
14.7676 40.4248 14.9907 40.4453 15.1787 40.6133 cv
15.2681 40.6904 15.3682 40.8525 15.3682 41.1055 cv
cp
15.4995 40.5215 mo
15.2642 40.2842 14.9063 40.2861 14.645 40.2861 cv
14.5186 40.2861 14.3677 40.29 14.3042 40.29 cv
14.2451 40.29 14.1113 40.2861 14.002 40.2861 cv
13.9727 40.2861 13.9404 40.2881 13.937 40.3213 cv
13.9385 40.3506 13.9668 40.3604 13.9897 40.3604 cv
14.0195 40.3604 14.0557 40.3623 14.0684 40.3662 cv
14.1328 40.3877 14.1396 40.3945 14.1465 40.4609 cv
14.1494 40.5244 14.1494 40.5811 14.1494 40.8887 cv
14.1494 41.2451 li
14.1494 41.4316 14.1494 41.5908 14.1396 41.6748 cv
14.1318 41.7344 14.1221 41.7607 14.0908 41.7676 cv
14.0732 41.7715 14.0513 41.7734 14.021 41.7734 cv
13.9902 41.7734 13.9707 41.793 13.9707 41.8125 cv
13.9717 41.8418 14.001 41.8506 14.0283 41.8506 cv
14.0718 41.8506 14.124 41.8486 14.1738 41.8457 cv
14.2236 41.8457 14.2695 41.8438 14.2925 41.8438 cv
14.3438 41.8438 14.4199 41.8486 14.5029 41.8555 cv
14.5864 41.8604 14.6772 41.8672 14.7544 41.8672 cv
15.1445 41.8672 15.3706 41.7227 15.4688 41.624 cv
15.5908 41.5049 15.7026 41.3076 15.7026 41.0479 cv
15.7026 40.8027 15.6074 40.6289 15.4995 40.5215 cv
cp
13.791 41.7734 mo
13.7661 41.7734 13.7354 41.7715 13.6768 41.7549 cv
13.6235 41.7402 13.606 41.6973 13.5864 41.5693 cv
13.396 40.3193 li
13.3872 40.2715 13.3623 40.2422 13.3315 40.2402 cv
13.3018 40.2412 13.2793 40.2646 13.2617 40.2998 cv
12.7144 41.4121 li
12.168 40.3145 li
12.1406 40.2588 12.1182 40.2402 12.0884 40.2402 cv
12.0586 40.2412 12.0366 40.2695 12.0313 40.3066 cv
11.8242 41.6289 li
11.8154 41.6963 11.7925 41.7686 11.7529 41.7695 cv
11.7202 41.7734 11.707 41.7734 11.6909 41.7734 cv
11.6655 41.7734 11.6421 41.7852 11.6406 41.8105 cv
11.6406 41.8438 11.6743 41.8506 11.6953 41.8506 cv
11.7632 41.8506 11.8638 41.8438 11.9028 41.8438 cv
11.9395 41.8438 12.0352 41.8506 12.124 41.8506 cv
12.1533 41.8506 12.1895 41.8467 12.1909 41.8105 cv
12.188 41.7832 12.1646 41.7744 12.1406 41.7734 cv
12.1235 41.7734 12.106 41.7715 12.0703 41.7646 cv
12.0356 41.7568 12.02 41.749 12.0195 41.7217 cv
12.0195 41.6895 12.022 41.6641 12.0269 41.6289 cv
12.1211 40.8828 li
12.1914 41.0264 12.2964 41.2422 12.311 41.2764 cv
12.3359 41.3359 12.502 41.6436 12.5518 41.7373 cv
12.5869 41.7979 12.606 41.8438 12.6504 41.8486 cv
12.6899 41.8457 12.7017 41.8174 12.749 41.7246 cv
13.1802 40.8584 li
13.2905 41.6904 li
13.293 41.708 13.2939 41.7227 13.2939 41.7334 cv
13.2944 41.7578 13.291 41.7568 13.292 41.7588 cv
13.2769 41.7637 13.2583 41.7725 13.2573 41.7959 cv
13.2598 41.8252 13.2861 41.835 13.3354 41.8369 cv
13.4194 41.8418 13.7163 41.8506 13.77 41.8506 cv
13.8008 41.8496 13.8369 41.8477 13.8413 41.8105 cv
13.8394 41.7813 13.8125 41.7734 13.791 41.7734 cv
cp
40.502 30.4307 mo
40.5498 30.3857 40.5713 30.3838 40.647 30.416 cv
40.8359 30.4971 41.0356 30.6006 41.0889 30.627 cv
41.1392 30.6533 41.1724 30.6797 41.1606 30.707 cv
41.1475 30.7383 41.1147 30.7285 41.0874 30.7158 cv
41.043 30.6973 40.9648 30.6797 40.8989 30.6719 cv
40.6123 30.6377 40.4321 30.7998 40.3403 31.0127 cv
40.2065 31.3213 40.3506 31.5625 40.5327 31.6416 cv
40.7007 31.7139 40.8809 31.7314 41.2271 31.542 cv
41.4189 31.4385 li
41.877 31.1885 42.1738 31.1611 42.4517 31.2822 cv
42.8291 31.4453 42.9639 31.8779 42.7578 32.3545 cv
42.6611 32.5781 42.5645 32.707 42.502 32.7861 cv
42.4819 32.8145 42.4639 32.8271 42.4399 32.8164 cv
42.3955 32.7969 42.3018 32.7402 42.0342 32.624 cv
41.959 32.5918 41.9355 32.5693 41.9478 32.542 cv
41.958 32.5186 41.9829 32.5166 42.0244 32.5352 cv
42.0552 32.5479 42.1689 32.5771 42.2891 32.5439 cv
42.377 32.5205 42.5225 32.4648 42.6191 32.2422 cv
42.729 31.9883 42.6484 31.7695 42.4424 31.6807 cv
42.2842 31.6123 42.1299 31.6396 41.791 31.8311 cv
41.6772 31.8955 li
41.1855 32.1768 40.8848 32.2217 40.5586 32.0801 cv
40.3594 31.9941 40.1553 31.8164 40.1011 31.5 cv
40.0654 31.2803 40.1177 31.0752 40.1963 30.8926 cv
40.2822 30.6943 40.373 30.5498 40.502 30.4307 cv
cp
42.7046 29.1123 mo
43.2515 29.2666 43.3525 29.2949 43.4692 29.3203 cv
43.5938 29.3477 43.665 29.3291 43.7056 29.2549 cv
43.7275 29.2188 43.7441 29.1729 43.7563 29.1299 cv
43.7666 29.0938 43.7798 29.0742 43.8086 29.082 cv
43.8301 29.0889 43.8291 29.1191 43.813 29.1768 cv
43.7744 29.3135 43.6997 29.5371 43.6699 29.6416 cv
43.6445 29.7314 43.5957 29.9463 43.5566 30.083 cv
43.5435 30.1299 43.5283 30.1572 43.5068 30.1514 cv
43.478 30.1426 43.4766 30.1191 43.4868 30.083 cv
43.4971 30.0469 43.502 30.0176 43.5068 29.9717 cv
43.5161 29.8701 43.4629 29.8242 43.3389 29.7813 cv
43.2261 29.7412 43.1255 29.7129 42.5786 29.5586 cv
41.9453 29.3789 li
41.5962 29.2803 41.312 29.2002 41.1533 29.1709 cv
41.0532 29.1543 40.9814 29.1611 40.9365 29.2646 cv
40.915 29.3135 40.8853 29.3906 40.8701 29.4443 cv
40.8589 29.4844 40.8428 29.499 40.8252 29.4941 cv
40.7998 29.4873 40.7969 29.4551 40.8081 29.415 cv
40.8755 29.1777 40.9502 28.9541 40.9775 28.8564 cv
41.001 28.7744 41.0547 28.5449 41.0952 28.4004 cv
41.1084 28.3535 41.126 28.332 41.1514 28.3389 cv
41.1694 28.3438 41.1763 28.3613 41.1641 28.4053 cv
41.1484 28.458 41.1436 28.5039 41.1416 28.5381 cv
41.1357 28.6143 41.1909 28.6533 41.292 28.6934 cv
41.438 28.7539 41.7222 28.834 42.0713 28.9326 cv
42.7046 29.1123 li
cp
41.585 25.9375 mo
41.6196 25.8818 41.6396 25.873 41.7207 25.8848 cv
41.9248 25.915 42.1445 25.9609 42.2031 25.9736 cv
42.2583 25.9854 42.2974 26.002 42.293 26.0313 cv
42.2886 26.0654 42.2549 26.0635 42.2251 26.0596 cv
42.1768 26.0527 42.0972 26.0566 42.0313 26.0654 cv
41.7456 26.1074 41.6143 26.3115 41.5815 26.541 cv
41.5337 26.874 41.7358 27.0693 41.9321 27.0977 cv
42.1138 27.124 42.292 27.0928 42.5767 26.8203 cv
42.7344 26.6689 li
43.1113 26.3076 43.3906 26.2041 43.6904 26.2471 cv
44.0977 26.3057 44.3408 26.6885 44.2671 27.2031 cv
44.2324 27.4434 44.1733 27.5938 44.1333 27.6865 cv
44.1211 27.7188 44.1074 27.7354 44.0815 27.7314 cv
44.0332 27.7246 43.9282 27.6943 43.6396 27.6533 cv
43.5581 27.6416 43.5303 27.626 43.5342 27.5967 cv
43.5381 27.5703 43.5615 27.5625 43.6064 27.5693 cv
43.6396 27.5732 43.7568 27.5713 43.8643 27.5078 cv
43.9424 27.4619 44.0693 27.3711 44.1035 27.1299 cv
44.1431 26.8564 44.0078 26.667 43.7856 26.6348 cv
43.6152 26.6104 43.4736 26.6768 43.1963 26.9512 cv
43.1035 27.0439 li
42.7026 27.4424 42.4243 27.5654 42.0728 27.5146 cv
41.8579 27.4844 41.6143 27.3662 41.4785 27.0742 cv
41.3867 26.8721 41.3828 26.6602 41.4111 26.4639 cv
41.4424 26.249 41.4922 26.0869 41.585 25.9375 cv
cp
42.0869 22.4873 mo
41.7954 22.5049 41.7002 22.5571 41.6768 22.6328 cv
41.6563 22.6973 41.6553 22.7686 41.6572 22.8281 cv
41.6587 22.8691 41.6523 22.8921 41.6299 22.8926 cv
41.5996 22.8936 41.5908 22.8604 41.5894 22.8081 cv
41.5806 22.5649 41.5864 22.415 41.584 22.3442 cv
41.583 22.3105 41.5654 22.1353 41.5586 21.9409 cv
41.5566 21.8926 41.5596 21.8584 41.5928 21.8574 cv
41.6152 21.8564 41.624 21.8789 41.625 21.916 cv
41.627 21.9648 41.6328 22.0317 41.6494 22.0835 cv
41.6831 22.1797 41.792 22.1909 42.1172 22.1831 cv
44.3311 22.1387 li
44.4063 22.1357 44.459 22.1455 44.46 22.1826 cv
44.4614 22.2236 44.4141 22.2588 44.3491 22.3252 cv
44.3022 22.3716 43.7129 22.9614 43.1904 23.5264 cv
42.9453 23.7891 42.4248 24.313 42.3672 24.3784 cv
42.3677 24.3975 li
44.0449 24.3008 li
44.2725 24.2891 44.3428 24.2524 44.377 24.1616 cv
44.3975 24.1045 44.394 24.0151 44.3921 23.9629 cv
44.3906 23.918 44.4014 23.9023 44.4238 23.9019 cv
44.4536 23.9004 44.459 23.9414 44.4609 23.9971 cv
44.4678 24.1914 44.4629 24.3716 44.4658 24.4502 cv
44.4668 24.4912 44.4834 24.6328 44.4897 24.8164 cv
44.4912 24.8652 44.4893 24.9023 44.459 24.9033 cv
44.4365 24.9043 44.4248 24.8823 44.4229 24.8374 cv
44.4219 24.7998 44.4209 24.77 44.4082 24.7256 cv
44.374 24.6221 44.2949 24.5947 44.085 24.5986 cv
41.7251 24.6406 li
41.6431 24.6436 41.6089 24.6304 41.6074 24.5962 cv
41.606 24.5552 41.6455 24.5088 41.6855 24.4668 cv
41.9014 24.2231 42.374 23.7275 42.7451 23.3247 cv
43.1348 22.9033 43.5869 22.4717 43.6558 22.4019 cv
43.6553 22.3906 li
42.0869 22.4873 li
cp
42.7754 19.2949 mo
43.3301 19.1704 43.4321 19.1475 43.5474 19.1138 cv
43.6699 19.0791 43.7217 19.0366 43.7202 18.9102 cv
43.7207 18.8794 43.7109 18.8164 43.6992 18.7656 cv
43.6899 18.7256 43.6924 18.7017 43.7178 18.6963 cv
43.7437 18.6904 43.7568 18.7144 43.769 18.769 cv
43.791 18.8677 43.811 18.9741 43.832 19.0654 cv
43.8496 19.1611 43.8647 19.2461 43.876 19.2969 cv
43.9023 19.4141 44.0654 20.1401 44.0845 20.2085 cv
44.1074 20.2764 44.1279 20.333 44.1416 20.3604 cv
44.1494 20.3779 44.1655 20.3975 44.1694 20.416 cv
44.1738 20.4341 44.1597 20.4409 44.1416 20.4453 cv
44.1162 20.4507 44.0684 20.4424 43.8979 20.4692 cv
43.8604 20.4736 43.6982 20.5024 43.6528 20.5049 cv
43.6338 20.5054 43.6104 20.5029 43.6045 20.4775 cv
43.5986 20.4521 43.6152 20.4404 43.6479 20.4331 cv
43.6738 20.4277 43.7349 20.4097 43.7744 20.3818 cv
43.8345 20.3413 43.8701 20.2949 43.8511 20.1074 cv
43.8447 20.0439 43.7656 19.6592 43.749 19.5859 cv
43.7451 19.5679 43.7324 19.563 43.707 19.5688 cv
42.7837 19.7764 li
42.7578 19.7822 42.7441 19.7891 42.749 19.8105 cv
42.7671 19.8911 42.8613 20.3105 42.8877 20.3931 cv
42.9146 20.479 42.938 20.5313 42.9819 20.5562 cv
43.0166 20.5752 43.0381 20.5854 43.0425 20.6035 cv
43.0459 20.6182 43.041 20.6309 43.019 20.6357 cv
42.9971 20.6406 42.9355 20.6392 42.7461 20.6665 cv
42.6719 20.6792 42.5234 20.7012 42.498 20.707 cv
42.4688 20.7134 42.4287 20.7227 42.4214 20.6895 cv
42.4155 20.6641 42.4287 20.6533 42.4468 20.6494 cv
42.4824 20.6377 42.5303 20.627 42.5752 20.605 cv
42.644 20.5703 42.6875 20.5068 42.6714 20.3691 cv
42.6631 20.2979 42.5854 19.9355 42.5659 19.8481 cv
42.562 19.8301 42.5464 19.8296 42.5244 19.8345 cv
42.2363 19.8994 li
42.1123 19.9272 41.7754 19.999 41.6704 20.0264 cv
41.4204 20.0898 41.3789 20.1606 41.4624 20.5332 cv
41.4834 20.6279 41.5181 20.7813 41.583 20.8662 cv
41.6484 20.9512 41.7349 20.978 41.8901 20.9697 cv
41.9316 20.9683 41.9482 20.9722 41.9541 20.9976 cv
41.9604 21.0269 41.9312 21.0332 41.8945 21.042 cv
41.8105 21.0605 41.5562 21.0869 41.479 21.085 cv
41.3784 21.0811 41.3711 21.0479 41.3398 20.9092 cv
41.2783 20.6357 41.2407 20.4336 41.209 20.2754 cv
41.1807 20.1172 41.1592 20.0029 41.1348 19.8936 cv
41.126 19.8535 41.1074 19.7729 41.0845 19.6865 cv
41.0654 19.6025 41.0371 19.5093 41.0205 19.436 cv
41.0098 19.3887 41.0146 19.3608 41.0405 19.355 cv
41.0586 19.3506 41.0732 19.3628 41.083 19.4067 cv
41.0952 19.4614 41.1123 19.5039 41.127 19.5352 cv
41.1577 19.6045 41.2422 19.605 41.3516 19.5957 cv
41.5088 19.5796 41.7974 19.5146 42.1328 19.4395 cv
42.7754 19.2949 li
cp
40.314 16.4932 mo
40.4712 16.0317 40.8208 15.7817 41.1563 15.6431 cv
41.3911 15.5459 41.8286 15.4497 42.27 15.6558 cv
42.6006 15.8101 42.875 16.0811 43.0879 16.5962 cv
43.1768 16.8105 43.2158 16.9438 43.2607 17.1113 cv
43.2979 17.25 43.3125 17.373 43.3447 17.4814 cv
43.3569 17.5205 43.3457 17.5415 43.3247 17.5503 cv
43.2969 17.5615 43.2515 17.5684 43.1279 17.6113 cv
43.0107 17.6519 42.8223 17.7339 42.75 17.7554 cv
42.6968 17.7734 42.666 17.7778 42.6533 17.7471 cv
42.6421 17.7192 42.667 17.7012 42.7153 17.6807 cv
42.8208 17.6333 42.9233 17.5381 42.9775 17.4146 cv
43.0513 17.2505 43.0332 16.9424 42.9014 16.6245 cv
42.7769 16.3242 42.6196 16.1587 42.4185 16.0635 cv
42.083 15.9072 41.7275 15.9775 41.3921 16.1162 cv
40.5698 16.4561 40.4209 17.25 40.6123 17.7129 cv
40.7393 18.0205 40.8511 18.1929 41.0674 18.2656 cv
41.1572 18.2969 41.2764 18.3008 41.3438 18.2886 cv
41.4033 18.2764 41.4199 18.2773 41.4316 18.3047 cv
41.4414 18.3291 41.4204 18.3462 41.3926 18.3574 cv
41.3516 18.3745 41.0337 18.4575 40.9019 18.4717 cv
40.8359 18.4785 40.813 18.4717 40.7646 18.4229 cv
40.6519 18.3076 40.519 18.0552 40.4277 17.834 cv
40.2319 17.3608 40.1709 16.9204 40.314 16.4932 cv
cp
40.5913 14.1133 mo
41.0811 13.8247 41.1709 13.7715 41.2705 13.7046 cv
41.376 13.6338 41.4121 13.5688 41.3862 13.4883 cv
41.375 13.4473 41.3535 13.4038 41.3311 13.3652 cv
41.3115 13.333 41.3071 13.3096 41.3325 13.2944 cv
41.3521 13.2832 41.3735 13.3052 41.4043 13.3569 cv
41.4761 13.4795 41.5859 13.688 41.6411 13.7813 cv
41.6885 13.8618 41.8105 14.0464 41.8828 14.1685 cv
41.9072 14.2104 41.916 14.2402 41.8965 14.2515 cv
41.8711 14.2666 41.853 14.251 41.834 14.2188 cv
41.8149 14.1865 41.7964 14.1626 41.7676 14.1279 cv
41.7002 14.0503 41.6299 14.0566 41.5137 14.1167 cv
41.4067 14.1709 41.3164 14.2246 40.8267 14.5127 cv
40.2598 14.8472 li
39.9473 15.0313 39.6924 15.1816 39.5615 15.2759 cv
39.4805 15.3369 39.4355 15.3936 39.4795 15.498 cv
39.5 15.5469 39.5352 15.6211 39.564 15.6699 cv
39.5845 15.7051 39.5845 15.7271 39.5684 15.7363 cv
39.5459 15.75 39.521 15.7295 39.5 15.6943 cv
39.375 15.4819 39.2646 15.2734 39.2134 15.186 cv
39.1699 15.1123 39.0405 14.9146 38.9648 14.7856 cv
38.9399 14.7437 38.9365 14.7153 38.959 14.7021 cv
38.9751 14.6929 38.9922 14.7002 39.0146 14.7383 cv
39.0435 14.7871 39.0728 14.8218 39.0962 14.8472 cv
39.147 14.9038 39.2134 14.8906 39.3125 14.8457 cv
39.457 14.7817 39.7119 14.6318 40.0244 14.4478 cv
40.5913 14.1133 li
cp
38.6563 11.9102 mo
38.624 11.9365 38.6172 11.9512 38.625 11.979 cv
38.6538 12.0566 38.7153 12.1509 38.7739 12.2236 cv
38.8682 12.3403 38.9102 12.3687 38.9902 12.3906 cv
39.1245 12.4268 39.3262 12.4033 39.5654 12.2109 cv
39.979 11.8779 39.8779 11.5078 39.7397 11.3359 cv
39.6812 11.2632 39.6357 11.2129 39.6035 11.1909 cv
39.5815 11.1753 39.5654 11.1787 39.542 11.1973 cv
38.6563 11.9102 li
cp
38.6099 11.3813 mo
39.0527 11.0249 39.1338 10.9595 39.2227 10.8784 cv
39.3169 10.793 39.3447 10.7324 39.2876 10.6196 cv
39.2749 10.5918 39.2378 10.5396 39.2051 10.499 cv
39.1792 10.4668 39.1709 10.4448 39.1914 10.4282 cv
39.2119 10.4121 39.2344 10.4277 39.269 10.4712 cv
39.3936 10.6255 39.5322 10.8159 39.582 10.877 cv
39.6611 10.9761 39.8486 11.1904 39.9209 11.2813 cv
40.0688 11.4648 40.2085 11.6738 40.2275 11.918 cv
40.2378 12.0439 40.1826 12.2803 39.9878 12.4375 cv
39.772 12.6108 39.5015 12.6797 39.0254 12.5781 cv
38.9082 13.1001 38.8105 13.5098 38.7686 13.8271 cv
38.7305 14.126 38.8066 14.2617 38.833 14.3125 cv
38.853 14.3496 38.8711 14.3779 38.8896 14.4014 cv
38.9087 14.4248 38.9092 14.4434 38.8945 14.4551 cv
38.8711 14.4736 38.8491 14.458 38.8208 14.4229 cv
38.5981 14.1465 li
38.4668 13.9834 38.4229 13.8984 38.4028 13.79 cv
38.3687 13.6108 38.4165 13.3901 38.5098 13.0464 cv
38.5762 12.8008 38.666 12.5073 38.6797 12.4346 cv
38.6855 12.4058 38.6738 12.3857 38.6577 12.3652 cv
38.4595 12.1074 li
38.4478 12.0928 38.4351 12.0889 38.417 12.1025 cv
38.3765 12.1357 li
38.1055 12.3535 37.8755 12.5391 37.7646 12.6519 cv
37.6875 12.7285 37.6377 12.7979 37.6963 12.8945 cv
37.7256 12.9429 37.7715 13.0117 37.7993 13.0469 cv
37.8184 13.0698 37.8188 13.0889 37.8042 13.1006 cv
37.7837 13.1167 37.7588 13.1035 37.728 13.0654 cv
37.5923 12.8965 37.4272 12.6738 37.3921 12.6299 cv
37.3477 12.5747 37.1914 12.3984 37.0977 12.2822 cv
37.0669 12.2441 37.0596 12.2168 37.0796 12.2002 cv
37.0942 12.1885 37.1123 12.1934 37.1406 12.228 cv
37.1758 12.2715 37.2095 12.3018 37.2363 12.3237 cv
37.2949 12.3726 37.3711 12.3354 37.4648 12.2793 cv
37.5986 12.1953 37.8291 12.0098 38.0967 11.7939 cv
38.6099 11.3813 li
cp
35.7744 8.71094 mo
36.145 8.27979 36.2129 8.2002 36.2856 8.10449 cv
36.3623 8.00342 36.3789 7.93848 36.3022 7.83838 cv
36.2847 7.81299 36.2388 7.76855 36.1987 7.73486 cv
36.1675 7.70801 36.1553 7.6875 36.1729 7.66797 cv
36.1895 7.64795 36.2144 7.65918 36.2568 7.6958 cv
36.4072 7.8252 36.5791 7.98682 36.6641 8.06006 cv
36.7319 8.11816 36.918 8.26367 37.0205 8.35107 cv
37.0625 8.3877 37.0781 8.41016 37.0605 8.43018 cv
37.0439 8.4502 37.0215 8.44141 36.9937 8.41699 cv
36.9624 8.38965 36.9429 8.37793 36.9038 8.35449 cv
36.8149 8.30273 36.751 8.33203 36.6602 8.42627 cv
36.5762 8.51221 36.5083 8.5918 36.1377 9.02295 cv
35.7969 9.42041 li
35.4438 9.83203 35.3774 10.0757 35.4189 10.3086 cv
35.457 10.5229 35.5771 10.6465 35.6738 10.7295 cv
35.7988 10.8364 35.9863 10.9282 36.1973 10.9121 cv
36.4873 10.8901 36.7148 10.6416 36.9658 10.3496 cv
37.2705 9.99512 li
37.6406 9.56348 37.709 9.48389 37.7813 9.38867 cv
37.8584 9.28711 37.8745 9.22217 37.7979 9.12207 cv
37.7798 9.09668 37.7344 9.05273 37.7031 9.02539 cv
37.6719 8.99902 37.6597 8.97852 37.6768 8.95898 cv
37.6934 8.93896 37.7183 8.9502 37.7578 8.98438 cv
37.9028 9.1084 38.0742 9.27051 38.0771 9.27295 cv
38.1113 9.30225 38.2974 9.44727 38.4082 9.54199 cv
38.4478 9.57617 38.4629 9.59863 38.4458 9.61865 cv
38.4287 9.63867 38.4067 9.62988 38.3726 9.60059 cv
38.3413 9.57373 38.3223 9.56201 38.2832 9.53857 cv
38.1943 9.48682 38.1299 9.51563 38.0391 9.60986 cv
37.9556 9.6958 37.8872 9.77539 37.5171 10.207 cv
37.2563 10.5103 li
36.9863 10.8252 36.6675 11.1333 36.2539 11.1333 cv
35.9038 11.1333 35.6729 10.9893 35.4883 10.8311 cv
35.3379 10.7017 35.0728 10.4595 35.0264 10.0942 cv
34.9937 9.83984 35.0659 9.53711 35.4189 9.12549 cv
35.7744 8.71094 li
cp
34.0889 6.58398 mo
33.6001 6.31445 li
33.4092 6.21094 33.3223 6.18164 33.2324 6.22461 cv
33.1719 6.25391 33.1328 6.2832 33.1113 6.30518 cv
33.0894 6.32715 33.0723 6.33447 33.0527 6.32324 cv
33.0303 6.31006 33.0332 6.29004 33.0542 6.25439 cv
33.0845 6.20313 33.3184 5.94531 33.3398 5.92285 cv
33.374 5.88672 33.395 5.87305 33.4146 5.88477 cv
33.4404 5.8999 33.4536 5.95117 33.5303 6.00488 cv
33.6182 6.06934 33.7373 6.14746 33.8438 6.20996 cv
35.1216 6.95996 li
35.2246 7.02051 35.3018 7.05273 35.3535 7.07471 cv
35.4077 7.09326 35.4375 7.10205 35.4502 7.10938 cv
35.4727 7.12305 35.4648 7.14404 35.4365 7.19238 cv
35.3965 7.26025 35.2563 7.47705 35.207 7.56104 cv
35.1846 7.5918 35.167 7.60742 35.1475 7.5957 cv
35.1221 7.58057 35.125 7.56055 35.1504 7.51025 cv
35.168 7.47314 li
35.2104 7.38525 35.1763 7.24365 34.8931 7.06885 cv
34.4922 6.82031 li
33.7158 8.14355 li
33.5415 8.44043 33.3916 8.69531 33.3262 8.84375 cv
33.2832 8.93945 33.2607 9.02197 33.3501 9.0918 cv
33.3916 9.12451 33.459 9.17285 33.5068 9.20117 cv
33.5425 9.22217 33.5527 9.24121 33.5435 9.25732 cv
33.5303 9.27979 33.499 9.27441 33.4634 9.25342 cv
33.2505 9.12891 33.0527 8.99951 32.9624 8.94678 cv
32.8882 8.90332 32.6792 8.79346 32.5503 8.71777 cv
32.5083 8.69336 32.4912 8.66992 32.5044 8.64746 cv
32.5137 8.63135 32.5327 8.62939 32.5713 8.65186 cv
32.6196 8.68066 32.6621 8.69678 32.6953 8.70703 cv
32.7671 8.73242 32.8281 8.67285 32.8926 8.58496 cv
32.9883 8.45898 33.1377 8.20361 33.3125 7.90674 cv
34.0889 6.58398 li
cp
14.5566 9.30078 mo
14.4922 9.30908 14.4727 9.29883 14.4307 9.22803 cv
14.3262 9.05078 14.2246 8.8501 14.1973 8.79688 cv
14.1719 8.74658 14.1606 8.70557 14.1865 8.69043 cv
14.2153 8.67334 14.2354 8.7002 14.251 8.72607 cv
14.2754 8.76758 14.3286 8.82764 14.377 8.87305 cv
14.5889 9.06885 14.8301 9.04346 15.0293 8.92529 cv
15.3193 8.75342 15.3442 8.47363 15.2432 8.30273 cv
15.1499 8.14551 15.0137 8.02588 14.623 7.9751 cv
14.4063 7.94727 li
13.8887 7.87988 13.6328 7.72754 13.4785 7.4668 cv
13.2686 7.11328 13.4141 6.68359 13.8613 6.41846 cv
14.0703 6.29443 14.2246 6.24658 14.3213 6.21973 cv
14.354 6.20898 14.376 6.20898 14.3892 6.23145 cv
14.4141 6.27344 14.4565 6.37402 14.6055 6.625 cv
14.647 6.6958 14.6528 6.72754 14.627 6.74268 cv
14.6045 6.75586 14.5835 6.74219 14.5605 6.7041 cv
14.5435 6.6748 14.4683 6.58496 14.3511 6.54102 cv
14.2666 6.50879 14.1162 6.46729 13.9072 6.59131 cv
13.6689 6.73242 13.6064 6.95654 13.7207 7.14941 cv
13.8086 7.29736 13.9492 7.36621 14.3359 7.41064 cv
14.4663 7.4248 li
15.0288 7.48682 15.2988 7.62695 15.48 7.93213 cv
15.5903 8.11914 15.6514 8.38281 15.5093 8.67139 cv
15.4097 8.86914 15.2466 9.00488 15.0762 9.10645 cv
14.8896 9.2168 14.7314 9.28027 14.5566 9.30078 cv
cp
12.6143 9.3252 mo
12.6284 9.31348 12.6245 9.30273 12.6147 9.29639 cv
11.7754 8.78369 li
11.7632 8.77441 11.7485 8.76221 11.7397 8.76904 cv
11.731 8.77637 11.7368 8.79541 11.7432 8.80957 cv
12.0479 9.74316 li
12.0547 9.75732 12.0645 9.76367 12.0762 9.75439 cv
12.6143 9.3252 li
cp
12.1343 9.94727 mo
12.1196 9.95898 12.1182 9.96973 12.1265 9.9917 cv
12.3022 10.5356 li
12.3311 10.6318 12.3726 10.7139 12.4004 10.749 cv
12.4424 10.8018 12.499 10.8184 12.5898 10.7461 cv
12.6338 10.7114 li
12.6689 10.6836 12.6821 10.6821 12.6963 10.6997 cv
12.7148 10.7231 12.7021 10.7432 12.6699 10.7686 cv
12.5762 10.8433 12.4434 10.9346 12.353 11.0068 cv
12.3208 11.0327 12.167 11.1699 12.0146 11.291 cv
11.9771 11.3213 11.9546 11.3296 11.936 11.3062 cv
11.9219 11.2886 11.9292 11.2734 11.9526 11.2549 cv
11.9785 11.2339 12.0176 11.1982 12.0386 11.1768 cv
12.1592 11.0518 12.1353 10.9082 12.0771 10.7153 cv
11.3462 8.29395 li
11.314 8.18115 11.3057 8.13477 11.335 8.11182 cv
11.3613 8.09082 11.3999 8.10303 11.4824 8.14697 cv
11.6812 8.25195 13.1001 9.07129 13.6416 9.3667 cv
13.9629 9.54102 14.0801 9.51465 14.1533 9.47998 cv
14.2041 9.4541 14.2505 9.42188 14.2852 9.39355 cv
14.3086 9.375 14.3257 9.36621 14.3418 9.38672 cv
14.3608 9.41016 14.3389 9.43701 14.231 9.52344 cv
14.1255 9.60742 13.9121 9.77734 13.6738 9.95801 cv
13.6187 9.99707 13.584 10.0254 13.5674 10.0049 cv
13.5532 9.9873 13.5605 9.97217 13.5874 9.9458 cv
13.603 9.92383 13.6025 9.88086 13.5601 9.85742 cv
12.8315 9.42432 li
12.8145 9.41455 12.8008 9.41553 12.7861 9.42725 cv
12.1343 9.94727 li
cp
9.29492 10.4063 mo
8.92285 10.8213 li
8.7793 10.9844 8.73145 11.0625 8.75293 11.1597 cv
8.76758 11.2251 8.7876 11.2695 8.8042 11.2959 cv
8.8208 11.3218 8.82422 11.3398 8.80859 11.3564 cv
8.79053 11.3755 8.77197 11.3682 8.74219 11.3398 cv
8.69824 11.2988 8.5 11.0132 8.4834 10.9873 cv
8.45557 10.9458 8.44727 10.9224 8.4624 10.9063 cv
8.48291 10.8843 8.53564 10.8828 8.60547 10.8198 cv
8.68799 10.749 8.79102 10.6504 8.87598 10.5605 cv
9.89258 9.48438 li
9.9751 9.39746 10.0234 9.33008 10.0566 9.28418 cv
10.0869 9.23535 10.1021 9.2085 10.1123 9.19775 cv
10.1299 9.17871 10.1489 9.19141 10.1899 9.22998 cv
10.2471 9.28369 10.4268 9.46924 10.4976 9.53613 cv
10.522 9.56445 10.5332 9.58496 10.5176 9.60156 cv
10.4971 9.62305 10.4785 9.61572 10.4351 9.58008 cv
10.4028 9.55469 li
10.3271 9.49316 10.1816 9.49463 9.94727 9.73145 cv
9.61572 10.0664 li
10.7305 11.1191 li
10.9805 11.3555 11.1953 11.5586 11.3252 11.6553 cv
11.4087 11.7188 11.4839 11.7588 11.5718 11.6875 cv
11.6133 11.6548 11.6753 11.6001 11.7139 11.5596 cv
11.7422 11.5293 11.7627 11.5234 11.7764 11.5366 cv
11.7959 11.5547 11.7832 11.584 11.7549 11.6133 cv
11.5854 11.793 11.4155 11.9565 11.3438 12.0327 cv
11.2847 12.0952 11.1309 12.2744 11.0283 12.3833 cv
10.9951 12.4185 10.9688 12.4297 10.9497 12.4116 cv
10.936 12.3989 10.938 12.3804 10.9688 12.3477 cv
11.0078 12.3071 11.0327 12.2695 11.0508 12.2397 cv
11.0908 12.1748 11.0469 12.1021 10.9756 12.0195 cv
10.874 11.8979 10.6592 11.6953 10.4092 11.459 cv
9.29492 10.4063 li
cp
8.37305 12.9248 mo
7.91357 12.5894 7.8291 12.5278 7.72803 12.4629 cv
7.62109 12.3945 7.54736 12.3872 7.48389 12.4424 cv
7.4502 12.4692 7.41895 12.5063 7.39258 12.5425 cv
7.37012 12.5728 7.35107 12.5864 7.32666 12.5688 cv
7.30859 12.5557 7.32031 12.5269 7.35547 12.4785 cv
7.43945 12.3638 7.5874 12.1797 7.65137 12.0923 cv
7.70654 12.0166 7.82715 11.832 7.91113 11.7168 cv
7.93994 11.6777 7.96338 11.6582 7.98145 11.6709 cv
8.00586 11.689 7.99854 11.7114 7.97656 11.7417 cv
7.95459 11.772 7.93994 11.7983 7.91943 11.8389 cv
7.875 11.9316 7.90869 11.9932 8.01025 12.0762 cv
8.10254 12.1528 8.18701 12.2148 8.64648 12.5498 cv
9.17822 12.938 li
9.47168 13.1519 9.70996 13.3262 9.84912 13.4087 cv
9.93701 13.459 10.0068 13.4775 10.085 13.396 cv
10.1221 13.3579 10.1768 13.2959 10.21 13.2505 cv
10.2339 13.2173 10.2539 13.209 10.2695 13.2197 cv
10.2905 13.2354 10.2817 13.2661 10.2578 13.2993 cv
10.1123 13.4985 9.96387 13.6826 9.9043 13.7642 cv
9.85352 13.8335 9.72412 14.0308 9.63574 14.1514 cv
9.60693 14.1909 9.58252 14.2051 9.56152 14.1899 cv
9.54639 14.1787 9.5459 14.1602 9.57275 14.124 cv
9.60547 14.0786 9.62598 14.0381 9.63965 14.0063 cv
9.67188 13.937 9.63379 13.8813 9.55273 13.8086 cv
9.43652 13.7007 9.19824 13.5264 8.90479 13.3125 cv
8.37305 12.9248 li
cp
8.45898 16.0142 mo
8.40625 16.0532 8.38477 16.0537 8.31299 16.0132 cv
8.13379 15.9116 7.94629 15.7876 7.896 15.7549 cv
7.84912 15.7241 7.81885 15.6938 7.8335 15.668 cv
7.85059 15.6387 7.88135 15.6519 7.90723 15.667 cv
7.94971 15.6909 8.02539 15.7168 8.08984 15.7314 cv
8.37109 15.7969 8.56836 15.6548 8.68262 15.4531 cv
8.84863 15.1602 8.73145 14.9043 8.55957 14.8066 cv
8.3999 14.7158 8.22266 14.6797 7.85791 14.8301 cv
7.65576 14.9131 li
7.17285 15.1118 6.875 15.1064 6.61133 14.957 cv
6.25391 14.7534 6.1665 14.3086 6.42334 13.8564 cv
6.54346 13.6445 6.65332 13.5264 6.72412 13.4551 cv
6.74756 13.4297 6.7666 13.4189 6.78906 13.4316 cv
6.83154 13.4556 6.91846 13.5225 7.17188 13.666 cv
7.24365 13.707 7.26416 13.7314 7.24951 13.7573 cv
7.23633 13.7803 7.21143 13.7788 7.17236 13.7568 cv
7.14307 13.7402 7.0332 13.6992 6.90967 13.7192 cv
6.82031 13.7334 6.66895 13.772 6.54883 13.9834 cv
6.41211 14.2241 6.46875 14.4502 6.66406 14.5605 cv
6.81396 14.6455 6.97021 14.6357 7.32813 14.4819 cv
7.44824 14.4297 li
7.96777 14.2041 8.27148 14.1919 8.58105 14.3672 cv
8.76953 14.4741 8.95313 14.6733 8.97314 14.9941 cv
8.98486 15.2158 8.91064 15.415 8.81299 15.5869 cv
8.70557 15.7759 8.59961 15.9092 8.45898 16.0142 cv
cp
6.25684 17.5698 mo
6.29492 17.585 6.31152 17.583 6.33154 17.5625 cv
6.38428 17.499 6.43506 17.3984 6.46875 17.311 cv
6.52295 17.1714 6.52637 17.1206 6.50537 17.0405 cv
6.46924 16.9063 6.34766 16.7427 6.06152 16.6323 cv
5.56641 16.4404 5.29639 16.7134 5.2168 16.9189 cv
5.18311 17.0063 5.16211 17.0703 5.15918 17.1094 cv
5.15674 17.1367 5.16797 17.1489 5.1958 17.1597 cv
6.25684 17.5698 li
cp
5.82178 17.875 mo
5.2915 17.6699 5.19385 17.6323 5.0791 17.5957 cv
4.95801 17.5571 4.8916 17.5635 4.82227 17.6689 cv
4.80469 17.6943 4.77832 17.7524 4.75928 17.8013 cv
4.74463 17.8394 4.72949 17.8579 4.70508 17.8481 cv
4.68066 17.8389 4.68311 17.8115 4.70313 17.7593 cv
4.7749 17.5742 4.87012 17.3589 4.89844 17.2852 cv
4.94434 17.167 5.03662 16.8975 5.07813 16.7896 cv
5.16309 16.5698 5.27441 16.3438 5.47656 16.2056 cv
5.58057 16.1333 5.8125 16.0625 6.04639 16.1533 cv
6.30469 16.2529 6.5 16.4526 6.6499 16.916 cv
7.16064 16.7563 7.56445 16.6357 7.85986 16.5137 cv
8.1377 16.3965 8.21777 16.2627 8.24854 16.2144 cv
8.27002 16.1787 8.28613 16.1484 8.29688 16.1206 cv
8.30762 16.0928 8.32324 16.083 8.34082 16.0898 cv
8.36865 16.1006 8.36621 16.1274 8.3501 16.1694 cv
8.22168 16.501 li
8.14648 16.6963 8.09521 16.7769 8.01123 16.8486 cv
7.87305 16.9678 7.65771 17.0366 7.31348 17.1284 cv
7.06787 17.1934 6.76855 17.2627 6.69824 17.2876 cv
6.6709 17.2969 6.65918 17.3164 6.6499 17.3408 cv
6.52539 17.6416 li
6.51855 17.6592 6.52148 17.6724 6.54248 17.6807 cv
6.59131 17.6992 li
6.91602 17.8247 7.19141 17.9312 7.34473 17.9707 cv
7.4502 17.999 7.53516 18.0078 7.58936 17.9087 cv
7.6167 17.8589 7.65332 17.7852 7.66943 17.7432 cv
7.68018 17.7153 7.69629 17.7051 7.71338 17.7119 cv
7.73779 17.7217 7.73877 17.75 7.72168 17.7954 cv
7.64307 17.9976 7.5332 18.252 7.5127 18.3042 cv
7.4873 18.3701 7.4126 18.5942 7.3584 18.7339 cv
7.34082 18.7793 7.32129 18.7998 7.29688 18.79 cv
7.2793 18.7832 7.27441 18.7656 7.29053 18.7236 cv
7.31055 18.6709 7.31982 18.6265 7.3252 18.5928 cv
7.33789 18.5176 7.26807 18.4702 7.17188 18.417 cv
7.03223 18.3428 6.75684 18.2363 6.43555 18.1123 cv
5.82178 17.875 li
cp
5.12842 20.5674 mo
4.57227 20.4478 4.47021 20.4258 4.35156 20.4077 cv
4.22559 20.3887 4.16064 20.4053 4.10938 20.5205 cv
4.0957 20.5479 4.07861 20.6094 4.06738 20.6606 cv
4.05859 20.7012 4.04688 20.7212 4.02148 20.7158 cv
3.99561 20.71 3.99414 20.6831 4.00586 20.6284 cv
4.02686 20.5293 4.05322 20.4243 4.07324 20.333 cv
4.09717 20.2383 4.11865 20.1553 4.12988 20.104 cv
4.15479 19.9868 4.31152 19.2588 4.32275 19.1885 cv
4.33008 19.1177 4.33545 19.0576 4.33447 19.0269 cv
4.33496 19.0078 4.32861 18.9834 4.33252 18.9648 cv
4.33643 18.9468 4.35156 18.9463 4.37012 18.9502 cv
4.39551 18.9556 4.43555 18.9834 4.60156 19.0303 cv
4.63721 19.042 4.79688 19.084 4.83887 19.1006 cv
4.85645 19.1084 4.87695 19.1201 4.87109 19.146 cv
4.86572 19.1714 4.84619 19.1748 4.81299 19.168 cv
4.7876 19.1621 4.72461 19.1523 4.67676 19.1616 cv
4.60547 19.1729 4.55371 19.2002 4.49219 19.3779 cv
4.47168 19.439 4.38184 19.8213 4.36621 19.8945 cv
4.3623 19.9131 4.37158 19.9224 4.39746 19.9277 cv
5.32275 20.127 li
5.34814 20.1323 5.36328 20.1318 5.36816 20.1099 cv
5.38574 20.0293 5.47607 19.6089 5.48682 19.5229 cv
5.49805 19.4336 5.49902 19.3765 5.46973 19.3359 cv
5.4458 19.3037 5.43066 19.2852 5.43457 19.2671 cv
5.4375 19.2524 5.44727 19.2432 5.46924 19.2476 cv
5.49121 19.2524 5.54688 19.2798 5.72998 19.3345 cv
5.80273 19.3535 5.94629 19.396 5.97217 19.4014 cv
6.00098 19.4077 6.0415 19.4165 6.03418 19.4492 cv
6.02881 19.4751 6.0127 19.4795 5.99414 19.4751 cv
5.95703 19.4712 5.90967 19.4609 5.85938 19.4619 cv
5.78223 19.4644 5.7168 19.5034 5.67285 19.6357 cv
5.65088 19.7036 5.56934 20.0649 5.55029 20.1528 cv
5.54639 20.1709 5.56055 20.1777 5.58203 20.1826 cv
5.87109 20.2446 li
5.99561 20.2715 6.33105 20.3472 6.43799 20.3662 cv
6.69189 20.4136 6.75928 20.3667 6.83984 19.9937 cv
6.86035 19.8984 6.89307 19.7451 6.86963 19.6406 cv
6.84619 19.5361 6.77881 19.4756 6.63428 19.4175 cv
6.5957 19.4019 6.58252 19.3911 6.58789 19.3657 cv
6.59473 19.3364 6.62354 19.3428 6.66016 19.3506 cv
6.74414 19.3687 6.98682 19.4512 7.05615 19.4854 cv
7.14551 19.5313 7.13867 19.5645 7.1084 19.7031 cv
7.0498 19.9775 6.99902 20.1772 6.96191 20.3335 cv
6.9209 20.4893 6.89258 20.6021 6.86914 20.7119 cv
6.86035 20.752 6.84326 20.8325 6.82813 20.9209 cv
6.80957 21.0049 6.79688 21.1016 6.78076 21.1748 cv
6.77051 21.2227 6.75439 21.2456 6.72852 21.2402 cv
6.71045 21.2363 6.70264 21.2192 6.71191 21.1753 cv
6.72363 21.1206 6.72607 21.0752 6.72559 21.0405 cv
6.72656 20.9644 6.65039 20.9287 6.54736 20.8911 cv
6.39746 20.8398 6.1084 20.7778 5.77197 20.7056 cv
5.12842 20.5674 li
cp
4.0708 23.877 mo
3.86035 23.9497 3.81494 24.0107 3.76904 24.1426 cv
3.75049 24.1978 3.74658 24.2573 3.74512 24.2871 cv
3.74268 24.3213 3.73096 24.3315 3.7085 24.3301 cv
3.67871 24.3281 3.67773 24.2871 3.68115 24.231 cv
3.69385 24.0332 3.71875 23.8208 3.72656 23.6904 cv
3.73291 23.5972 3.73291 23.417 3.74512 23.2305 cv
3.74805 23.1855 3.75781 23.145 3.78418 23.1465 cv
3.81006 23.1484 3.81641 23.1714 3.81396 23.2051 cv
3.81055 23.2646 3.81055 23.3208 3.83105 23.3521 cv
3.84766 23.3794 3.87305 23.3926 3.90674 23.3945 cv
3.95557 23.3975 4.06201 23.3706 4.19971 23.3271 cv
5.93555 22.793 li
5.93652 22.7783 li
5.53613 22.5918 4.36523 22.0293 4.12451 21.9243 cv
4.07715 21.9023 4.02246 21.8838 3.98877 21.8818 cv
3.95898 21.8799 3.92773 21.8926 3.91455 21.9258 cv
3.89697 21.9697 3.88965 22.0254 3.88623 22.0737 cv
3.88428 22.1074 3.87842 22.1372 3.85254 22.1353 cv
3.82275 22.1338 3.81738 22.0996 3.82178 22.0288 cv
3.83398 21.8418 3.85498 21.686 3.85791 21.6377 cv
3.8623 21.5742 3.8623 21.3979 3.86914 21.2856 cv
3.87256 21.2373 3.88184 21.208 3.9082 21.2095 cv
3.93408 21.2109 3.93994 21.2339 3.9375 21.2715 cv
3.93555 21.3086 3.93018 21.3867 3.9707 21.457 cv
4.00098 21.5078 4.06104 21.5679 4.29346 21.6836 cv
4.63525 21.8516 4.83008 21.9653 5.27637 22.1963 cv
5.80615 22.4702 6.20215 22.6719 6.3833 22.7656 cv
6.59375 22.8765 6.65186 22.9028 6.64844 22.9551 cv
6.64551 23.0034 6.5918 23.0225 6.41211 23.0825 cv
4.0708 23.877 li
cp
4.87109 25.5557 mo
4.30371 25.5918 4.19922 25.5977 4.08008 25.6133 cv
3.9541 25.6289 3.89258 25.6699 3.87939 25.7529 cv
3.87061 25.7949 3.87012 25.8438 3.87305 25.8887 cv
3.87549 25.9258 3.86914 25.9482 3.83936 25.9502 cv
3.81689 25.9521 3.80762 25.9229 3.80371 25.8633 cv
3.79492 25.7217 3.79102 25.4854 3.78418 25.377 cv
3.77832 25.2842 3.75342 25.0645 3.74414 24.9224 cv
3.74121 24.874 3.74707 24.8433 3.76953 24.8418 cv
3.79932 24.8398 3.80811 24.8618 3.81055 24.8994 cv
3.8125 24.9365 3.81836 24.9663 3.82861 25.0107 cv
3.85352 25.1104 3.91895 25.1367 4.05029 25.1348 cv
4.16992 25.1348 4.27441 25.1289 4.8418 25.0928 cv
5.49902 25.0508 li
5.86133 25.0283 6.15576 25.0098 6.31543 24.9844 cv
6.41553 24.9668 6.48096 24.9365 6.48877 24.8237 cv
6.49316 24.771 6.49512 24.6885 6.4917 24.6328 cv
6.48926 24.5913 6.49902 24.5723 6.51807 24.5708 cv
6.54395 24.5693 6.55713 24.5986 6.55957 24.6396 cv
6.5752 24.8857 6.5791 25.1211 6.58545 25.2227 cv
6.59082 25.3086 6.6167 25.543 6.62646 25.6924 cv
6.62939 25.7402 6.62012 25.7676 6.59375 25.7686 cv
6.5752 25.7705 6.56299 25.7559 6.56006 25.7109 cv
6.55664 25.6553 6.5459 25.6113 6.53662 25.5781 cv
6.51709 25.5039 6.45215 25.4854 6.34326 25.4814 cv
6.18506 25.4727 5.89063 25.4912 5.52832 25.5137 cv
4.87109 25.5557 li
cp
6.67578 28.8994 mo
6.95898 28.8301 7.04346 28.7617 7.05322 28.6826 cv
7.06152 28.6162 7.0498 28.5459 7.03711 28.4873 cv
7.02832 28.4473 7.03027 28.4238 7.05273 28.4189 cv
7.08154 28.4131 7.09619 28.4443 7.10742 28.4951 cv
7.15967 28.7324 7.18066 28.8809 7.1958 28.9502 cv
7.20313 28.9834 7.25195 29.1523 7.29346 29.3428 cv
7.30371 29.3896 7.30762 29.4238 7.27441 29.4307 cv
7.25244 29.4355 7.24023 29.415 7.23242 29.3789 cv
7.22217 29.3311 7.2041 29.2666 7.17822 29.2188 cv
7.12793 29.1299 7.01904 29.1387 6.7002 29.2041 cv
4.53125 29.6465 li
4.45801 29.6621 4.4043 29.6621 4.39648 29.626 cv
4.3877 29.5859 4.42773 29.543 4.47998 29.4658 cv
4.51758 29.4121 4.99121 28.7256 5.40381 28.0762 cv
5.59766 27.7734 6.01563 27.165 6.06055 27.0898 cv
6.05615 27.0723 li
4.42432 27.4688 li
4.20215 27.5205 4.14014 27.5693 4.12305 27.665 cv
4.11328 27.7246 4.13232 27.8115 4.14355 27.8633 cv
4.15332 27.9072 4.14551 27.9238 4.12354 27.9287 cv
4.09424 27.9355 4.08203 27.8955 4.06982 27.8408 cv
4.02832 27.6514 4.00049 27.4736 3.98389 27.3975 cv
3.97461 27.3564 3.93359 27.2207 3.89404 27.041 cv
3.88379 26.9932 3.87939 26.9561 3.90869 26.9502 cv
3.93066 26.9453 3.94629 26.9648 3.95605 27.0088 cv
3.96387 27.0449 3.97021 27.0742 3.99121 27.1152 cv
4.04248 27.2119 4.12598 27.2236 4.33105 27.1826 cv
6.64453 26.7168 li
6.72461 26.6992 6.76074 26.707 6.76807 26.7393 cv
6.77686 26.7803 6.74658 26.833 6.71484 26.8818 cv
6.54639 27.1592 6.17041 27.7324 5.87793 28.1943 cv
5.57031 28.6797 5.20313 29.1846 5.14795 29.2656 cv
5.15039 29.2764 li
6.67578 28.8994 li
cp
6.81836 32.7207 mo
6.2959 32.9443 6.19971 32.9863 6.09277 33.04 cv
5.97852 33.0967 5.93555 33.1484 5.95996 33.2715 cv
5.96484 33.3018 5.98633 33.3623 6.00732 33.4102 cv
6.02344 33.4482 6.02539 33.4717 6.00098 33.4814 cv
5.97705 33.4922 5.95996 33.4717 5.93799 33.4189 cv
5.85986 33.2373 5.77734 33.0166 5.73291 32.9131 cv
5.69775 32.8311 5.59473 32.6182 5.5415 32.4951 cv
5.51953 32.4434 5.51611 32.416 5.54004 32.4063 cv
5.56396 32.3955 5.58008 32.4131 5.59473 32.4482 cv
5.61084 32.4854 5.62305 32.5049 5.64746 32.543 cv
5.70459 32.6289 5.7749 32.6309 5.89795 32.5859 cv
6.01074 32.5459 6.10742 32.5049 6.62988 32.2813 cv
7.11084 32.0752 li
7.60938 31.8604 7.77637 31.6709 7.84131 31.4443 cv
7.90234 31.2344 7.84814 31.0713 7.79785 30.9541 cv
7.7334 30.8027 7.60547 30.6377 7.40918 30.5596 cv
7.13916 30.4512 6.8252 30.5732 6.47168 30.7256 cv
6.04199 30.9092 li
5.51953 31.1338 5.42285 31.1748 5.31592 31.2285 cv
5.20215 31.2861 5.15918 31.3369 5.18359 31.46 cv
5.18848 31.4912 5.20996 31.5508 5.22607 31.5889 cv
5.24219 31.626 5.24414 31.6504 5.22021 31.6602 cv
5.19629 31.6709 5.1792 31.6494 5.1582 31.6006 cv
5.0835 31.4248 5.00098 31.2041 4.99951 31.2012 cv
4.98145 31.1592 4.87842 30.9473 4.82129 30.8145 cv
4.80029 30.7666 4.79688 30.7393 4.82129 30.7295 cv
4.84521 30.7188 4.86084 30.7363 4.87842 30.7773 cv
4.89453 30.8154 4.90723 30.835 4.93164 30.873 cv
4.98828 30.958 5.05859 30.9609 5.18213 30.916 cv
5.29492 30.876 5.39111 30.834 5.91357 30.6104 cv
6.28125 30.4531 li
6.66309 30.2891 7.08447 30.1533 7.45605 30.3359 cv
7.77002 30.4902 7.91406 30.7217 8.00977 30.9443 cv
8.08789 31.127 8.21875 31.4609 8.09961 31.8096 cv
8.0166 32.0527 7.81836 32.292 7.31982 32.5059 cv
6.81836 32.7207 li
cp
f
57.6104 62.6738 mo
57.6104 69.25 li
59.5547 69.25 li
60.5498 69.25 61.2437 68.7607 61.6362 67.7803 cv
61.8506 67.2432 61.958 66.6025 61.958 65.8594 cv
61.958 64.834 61.7969 64.0469 61.4751 63.4971 cv
61.1533 62.9482 60.5132 62.6738 59.5547 62.6738 cv
57.6104 62.6738 li
cp
61.4707 61.1426 mo
62.1772 61.375 62.75 61.8018 63.1875 62.4209 cv
63.5391 62.9229 63.7783 63.4639 63.9063 64.0479 cv
64.0337 64.6318 64.0977 65.1865 64.0977 65.7158 cv
64.0977 67.0557 63.8286 68.1904 63.2905 69.1201 cv
62.5605 70.373 61.4341 71 59.9106 71 cv
55.5664 71 li
55.5664 60.9238 li
59.9106 60.9238 li
60.5356 60.9326 61.0557 61.0059 61.4707 61.1426 cv
cp
false sop
0.74902 0.678431 0.670588 0.901961 cmyk
f
67.4604 65.3828 mo
67.1851 65.667 67.0122 66.0508 66.9414 66.5361 cv
70.2979 66.5361 li
70.2622 66.0186 70.0894 65.626 69.7788 65.3584 cv
69.4683 65.0908 69.083 64.957 68.6235 64.957 cv
68.123 64.957 67.7358 65.0986 67.4604 65.3828 cv
cp
70.375 63.7002 mo
70.8945 63.9326 71.3242 64.2998 71.6626 64.8018 cv
71.9678 65.2451 72.1655 65.7588 72.2563 66.3428 cv
72.3086 66.6846 72.3301 67.1777 72.3203 67.8213 cv
66.8936 67.8213 li
66.9238 68.5693 67.1836 69.0928 67.6729 69.3936 cv
67.9702 69.5811 68.3281 69.6738 68.7471 69.6738 cv
69.1909 69.6738 69.5513 69.5596 69.8286 69.332 cv
69.98 69.209 70.1138 69.0381 70.2295 68.8193 cv
72.2188 68.8193 li
72.1665 69.2607 71.9258 69.71 71.4966 70.166 cv
70.8291 70.8906 69.8945 71.2529 68.6934 71.2529 cv
67.7017 71.2529 66.8267 70.9473 66.0688 70.3359 cv
65.3105 69.7256 64.9316 68.7305 64.9316 67.3525 cv
64.9316 66.0625 65.2739 65.0723 65.958 64.3838 cv
66.6426 63.6943 67.5308 63.3506 68.6226 63.3506 cv
69.271 63.3506 69.8555 63.4668 70.375 63.7002 cv
cp
f
78.0767 65.75 mo
77.8115 65.3076 77.3823 65.0869 76.7886 65.0869 cv
76.0747 65.0869 75.5845 65.4219 75.3174 66.0918 cv
75.1792 66.4473 75.1104 66.8984 75.1104 67.4453 cv
75.1104 68.3115 75.3428 68.9189 75.8071 69.2705 cv
76.0835 69.4756 76.4106 69.5781 76.7881 69.5781 cv
77.3359 69.5781 77.7539 69.3682 78.042 68.9492 cv
78.3296 68.5303 78.4736 67.9717 78.4736 67.2744 cv
78.4736 66.7002 78.3413 66.1924 78.0767 65.75 cv
cp
79.5718 64.3486 mo
80.1797 64.9912 80.4834 65.9346 80.4834 67.1787 cv
80.4834 68.4912 80.1865 69.4912 79.5923 70.1797 cv
78.9985 70.8682 78.2334 71.2119 77.2979 71.2119 cv
76.7017 71.2119 76.2061 71.0635 75.8115 70.7676 cv
75.5962 70.6035 75.3853 70.3643 75.1787 70.0498 cv
75.1787 73.9326 li
73.251 73.9326 li
73.251 63.5488 li
75.1172 63.5488 li
75.1172 64.6494 li
75.3281 64.3252 75.5527 64.0713 75.7915 63.8838 cv
76.2271 63.5518 76.7451 63.3848 77.3462 63.3848 cv
78.2222 63.3848 78.9639 63.7061 79.5718 64.3486 cv
cp
f
86 67.377 mo
85.875 67.4541 85.749 67.5166 85.6221 67.5654 cv
85.4951 67.6123 85.3208 67.6572 85.0991 67.6982 cv
84.6558 67.7803 li
84.2397 67.8525 83.9414 67.9424 83.7603 68.0469 cv
83.4531 68.2246 83.2998 68.501 83.2998 68.874 cv
83.2998 69.2061 83.3936 69.4473 83.5811 69.5947 cv
83.7681 69.7432 83.9961 69.8174 84.2646 69.8174 cv
84.6904 69.8174 85.0825 69.6943 85.4414 69.4482 cv
85.7998 69.2021 85.9858 68.7529 86 68.1016 cv
86 67.377 li
cp
84.8086 66.4678 mo
85.1714 66.4229 85.4307 66.3652 85.5869 66.2969 cv
85.8667 66.1787 86.0068 65.9932 86.0068 65.7432 cv
86.0068 65.4385 85.8994 65.2275 85.6846 65.1104 cv
85.4697 64.9951 85.1543 64.9365 84.7388 64.9365 cv
84.2725 64.9365 83.9419 65.0498 83.748 65.2783 cv
83.6094 65.4463 83.5166 65.6748 83.4707 65.9619 cv
81.5908 65.9619 li
81.6318 65.3096 81.8149 64.7744 82.1401 64.3555 cv
82.6572 63.6992 83.5449 63.3711 84.8037 63.3711 cv
85.623 63.3711 86.3511 63.5322 86.9873 63.8564 cv
87.6235 64.1807 87.9414 64.79 87.9414 65.6885 cv
87.9414 69.1064 li
87.9414 69.3428 87.9458 69.6299 87.9551 69.9678 cv
87.9688 70.2227 88.0073 70.3965 88.0713 70.4873 cv
88.1353 70.5781 88.231 70.6533 88.3584 70.7129 cv
88.3584 71 li
86.2393 71 li
86.1802 70.8496 86.1392 70.708 86.1162 70.5762 cv
86.0933 70.4443 86.0752 70.2939 86.0615 70.125 cv
85.791 70.417 85.4795 70.665 85.1265 70.8701 cv
84.7046 71.1113 84.228 71.2324 83.6963 71.2324 cv
83.0176 71.2324 82.4575 71.04 82.0151 70.6543 cv
81.5728 70.2695 81.3516 69.7236 81.3516 69.0176 cv
81.3516 68.1016 81.7075 67.4385 82.4189 67.0283 cv
82.8091 66.8057 83.3833 66.6455 84.1406 66.5498 cv
84.8086 66.4678 li
cp
f
93.7827 63.374 mo
93.8076 63.377 93.8638 63.3799 93.9502 63.3848 cv
93.9502 65.3809 li
93.8271 65.3672 93.7178 65.3584 93.6221 65.3535 cv
93.5264 65.3486 93.4487 65.3467 93.3896 65.3467 cv
92.606 65.3467 92.0796 65.6025 91.8105 66.1123 cv
91.6602 66.3994 91.585 66.8408 91.585 67.4385 cv
91.585 71 li
89.623 71 li
89.623 63.5488 li
91.4824 63.5488 li
91.4824 64.8477 li
91.7832 64.3506 92.0454 64.0107 92.2686 63.8291 cv
92.6333 63.5244 93.1069 63.3711 93.6904 63.3711 cv
93.7271 63.3711 93.7578 63.3721 93.7827 63.374 cv
cp
f
94.3262 65.0049 mo
94.3262 63.6172 li
95.3652 63.6172 li
95.3652 61.5391 li
97.293 61.5391 li
97.293 63.6172 li
98.5029 63.6172 li
98.5029 65.0049 li
97.293 65.0049 li
97.293 68.9424 li
97.293 69.2471 97.3315 69.4385 97.4092 69.5127 cv
97.4868 69.5889 97.7236 69.626 98.1201 69.626 cv
98.1792 69.626 98.2422 69.625 98.3081 69.6221 cv
98.374 69.6201 98.439 69.6162 98.5029 69.6123 cv
98.5029 71.0684 li
97.5801 71.1025 li
96.6597 71.1348 96.0308 70.9746 95.6934 70.624 cv
95.4746 70.4004 95.3652 70.0566 95.3652 69.5918 cv
95.3652 65.0049 li
94.3262 65.0049 li
cp
f
109.051 63.5762 mo
109.37 63.7041 109.659 63.9268 109.919 64.2461 cv
110.128 64.5059 110.27 64.8252 110.343 65.2031 cv
110.388 65.4541 110.411 65.8213 110.411 66.3037 cv
110.397 71 li
108.401 71 li
108.401 66.2559 li
108.401 65.9736 108.356 65.7412 108.265 65.5586 cv
108.091 65.2119 107.772 65.0391 107.308 65.0391 cv
106.77 65.0391 106.398 65.2627 106.193 65.709 cv
106.088 65.9463 106.036 66.2314 106.036 66.5635 cv
106.036 71 li
104.074 71 li
104.074 66.5635 li
104.074 66.1221 104.029 65.7998 103.938 65.5996 cv
103.773 65.2393 103.452 65.0596 102.974 65.0596 cv
102.417 65.0596 102.044 65.2393 101.853 65.5996 cv
101.748 65.8047 101.695 66.1104 101.695 66.5156 cv
101.695 71 li
99.7197 71 li
99.7197 63.5625 li
101.613 63.5625 li
101.613 64.6494 li
101.855 64.2627 102.083 63.9863 102.297 63.8223 cv
102.675 63.5303 103.165 63.3848 103.767 63.3848 cv
104.336 63.3848 104.796 63.5107 105.147 63.7607 cv
105.43 63.9932 105.644 64.292 105.79 64.6563 cv
106.045 64.2188 106.362 63.8975 106.74 63.6924 cv
107.141 63.4873 107.588 63.3848 108.08 63.3848 cv
108.408 63.3848 108.732 63.4482 109.051 63.5762 cv
cp
f
114.143 65.3828 mo
113.868 65.667 113.695 66.0508 113.624 66.5361 cv
116.98 66.5361 li
116.944 66.0186 116.772 65.626 116.462 65.3584 cv
116.151 65.0908 115.766 64.957 115.306 64.957 cv
114.806 64.957 114.418 65.0986 114.143 65.3828 cv
cp
117.058 63.7002 mo
117.577 63.9326 118.007 64.2998 118.345 64.8018 cv
118.65 65.2451 118.849 65.7588 118.938 66.3428 cv
118.991 66.6846 119.013 67.1777 119.003 67.8213 cv
113.576 67.8213 li
113.606 68.5693 113.866 69.0928 114.355 69.3936 cv
114.653 69.5811 115.011 69.6738 115.43 69.6738 cv
115.874 69.6738 116.233 69.5596 116.511 69.332 cv
116.663 69.209 116.796 69.0381 116.912 68.8193 cv
118.901 68.8193 li
118.849 69.2607 118.608 69.71 118.179 70.166 cv
117.512 70.8906 116.577 71.2529 115.376 71.2529 cv
114.384 71.2529 113.509 70.9473 112.751 70.3359 cv
111.993 69.7256 111.614 68.7305 111.614 67.3525 cv
111.614 66.0625 111.957 65.0723 112.641 64.3838 cv
113.325 63.6943 114.213 63.3506 115.306 63.3506 cv
115.954 63.3506 116.538 63.4668 117.058 63.7002 cv
cp
f
125.997 63.9756 mo
126.484 64.3799 126.729 65.0479 126.729 65.9824 cv
126.729 71 li
124.732 71 li
124.732 66.4678 li
124.732 66.0752 124.681 65.7744 124.576 65.5654 cv
124.386 65.1826 124.024 64.9912 123.491 64.9912 cv
122.835 64.9912 122.384 65.2715 122.14 65.832 cv
122.014 66.1279 121.95 66.5068 121.95 66.9668 cv
121.95 71 li
120.002 71 li
120.002 63.5625 li
121.889 63.5625 li
121.889 64.6494 li
122.138 64.2666 122.374 63.9912 122.597 63.8223 cv
122.996 63.5215 123.502 63.3711 124.114 63.3711 cv
124.882 63.3711 125.509 63.5732 125.997 63.9756 cv
cp
f
127.774 65.0049 mo
127.774 63.6172 li
128.813 63.6172 li
128.813 61.5391 li
130.741 61.5391 li
130.741 63.6172 li
131.951 63.6172 li
131.951 65.0049 li
130.741 65.0049 li
130.741 68.9424 li
130.741 69.2471 130.78 69.4385 130.857 69.5127 cv
130.935 69.5889 131.172 69.626 131.568 69.626 cv
131.628 69.626 131.69 69.625 131.757 69.6221 cv
131.822 69.6201 131.888 69.6162 131.951 69.6123 cv
131.951 71.0684 li
131.028 71.1025 li
130.108 71.1348 129.479 70.9746 129.142 70.624 cv
128.923 70.4004 128.813 70.0566 128.813 69.5918 cv
128.813 65.0049 li
127.774 65.0049 li
cp
f
141.747 69.0117 mo
142.052 68.6064 142.205 68.0313 142.205 67.2842 cv
142.205 66.5381 142.052 65.9639 141.747 65.5615 cv
141.442 65.1592 141.005 64.957 140.435 64.957 cv
139.864 64.957 139.427 65.1592 139.118 65.5615 cv
138.812 65.9639 138.657 66.5381 138.657 67.2842 cv
138.657 68.0313 138.812 68.6064 139.118 69.0117 cv
139.427 69.417 139.864 69.6191 140.435 69.6191 cv
141.005 69.6191 141.442 69.417 141.747 69.0117 cv
cp
143.306 70.0889 mo
142.677 70.8652 141.722 71.2529 140.441 71.2529 cv
139.161 71.2529 138.206 70.8652 137.577 70.0889 cv
136.948 69.3115 136.634 68.3779 136.634 67.2842 cv
136.634 66.21 136.948 65.2783 137.577 64.4912 cv
138.206 63.7041 139.161 63.3096 140.441 63.3096 cv
141.722 63.3096 142.677 63.7041 143.306 64.4912 cv
143.935 65.2783 144.249 66.21 144.249 67.2842 cv
144.249 68.3779 143.935 69.3115 143.306 70.0889 cv
cp
f
148.727 60.8311 mo
148.827 60.8389 148.964 60.8486 149.137 60.8623 cv
149.137 62.4482 li
149.027 62.4346 148.844 62.4248 148.587 62.417 cv
148.329 62.4111 148.151 62.4678 148.054 62.5889 cv
147.955 62.709 147.906 62.8428 147.906 62.9883 cv
147.906 63.1338 147.906 63.3438 147.906 63.6172 cv
149.185 63.6172 li
149.185 64.9912 li
147.906 64.9912 li
147.906 71 li
145.972 71 li
145.972 64.9912 li
144.878 64.9912 li
144.878 63.6172 li
145.944 63.6172 li
145.944 63.1387 li
145.944 62.3408 146.079 61.792 146.348 61.4912 cv
146.63 61.0439 147.312 60.8213 148.392 60.8213 cv
148.515 60.8213 148.626 60.8252 148.727 60.8311 cv
cp
f
156.273 71 mo
154.182 71 li
154.182 60.9238 li
156.273 60.9238 li
156.273 71 li
cp
f
164.093 63.9756 mo
164.581 64.3799 164.825 65.0479 164.825 65.9824 cv
164.825 71 li
162.829 71 li
162.829 66.4678 li
162.829 66.0752 162.776 65.7744 162.673 65.5654 cv
162.483 65.1826 162.121 64.9912 161.587 64.9912 cv
160.931 64.9912 160.481 65.2715 160.237 65.832 cv
160.11 66.1279 160.047 66.5068 160.047 66.9668 cv
160.047 71 li
158.099 71 li
158.099 63.5625 li
159.985 63.5625 li
159.985 64.6494 li
160.235 64.2666 160.471 63.9912 160.693 63.8223 cv
161.093 63.5215 161.599 63.3711 162.212 63.3711 cv
162.978 63.3711 163.605 63.5732 164.093 63.9756 cv
cp
f
169.72 60.8311 mo
169.819 60.8389 169.956 60.8486 170.13 60.8623 cv
170.13 62.4482 li
170.021 62.4346 169.837 62.4248 169.579 62.417 cv
169.322 62.4111 169.145 62.4678 169.046 62.5889 cv
168.948 62.709 168.899 62.8428 168.899 62.9883 cv
168.899 63.1338 168.899 63.3438 168.899 63.6172 cv
170.178 63.6172 li
170.178 64.9912 li
168.899 64.9912 li
168.899 71 li
166.965 71 li
166.965 64.9912 li
165.871 64.9912 li
165.871 63.6172 li
166.938 63.6172 li
166.938 63.1387 li
166.938 62.3408 167.071 61.792 167.341 61.4912 cv
167.624 61.0439 168.305 60.8213 169.385 60.8213 cv
169.508 60.8213 169.62 60.8252 169.72 60.8311 cv
cp
f
175.954 69.0117 mo
176.259 68.6064 176.412 68.0313 176.412 67.2842 cv
176.412 66.5381 176.259 65.9639 175.954 65.5615 cv
175.649 65.1592 175.212 64.957 174.642 64.957 cv
174.071 64.957 173.634 65.1592 173.325 65.5615 cv
173.019 65.9639 172.864 66.5381 172.864 67.2842 cv
172.864 68.0313 173.019 68.6064 173.325 69.0117 cv
173.634 69.417 174.071 69.6191 174.642 69.6191 cv
175.212 69.6191 175.649 69.417 175.954 69.0117 cv
cp
177.513 70.0889 mo
176.884 70.8652 175.929 71.2529 174.648 71.2529 cv
173.368 71.2529 172.413 70.8652 171.784 70.0889 cv
171.155 69.3115 170.841 68.3779 170.841 67.2842 cv
170.841 66.21 171.155 65.2783 171.784 64.4912 cv
172.413 63.7041 173.368 63.3096 174.648 63.3096 cv
175.929 63.3096 176.884 63.7041 177.513 64.4912 cv
178.142 65.2783 178.456 66.21 178.456 67.2842 cv
178.456 68.3779 178.142 69.3115 177.513 70.0889 cv
cp
f
183.989 63.374 mo
184.015 63.377 184.071 63.3799 184.157 63.3848 cv
184.157 65.3809 li
184.034 65.3672 183.925 65.3584 183.829 65.3535 cv
183.733 65.3486 183.655 65.3467 183.597 65.3467 cv
182.813 65.3467 182.286 65.6025 182.018 66.1123 cv
181.867 66.3994 181.792 66.8408 181.792 67.4385 cv
181.792 71 li
179.83 71 li
179.83 63.5488 li
181.689 63.5488 li
181.689 64.8477 li
181.99 64.3506 182.253 64.0107 182.476 63.8291 cv
182.841 63.5244 183.313 63.3711 183.897 63.3711 cv
183.935 63.3711 183.965 63.3721 183.989 63.374 cv
cp
f
194.596 63.5762 mo
194.915 63.7041 195.204 63.9268 195.464 64.2461 cv
195.673 64.5059 195.815 64.8252 195.888 65.2031 cv
195.933 65.4541 195.956 65.8213 195.956 66.3037 cv
195.942 71 li
193.946 71 li
193.946 66.2559 li
193.946 65.9736 193.901 65.7412 193.81 65.5586 cv
193.636 65.2119 193.317 65.0391 192.853 65.0391 cv
192.315 65.0391 191.943 65.2627 191.738 65.709 cv
191.634 65.9463 191.581 66.2314 191.581 66.5635 cv
191.581 71 li
189.619 71 li
189.619 66.5635 li
189.619 66.1221 189.573 65.7998 189.482 65.5996 cv
189.318 65.2393 188.997 65.0596 188.519 65.0596 cv
187.962 65.0596 187.589 65.2393 187.397 65.5996 cv
187.292 65.8047 187.24 66.1104 187.24 66.5156 cv
187.24 71 li
185.265 71 li
185.265 63.5625 li
187.158 63.5625 li
187.158 64.6494 li
187.399 64.2627 187.628 63.9863 187.842 63.8223 cv
188.22 63.5303 188.71 63.3848 189.312 63.3848 cv
189.882 63.3848 190.341 63.5107 190.692 63.7607 cv
190.976 63.9932 191.188 64.292 191.335 64.6563 cv
191.591 64.2188 191.907 63.8975 192.285 63.6924 cv
192.687 63.4873 193.133 63.3848 193.625 63.3848 cv
193.953 63.3848 194.276 63.4482 194.596 63.5762 cv
cp
f
201.89 67.377 mo
201.765 67.4541 201.639 67.5166 201.512 67.5654 cv
201.385 67.6123 201.21 67.6572 200.989 67.6982 cv
200.546 67.7803 li
200.13 67.8525 199.831 67.9424 199.649 68.0469 cv
199.343 68.2246 199.189 68.501 199.189 68.874 cv
199.189 69.2061 199.283 69.4473 199.471 69.5947 cv
199.657 69.7432 199.886 69.8174 200.154 69.8174 cv
200.58 69.8174 200.972 69.6943 201.331 69.4482 cv
201.689 69.2021 201.876 68.7529 201.89 68.1016 cv
201.89 67.377 li
cp
200.698 66.4678 mo
201.062 66.4229 201.32 66.3652 201.477 66.2969 cv
201.757 66.1787 201.896 65.9932 201.896 65.7432 cv
201.896 65.4385 201.789 65.2275 201.574 65.1104 cv
201.359 64.9951 201.044 64.9365 200.628 64.9365 cv
200.162 64.9365 199.831 65.0498 199.638 65.2783 cv
199.499 65.4463 199.406 65.6748 199.36 65.9619 cv
197.48 65.9619 li
197.521 65.3096 197.704 64.7744 198.03 64.3555 cv
198.547 63.6992 199.435 63.3711 200.693 63.3711 cv
201.513 63.3711 202.241 63.5322 202.877 63.8564 cv
203.513 64.1807 203.831 64.79 203.831 65.6885 cv
203.831 69.1064 li
203.831 69.3428 203.835 69.6299 203.845 69.9678 cv
203.858 70.2227 203.897 70.3965 203.961 70.4873 cv
204.024 70.5781 204.12 70.6533 204.248 70.7129 cv
204.248 71 li
202.129 71 li
202.069 70.8496 202.028 70.708 202.006 70.5762 cv
201.983 70.4443 201.965 70.2939 201.951 70.125 cv
201.681 70.417 201.369 70.665 201.017 70.8701 cv
200.595 71.1113 200.118 71.2324 199.586 71.2324 cv
198.907 71.2324 198.347 71.04 197.905 70.6543 cv
197.462 70.2695 197.241 69.7236 197.241 69.0176 cv
197.241 68.1016 197.597 67.4385 198.309 67.0283 cv
198.698 66.8057 199.272 66.6455 200.03 66.5498 cv
200.698 66.4678 li
cp
f
204.768 65.0049 mo
204.768 63.6172 li
205.807 63.6172 li
205.807 61.5391 li
207.734 61.5391 li
207.734 63.6172 li
208.944 63.6172 li
208.944 65.0049 li
207.734 65.0049 li
207.734 68.9424 li
207.734 69.2471 207.772 69.4385 207.851 69.5127 cv
207.929 69.5889 208.165 69.626 208.562 69.626 cv
208.62 69.626 208.684 69.625 208.749 69.6221 cv
208.815 69.6201 208.88 69.6162 208.944 69.6123 cv
208.944 71.0684 li
208.021 71.1025 li
207.101 71.1348 206.472 70.9746 206.135 70.624 cv
205.916 70.4004 205.807 70.0566 205.807 69.5918 cv
205.807 65.0049 li
204.768 65.0049 li
cp
f
210.223 63.5488 mo
212.198 63.5488 li
212.198 71 li
210.223 71 li
210.223 63.5488 li
cp
212.198 62.6602 mo
210.223 62.6602 li
210.223 60.8623 li
212.198 60.8623 li
212.198 62.6602 li
cp
f
218.542 66.2217 mo
218.505 65.9443 218.411 65.6924 218.261 65.4697 cv
218.042 65.1689 217.701 65.0186 217.24 65.0186 cv
216.582 65.0186 216.132 65.3447 215.89 65.9961 cv
215.763 66.3418 215.698 66.8008 215.698 67.374 cv
215.698 67.9189 215.763 68.3584 215.89 68.6895 cv
216.123 69.3096 216.562 69.6191 217.206 69.6191 cv
217.663 69.6191 217.987 69.4961 218.179 69.25 cv
218.37 69.0039 218.487 68.6846 218.528 68.293 cv
220.518 68.293 li
220.472 68.8857 220.257 69.4463 219.874 69.9746 cv
219.263 70.8271 218.357 71.2529 217.157 71.2529 cv
215.958 71.2529 215.075 70.8975 214.51 70.1865 cv
213.944 69.4756 213.661 68.5537 213.661 67.4209 cv
213.661 66.1436 213.974 65.1484 214.599 64.4375 cv
215.224 63.7266 216.085 63.3711 217.185 63.3711 cv
218.12 63.3711 218.886 63.5811 219.481 64 cv
220.076 64.4189 220.429 65.1592 220.538 66.2217 cv
218.542 66.2217 li
cp
f
223.382 68.6211 mo
223.423 68.9678 223.513 69.2139 223.649 69.3594 cv
223.893 69.6191 224.341 69.749 224.996 69.749 cv
225.38 69.749 225.687 69.6924 225.913 69.5781 cv
226.14 69.4639 226.253 69.2939 226.253 69.0654 cv
226.253 68.8467 226.161 68.6807 225.979 68.5664 cv
225.796 68.4521 225.117 68.2568 223.94 67.9785 cv
223.095 67.7686 222.497 67.5068 222.151 67.1924 cv
221.806 66.8818 221.632 66.4365 221.632 65.8525 cv
221.632 65.165 221.902 64.5732 222.443 64.0791 cv
222.985 63.584 223.747 63.3369 224.729 63.3369 cv
225.66 63.3369 226.419 63.5225 227.006 63.8936 cv
227.593 64.2656 227.93 64.9072 228.017 65.8184 cv
226.068 65.8184 li
226.041 65.5674 225.97 65.3701 225.856 65.2236 cv
225.642 64.96 225.275 64.8271 224.759 64.8271 cv
224.334 64.8271 224.031 64.8936 223.851 65.0254 cv
223.671 65.1572 223.58 65.3125 223.58 65.4902 cv
223.58 65.7139 223.676 65.876 223.868 65.9756 cv
224.06 66.0811 224.737 66.2607 225.902 66.5156 cv
226.679 66.6982 227.261 66.9736 227.647 67.3428 cv
228.03 67.7158 228.222 68.1836 228.222 68.7441 cv
228.222 69.4824 227.946 70.085 227.396 70.5527 cv
226.846 71.0195 225.995 71.2529 224.845 71.2529 cv
223.671 71.2529 222.805 71.0059 222.245 70.5117 cv
221.687 70.0166 221.406 69.3867 221.406 68.6211 cv
223.382 68.6211 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (glinz) ()
%%Title: (Logo UZH_IfI_e_pos.eps)
%%CreationDate: 9/15/10 11:42 AM
%AI9_DataStream
%Gb!R&kuo%Lc7&VHJFC;_%^Y!_5QZV\5Tk`5O?b.%^]=Mh`&;E"[==]^5FST"GIQ>ZmofPdZCYWDFc@kB-)m]C8nFdre@N5.?#R+M
%]j*HQ[qs]Gff#D,Bj.?*AbYmcZ^WLEeK%T/JlUR6>UXGj:!`C'MHR>Lf7\HSmE;D_Aug.*BjWd1h9GYA]@1%<DuSR+Q/=L&iCTel
%f"Ab9s/WePhmg<L<S$p2oD7j&Zek+41jW`JWZb%pc8V>4n#m4n*\NnPjg'T8>2M-^WPt&R1^1#@G6[ND0(5F8RRb_:o4m^p*d@.*
%HVWIZS%Tle!sYL;(cU?Dm754+>h5pXj_G(uF^37E3T:k"p,r-0CV&uujk6gZRb,%)?Dl2_D7@7*EOR$Z&!-IE?B['R)1'gc)nl]P
%Omc0\VF[P*9<Xemk*22pUT/[T?$8)b+o'%*Ffl9bZME*ho3][k^<>83YMHm#*$!d@1@j!X^#RlI!'1PCX?mS,flsHnlg`F7:\W,Z
%8aEh*P@*5=\bb(S<V'N^e40DNJI']f5<\r*!ZrAPlXgZ@U4*&p#Zr^+RQQ0J3b\HIm"?ClHYg,S[Qi0<%FYPm\7H$pmcnB0#>0'9
%F^$B.[e-=n?SWJ"Ng3VF0!*_<XQ$k;mIb=3fn@qBCtGe8T'u.mmrWHN_DQLrZH"%DJZ9O^hcKjL87Br[?F(q&#GTt#)n#jLnb/>3
%pilm_fP91c`XK%e=_0j:AHO?T[FOIuQHQ^PB]\(4^WRRGpQ5#(ph-&jkrAJ&qtR_4WM%$^-@XrQe&8/]a\V5FXNe-m#>7&erc/u0
%jZ$AbEU%\sVXJ"4ho@K9r577&O/74G9Aqi-`)<(o=DDmjCMn%LPKcfQ;m561HJNSFG.ip^lZKAJ,NeOeGdp7mMD`q*'*J;a@O[f\
%IUXarPF<pb_\qD\QGFHt-dGq)K'VEdn.U<1N:7Kb@Q\YR3$\@>H/i7bigd5K`[:G@V/Tc9M.PspKW4X\OY`"8Mi8t[jI/2P*^,RT
%a2YgQaOM3.')W85iV`0Y>N-CY=n=FU1&Qs+E.2PU)(Sr.kD,])$YRNGO.SOTK]"5D_YN.<Y9HmOj-BM^*Yf.Ba;+ZP2<43]f!,qL
%:#Ue=cD/FBo=2;;DHX(XQVd^d%*hUF-I**:o;qa:c4<.E'[o"dO)`$ZnIs+(lq/!]fnstjF5-jr\"[;".uN&"j@h!r$]6UeRPN`F
%FGtA1QgoeT="C$-`ad%eWcr?Olgo2sa!56BA8:6aBA@G6Fo'/N)fe$l.9.(kL7G+0'[f0D\"`b]rigQ:6]0@1<E<33f)\C;0T!2)
%CoFV=nZ%&K?*:0m)Z@Rg//<='B,LOlr6,*kMgpM3q-U+1gC+Dgnitafhr.rAkB[![o2OV=r**Ok-fJG3\$<ca_nZ,Q<8#u78GJPO
%D/]%7n1XgjJq#>tEUE7Zf9Lid?i1`&B3:Xh?/O'1GOCd/"lF.N^i/OFIEMf\Y']T&i?E*o"'?R.D8S7?fHR/VL34)_cO!)@YU4hY
%'5Z@TY1NJ2QG@Vh3;p`YY\!/=b<Y;dDA>h6Gd't[&*oK1L5R`,'p%/>l04LOE3K&mfMJ^>33Xsb`c#*\btL91*+00,"-/A]UH-gb
%ZrsEmJ/?,BdGVOnfsX$7BH6?n5ECk<Mgp#,Ydr4=gJGE@IW;aI0=?B2]WbHU'B(":-DTW$A^t0FFYAF@s+RmDY,sAjNf@\&ZXrL`
%C3*[72sT;;'uO2Fe%1>+-S0L)1W#L!US0^iQ_AQnOBQT;>`3PncZs'[]Wl:D=4H8r&Yi#O]OGVN9UC](Ts9.9(paREfXJ`^3jjjI
%'4,D.3%!ot`l#L]*0=?K>W<M='=OTL1N%JU>Y<BD;j5EEn>Ab"E5Alr)=ueq'UFm,K@/3O]MP6UY@'@-!L?W[Yr7pp3:oXV"gk=B
%Tr8$.#pid-2tJ5RR_Pil.c+UF&6c4-p_Ys.h[phW>2U-'Nf[,gH1\K31,A:0/hKN4/(?uIAN:KcQe)bgMY"i.EEU5V\ZAUOoq4dU
%Y_sL$7`BkF]+c<Sk*b+ZQ3?Zp@s'XE`XC=\&Mr:2/joH-j;Z5WogC2k69!-G8tL^nf7e:MDdFaSV64@#>$LtHbX'r`FGKH7g6IeT
%1.eTlfR#S5StX5kFVtWtB?PDH*!=juFgsYjLNm4+aLiQjpQeCV,+pbSj:p`O"\5(5*7>>TWA00+;#QF"$$u)c(Q?KE2.i/:C$VVZ
%(9tuhGm@UkH)7Go:4%kVW8DHh?cKXV_t`1tMRV(PKYsaL]'M;])_f!:KQSq33p'aOO6rn,-X*iC>2u$mCb8(U,5WB,ms,mTQ>t4A
%iNY,XZ-6b8iSKsbe-L:`_0JO)<=a51J@]PsT>.EbO`G_+W/Fnh3R.K$7M,(QQK9Tu6W"oJ2>+$M]@&rTT8h&iBc`4=V7!67]](,0
%W8D_naWXu;loUI1$rKg2A9>7p*J8d+A1D)Ij\ONI+N:c?O2n)A9`:#S;nJBjDDd/fY)GC'iBX\G5:hp7bD`:/(JrnQj[XDS=B2bQ
%eifls`];Lf<3G/L\OYL\=[')Y,"eag4E#+gTNbHif-u#X*JX)&cB2ZGCQj^2W6Q(E&Wp^1:0gF`Q>8$5'mD'C(3O+n8XPDd0VMq&
%Q+-$h3T8lbe)*t7JYZRWal\-A*VE-NR)bkaVt;1a/p(B=B)#)APLQUS7FB8d:hsX$LfP8;0s:S\Q<FsQR2D^3[VES<mn23lF_:Qn
%0'-MY`\Q#iH6<faL;Y(9/j$+s;;=*O8[K!sF"Htc^"X38i7ZYGQGf"+O[F[V@',Xe%j!B69P3PZma&S#YYZEB[FD^NbYpYR]0tnm
%Tro9A\*c]>AZ_@LOnTJ@bO]-M7-Q1q0a>4HRZ1JoWa06hMH<rg(?kDI\egB3nLns(W9(=\;kkS:TI<IoN9[)h/#K\#mR-AhC0a]&
%lCr]^H8Y:5b6QVM\>I\EeEZNcADCK>1O1m;[Jn]ReAo=K]V2\B1hX7qqYK-!\?m/!b8SsnFD2]Yg_O[hl!2=Q*l!m7iTLs\17r"4
%bT3Eletpt(kH$3$ZED3?g>K[_a.beUbRF@S-">Lk[u2c6GR#g5QK&RjEm(mn/$*QrY0c4Qh_s4"GXTnY^?D=eqn@L'c[tWXjLEli
%H=Zb2rB<G^6g<>@]"1OioY`gU\po<%4.Z)oj'M%Q]/7-Ke\5^_NuG^$o#?*aFk*$5$]KS$\HY;0DZ=H,XP114SBGd<@g>dbY068d
%IQ&p,:g!eW\)XC@??:'Qa-Z#'n!#al:YhN2a*.>D(gm2<0MDK\'[-N#oPm86>45XRl2I9M5dI<\:@Gs#(FYj1"$HL"DLJj2It)h$
%Bft8-?D_k,niZ,mT+01NrP$ZnL@sf/qHJJ$s*hIkhqrT!6>DHENZ+JFmH&cfq!W+(q(T=dXlcg1k95F8Jo8'sC>QEA,D-CINRh,*
%F//>of/,,/YM7VCE!YuTLrT/+,G$HQO)Gqt9c@p<VG8Fu$]sn,UXeRm#p(p[iWnZ`jB5_50e@"f4pSn@'n&_Jq(csR$9g\j1YLXB
%pW[TT[bkj"X$o7qbGEmqJEk/'III&<\TZVMBU0H-[H$"s7p%8jU6XW$[,;c:s#Y&ti'XKZ+Z7k4>q`/j>kmhJr-/<NIKSe@AZPa;
%r:R[&^&mN_LCuIo<N7e=?C&_k(a&[PRD@=iGmm*\;<,@snq4r2FA[Fmab+`)p?@'!I0]11Q_gI:?lZ2Y@92CgRYrdah__=JF-^+`
%p^o;*2Y6qT(`H!H1E)UbWagP8jNhW,2c'_X]"LLJ1cg-Xn'e`NL[D-SlGJtMfmc6A\)?ch#klR2`D`rH)u(Tm?12kRs)4>C6i3!D
%QT)DJ=.Nr]b8B?p*ag=>MBBOH;5E.!fb^dYq-T+VpEf=_0shE?8$(o]NVb)'(?+).E\63J/g_h-`d[k>`D3JiC)0(YIJ`T<GuXu'
%WoW/(40OQHMHS@8bRK@1o\r6,`8LG[993f_8&U(PMhsdl^MR622iA7H^fC?j`9>Bo'kVS>q@?L]:@IbQgM9%OZ]a[)NXhDf%9.mt
%cN=q58rir3Hi[aQ0,i"5+1S]TlX0\2]CA,0#2T12bQ$t8fJT_DBfP5.LM#R1H`B$LgZt=QbS?B?B4\;UGZDZ.h*LZ/fBlT,VT?-?
%i'0<(+JaA"XSuL]('!OO"EEZ.B(L5/g&1eEcNY.rUYX4``^RKE)Sn`2=-)C9Mp/39c@<[u:L`e&rRAAo;Sp77^AYqrohQ+WU"O3d
%JMo@M3;aB/0m+f1LEb4_.86#A^27345!>.JX9%s>S[<8fTr)RAI8AJ<JWk_H.EW9ghs?Sg3mDQK<t:4m^7?lGTZ>=Sh*qoYK1S!`
%HWsd%RRYFcab0:uiuZs9QAl[TM!>fMRc$j2mZ`2),JCb)I4Sa6;2tNu\^S3G0m</(4Q>-WIl5F:^RC]`oE>]&d!k99hmT!8DQhO'
%;]P)VZG_U:SOODlYk2#gZIeN/0,jSEetq;$)pj&;q<qX>8\M3k[sSSLg#t<:(O4k*#<+JU>>q8?IEsR]D0Bj?+(u@truiIjKFi0n
%^MC51mpIj2C\I;h<Y]EJh,EbS$KO/7fX;Z,a"KA4]o.'/Es9a/%lhsFr//j\8?lL!dHWnRJ;5cWL*>>YQ+OO*BbkOU]$jWkB,d/q
%AX>7uh%)%t9X>c$KGcc%TVNW5La,?U++Y!GgK1kt`l7?DD=?q$eJ,jmEUH,fFoBh"DO-@;O)!pB/8GIDiFCp5.R=@ONUC(]9\ma4
%OrPG8[u1+6b$@0e<Z,ES"D6<nfQhnK]`-Dr#8GY5$@_fUnH`CH]mY.:DhM)cB4=[p%^W]^GHRB9rR3@M%bn\L@m/OUWuWsFq6i`_
%UYVcQOrOcH&Y2B/-C,l/UC0_+2c37cMO=5O'iRsq6:Dbl[8/>>2PLg0`p-fTVpi/e77+eb+m/_+3t@jA?J[k,cC7R&$?3`b.'`:&
%&,RZ):%fMRDX8Mc$2nGmM,6=['"V>L0XA4`?u3f[b-_H"FTCsNNh6q'E@o]=C-^YM9kl(G8i5XC\SglMHGqHK%6&tgB(MM4C/R5p
%+H"Zo]R#+KpT;;bHFt`_3.';0)S2in+"d9_fW!_:7VVN:PiuR&HYj@J[d3(Bm"D7=Vs4"g=d9Mn=F\^k/GlXEY@$*tDc!^.7'SqG
%rbc'C::n!eX[[.(:+]"0HQfEe^k1r\\+e,KjVls5gYP<X0u#-'l1?JEIAJUc44VMt$cHroGF4no@`^l/?XVH*:>*om[G=."*e5Xi
%p^?009tU!=+chR[Zm.un8m+RK'h3H*Gc]a9/GE6>fH.4<m])r7K76m\J#EE):q2r_lG/SUDL94r<t.6VlEMbA1^`5uj!8^0O2)mI
%X^CGr`B'.QjT.ea^V=H(\iIj.Jq1/h'l[)>4qoCbLkl+D,=8+il)9tg15e@R3d9ETW!a:L7U;['ACLcT-\P^]Rf$pnW`SqUSR:bb
%*ofG-X/JmH2!F'TEOQ;'%h53J'TMIoI3npl=R@Af$gmCs-*N5_+Xe^9-oAQaG."OoRt'*CG-3m^3;9:f,udPUJ),!cc^,/BAZB'#
%r1,54_Lh13NR@u.&Is-tMi6q>Z&EMZ+s6c*iIKZf-kneea=7pI--q/e"OcA2I.;E+X)n.SN]'sB62aXIaOtNBi[JZTD8ph1+-BZ]
%bg8\>'_f;nfMZoIe=6_[%@uh$gBWt*X[C\q96Dm,pJ'2h^iDG>&Joc+^\g0K5cMt=X.+lB.+88C<]MZc-%-TiJ-M5]krNLukU>\_
%2ImS2YpDsnds\f(ZSKu5f7!7ok'aCG]=::N+LanBGn%CD?[;64;$tHL/&0<ANWQ\`L7H!I-uNrA=3XLHRj4OH=ZV8Ba\>]q5V0p&
%>?R[61p("#gjZo[;&?/r2eVDTi9G"na(M,m4p/-qIVN.(&dVIJd:t,F8SDZ/Po:p%6)KE:3dXafY*M:20>MgMoK[YMRm$cKmc`D1
%q(H6.6&Af57+4*C]0__N<r%e`#4<o3Ni]:5jj4f*X=$W`[-g0PmCcqj*:GG(+At?*!t=_l'd6cd`XJ%13es<3=SM7W&PS<fc?>/c
%3ZoG(h'R<8ZQ3OI2#/*(AfBslZnF*52idZT*2MSV9D"u6E2t:Nm]k/;,4/r+lGDK/Gc2ktQpW9A&F*DtL@?SoQXfu=F)TC2\!fjk
%f]p>RrR5%SqfG]aC("tC(Y3JM-@RbP=7;L#i5,<K)a/F[Y'oYRD#NpKmWPKlX>IA7BkOK_;e'7tK6&h'BC;or/Ce>rPU[=SX*:`o
%.SY>@@e&UT1&e7Ubl]'%X?9ObXuZHPHFDD]rERlrJ%f('EHqqmcMZ0mZa92/^$taRo@Eot`3FX"F]Y\fm9TVg@f+L&Qb'j<LtK,%
%.pHcs2d\Lm*ZE)erp-s\pj'CQ`SWdC`M6/m`Lb_PH^'r$S67u8NHY&X^WB.[\t+khFfX%fn(b-<W=mL\o<%Q5Jn]I*$`c?&0<D>(
%IB,j"m2/W35;1sXcFnDoibU.!m*"g2kPO&c>HMKXcUK:2hV<dQ$X]Qn8Rm#e.dAT*mCPoehbTcEbYIR"k$9@8e"<3"IsNJNVpJ)D
%gW^,h6Y"5/mBl2-f!@En[J\2D?$`EP-=;ueh3mO$A(k0L:Hto/ZPV(4^85tPe[;ed)4`fee)&8TIb6)GEcg-_^1m8$)t-];4B[/=
%Y.VApq]WArSZ2<KAuDKJbaS_#D&._!3o;QL2q[A"s/JhC2Cirh#-(hn^,92f?Bn9HAnGFVii?gBFEd/P;gj,n@QWH2pWiM/(EYCn
%>s>_nY-)PSSX(ar+%m[d_ep-Y]!Ync1[1IER[ED_QP[6tSK>=+XOEYk7I%6Z8T`^X=Zt4i3jingAi?)>l()!jB3O-C%b!HB)Omg8
%]@.iCN-AuWe`u&,f/#I1VCHel\!pNk2RK$oT:`&\Up1%Om:bfAbusclF]EceMegc*g!X\gC"<crQ#GIBp:%Y[fI<mpa85@!4)gO.
%lup+He(nV?EN8o'SE[lA09(ocSLO=$Wr@W3/QEG>@]*Gag\L;eHDc+>Q='[[*.CHGo_@O,RFZ)O6J_&gO%h3CY0cFb-11JTDDJoS
%rS?Vpf.V3OWL\L,BjFZ8\;U%+p%[[_aPW4WGI10CO0?tn4YSB6p"-BJ&tM?Bh!O-ka\2he3o?@lATdiEqn0APQ/:c[ea;rMn%X?*
%<Dr#VrS?:9AuEDim&PG%Vr'W(HhVt<d4+_)h&cQEI!Fh$Ann7,HV:Kb:-4a$Ko(a`cVCk7gP7`79A3Xa_kkJ3fADq'U!r*f8Z$bo
%GL*,7$Zdr:1im"6)Y;IX0s`pQ9:]NF1=lWqkPXm3G.Q>8e"$I;o0RqJrXh1sl1Ah2m2%;$Bl@i31"-H]k3#96Jo3NmoY%a_>jQQ.
%<[Y-#CB%&8\"mWIfh6Fun8`a$iD/"sr?^`nH4a#aph1]IUe]2!jj!aKVph23j._6uC<;leesgMF^MbH^db"K3]E)9Zh(HIG-4i;m
%DZ9RTgKV"(m_ksnm`CA/mH)QiBCGMK:Z9d@/nX!k!`jThWdOuDGO%];;cnYg$_%lVqRc"c8JoLscdfP;G@%#Pe%1r0c$\dtm4Eh2
%I-MU@++BM*g!=RT5@u[CXrB%.>\6/_=D4fSiR7qLi;(@(?S=3N^RMmKfZe[+mCq5$FjfBL^LmK?I2G%K\:+0WT'MT`M7-24hAj![
%T75Kt:g.JRe'F;;g4[=Fg@K5eb:AuVIo_$.e!X!]pPp;=_l%o"]DH,T][*\XE*$EFOnBCmr;NO`p67:4H"0sWVjXqG>8P<b=\iBu
%]\**>TD<SUrU!$0)e1PX(i,=]f$j9u@sW#Qj/K_mD6M0a3A8^m9QK7__T2E,20lo=I?f'Rn`S3qHIgQ7q<9c5%*+tQ`o-[HQe1]#
%c`P.s.$3;l`OEB7^StM`I,.b6?faIdRaoaO*7N-q9s\-93O/4r5=<'R,CWV6\=?[VqQPeuT@(lQ%]i`t0[a=g_hO>DSOm='j_.5/
%"23->mJEq_jp]q)D!lgf(?)1F>H]mdL?.S4R6/dQY?+#>;mkAFM`Hl9PM9d;/B*9bZr?2MQ#Zad,-I]33`As)O8!#1413AJA9J;a
%cu2(Pmmk"?lG!gi1HWPbo.mAqX(\E^nT<D4B]It.`c5Ol="dlRKq3CbDOMZ!:<`of=8trY">elEO**L-(3[jS`H2O).n4-KA34=D
%$J$J)%R8B&-#NSHHfeQ6_-JS';m[Q#4%7?O-J\@UF+#oCc0P"0-F6Y!8('F5ac@@^a4RCMIFUK/PD,CYr,VI,Uth$/LK9Z61J0],
%Isu4+^)P_!I3Wh]dUE=@r,&!>KT$lF/q2)0+Efq:>ZIitViD%L(WW]m*+-=K>$_V%<ZbtX5)Q>C]MPYiF0?WPh=Bqa26lH8:B.1g
%XSP"c[m4mi[]sI$-CV19ea86A/A>so#GaU4gfuNOR+f\mWPX?u/iF>h)mu0t<[IP9&Cn8/OnC=T]S4&c7&R(JAME&+,NSfq02MX2
%bq&.bc7e0:14u><E<J`cYJ%1k(&C1Ir1"U%bhhMKh>)DcK>Q$[!9q4'1hP=G^!L+2j&2[>-o\k)D<qqYPnu%fl1cESB:D"pIPVW@
%k#^P,"'=u:Eq&p""nS3ZbYN>0-7Vi?:NDOsI/Vb*q@*=4RE3Nb9V:5;>q\J0V8:6!\b&S<MXAJY=ZbO?N.Uj2hEa$qP/)FS/jj+)
%f_FI@.4Q2:haP<L_)cZ9U?BR?Htgh,U8QN0A&m-PrjLF8+tsjS%"U'6oVCO8a*)u>iQD/i/8d-3LZ"2`Y5Pjl>FNVIgK@cQhRq@;
%SP>,"25"KMS@S@Xj4ckuhV!C0j8P,pOKF5\=ijqDUNoge+fjKJgUElC:[Mdi.&:CH*A@[n,GPOs0M:Lmk?bsn::E!EC%5&=9[E&P
%d)(.k:l*N)GNkUj_MY(XJ<DS0\P,WPdYD`lMsKLo+,fYpUHUftV2hr<H2==]5@Z:CoYhJl&O3u^7*Z_Ia9!XIm.Po-EX)D)/846/
%n)n5K?U>)h)gh<C(fFmL0ULWklFpV\e\C<[&aX;8ffQ2+Bjj"pZEV,Nle%A*m0qF[MMdueY8`XcnB4Wh@osSTRBO<ZD2D?'<#N?_
%4,B*V;7*6_pTJa,8Y(F6\*\.pbo'Dtm7l_Lq<iloVhdqM6OHf(^**YQ(T\_S`\U[-XSc>BU?MH=.PUWu^.M^r564nK7h9<.YmrR3
%A&k^F`^L`fCb3;o4F`O(qE&>NA&DE[<qf:HSTi)0Z+*1@EfuK'5Klp4dq?2a<kBSla#KMn1'M5*)f/-BDU?DCl-2Tsoc!W0pcP)t
%HY\gTj3!A15L[Lfb']YIJt4cIru_b0V"GJ@cIq9:U;f\)2h@h/b8kEB"-&"V`Gdb7-q*hVHRRi<MOJdHJLF/rL,)"$'H0M9[ktC4
%b5jR?_"J)XE$:sn`4)]2?$'A%*Ps/d,L+TSr?6"'pti]_o"#eFj4Qegh]AME%&X;CJeL.*9WIm/@$&&fC53^*Boo4r"uS9D!'k7T
%/GHhZ):DHL3PQ7/ODjT#cYmDDM%*Wq2UXC'Ke07Kdc>oH!QLSa]?fL[Wi_l,rOoh,-5fF@FMfKD-3rhN0o+N?&60?cduUTh=?IO*
%`8H@Db!'@T=koP@mqQhHIhOTInlhqph1NC65dcfp4=#3dKJuJhCiVAO>dC_<5.l_fn/4^c@$`E<D'j+7_YXMm,]>B6iU-.&NL4p3
%9n2aKhj0nnpAm>M@jEB8S667VU#_e+d-m1,M`n_hUZ&PAr'#q&_7mX:.#;$uEU5Z=-oiI[!ae;]R>,^rIS-Wg5R0`JM:B3-I[2b&
%T0-2##4@f7=2MX+I69qU@<:hSS]R[`;Iu5TE'LlF5)Wd6hp3$&FY96RpMGAA;kE"*kf<Y_^,L:'JO_Fa47Q&63<EUUUgb_DZ"G9C
%]RZ3;2`a,9?c^5^6C/_"&#JTtU+,&0eP%fK"(qeA,/c1fK\[mm\b]R'\!kk3EW0iG&J7Hm+JH'VrmioECRRr:`h(.s;-F+"$'-KT
%ATAiod]+&<nlUo`[hC\GT0!sM:EGW#Gr-rt'k&Vh_X59iVo.nKZ$i5_Mk(Chf3$f[Np-\)Za%^gj;eSJc/kIi0!n=[>n*94$'WA`
%"h#@dbbu#"`g<Ae?mOr`+]Lq\c_s5>-s:O9DB<kI'!6MII=PBaU.*Z;&G,bEW"SJC9qoV/fA[G1A13;SX.Nrq@:Q'*Zqp'eA`R?&
%>.&a7<fm'LSP^Z$Z<sQ$d3T^>1A]ZS[?GYM[(%h0SDr$bc3\[!r[#a/P!tEA'-9)H:BJ5HGY>8dqL%</)p875*e@AtC#ah'ZVBBL
%GJ/AIb@c2k`%3b=Bk";W8/8GPZe*HaUE>Sc5:(,[3Z/g,SRL%]5u"nlAC;='1TY>`g'S$L`3f't[PQ:'/er0"5P1nY8fm#@C2@_#
%C7O0J\/-VT#104:kkAK2In0bL$ub[,INI@8(%E^G2>0025-6:#Ab=gJgRnDWYh1R_X#>i./%YSPlhAn$b$I'o/k56hlM#"p`3VF'
%42^NAR1#>L:EFO8,kJd#0*E-[Kb82"q7GVVm!q's;G&'+k5<Oe3D0uRATILD2Y-*WI+@!dnob&U?\H$eo6EDLeiF%GL"+q-HSC/:
%QY3@QpcRa3F;+0>W>8B"TBE4>3*fua"XntsDDKip\M7r%Q]afV^hSSiaoWNGZ#P*_1eQh4bhe,;--lTI:g&=Z0"U)$[`-5jTA?IE
%AO&LD1hKLtgclX2LBK<n%]<dS:'T].H!\ahjCDa<b^PisHlJi:aD!utTF+RbNX$upKj1tB[Se[b=Tcg5lX!@<[GINO/:RH#4gDA3
%rkQ1WmJIC(;IqsNFSQerPVG"L*4l%V\l**%3HY'7FGXhMBBRY'B@)nnj2n"<c_)M@D[\XJq&+;HmZ'$_d.MN"bFn1E(49^(?%)u`
%R/8dF%UFMf>r7=\PT2`\S>KrGj`j=Nb+[#)TSrW0Es%SHdb^!rlM3nf1'Tp('.>ZhV8/0:f'CoF_!Ur,l%/M<aD''l0'^R99%p_Q
%c@KGrhQL/Rh>XrXLDjtk@,opbH9!&lf6FH3YfG'*8Hru0DLO'mVm*-WqZRq^O2EG2^SNUg4tDf!i;=4ZX-=cm$KeM*XCWTh^lW#n
%NrqLGH$IJ-R?L=I6,)AG"M:3B$5/C>*gAq?HY+ZsT>`aHgGh4$^nT)5;B%<tV5^2<Fj(TF:3Pq2"rYuH#V1q:2l`blPMHEbgQW$j
%]+qSHo5ao2QgA+AU`kn:L2:MbB5r<>J]?[m=F1"(c%Y\#;!)7BRFS5H3e#C/HM_3!?s>5r6<PSQZn_AW:WVT/CjSEJc<9l#`[lI-
%;I*r"Nl*sI1#XI1\gIU.@1&W/mGt6PK<i:e)D(!$%90qHkOC\EMLcinO7+8Ws(.'m<hZ+TSXPk8"B..b:rU5rXP?K\%I/(>MIuSY
%%?,ikls%0WM0go]XC$DtT@XsF'2si,E%]eqfJ5iVBdkh-1Q,Z[)i!>W@4X!Ck1LRjQmQ!aP%h*d(]n3(m$Wj^Z__n[rGH689V@F]
%;m?.H^)>.df\rTSbJF!pWD1;L\4_7682TqcphBZQn`+77GOH#Qm#e96Gq+-R>M.TOC`j=bpl$O(]c&2%BD.@_iFHp,m(a>sf*:[s
%8u5*l$VYOjl=@uA.krPkTFj+^NZ<+O-9C]S(RWRB=.Z>sV>A3lHK9+U09gs0X#H!*R8(f<pP*bXjJKuZAdfu]:3K*+069&o;BOX4
%T&VX"Z/9oG\Tb@.m#hrKcc4F.@8B8)kN_fuO<0gK+b;N]K//1UbNpB`0ltnuQ@gQ#p`ZJ*(eKX4-D'3<RAtKH@fG8?2e2C!]Ld?Y
%Se\(+RdfrG*Z;9%1X^?AQ`DdZifSLBNX-hB?oELLV1NDpUNpAq>B'3O5"n>eoZ4s,;?u=H=jQ`]6p0sWL.]e69?t?f]bnXu;0&r2
%4hRFTM_!!J8S'n6DS1e2Cp'<[9FXE!BbKQJs-ZWQP]X$q*'_YD:*#_Unne<T8k%1T7LihH)#0:ep,fC280?$#Dce8hE)9ls#k&4$
%(*DYg%3;Y(^I"48eBu!(iPA:9rS3`=V/gKZ[nMPA*VH&#,&HJ&0%GF(*-XSOQCiZ>q/Ad[5;l\/>SmVbc%p^iSjc+4gsC<^ccV%/
%O6`Qa`gdPu>..hdI(7V?,d).J_aX-Y,8kJ5c5B8=*;a0-)0+]^LWap8^mO`P8uW\Jj2m'Lg1"4*3ge#IC1]WlMiC;l^rA->,3-7G
%OdO3cm6WOiK6Y.XB9&trCaK3/Sst^7m49"n:%en^B)dd>T0&LHA9-d$1*g>e#=^gSEa?+@/2*PZSQ@-_SnJ&HpI.3jr#)^MR:iQ,
%DpR[GENnET@tG"chDef.%AC%YYE^"#"tFG*GW+p;`Y%+S[21'@2P.AY;`i<:T3+94Zr84lHgk^3d1+EHf?Iq,.tKM5VNhm.h>^+*
%JT%%#nk*sEhr6t0$mR*kopaIK)q=*OX,TK,"g8]e<-*f888V%l(J#`%R$$*i]GSq*OJ4@T*`#8j[m/op8B#aAcUc$&Z#O<M@QWVk
%8B#b0]`pOHV%rikLdA=RRQ>PPdG.X@KTTS9a2Nf3WGk]p2JffsnPm#S#+O]r*()2\$tEd?FA8XL%I:K^A#s>ngd&Jl/?*S&F7gtD
%Ec4(>E.M)!E2Mk*WGk`7=L#(l9ROu`%+F)>T<fd:"\9&k<u9K/2QHr(U8!3FfT\N)@mqEZfN=7pgD/.FqHbrTgr"ip1HMcjEeKYN
%G$YaAH!B.;pCZd:H[CR3=5mNC`PPb&hU0C-ET7Mc)Rl*bT<&'!OLb5UB'9.lj*YY-l=mlu:VZm+s1!B^rOURLfrT[.F3h;/eB^=E
%.U-8g40R7[SW@\I2l`46RiAb`]S>A>;/JggqtQ8litThYb/l\k2=Zt"iloJ*oA2,B7EI'Om.U#@h:nn"3RXmT1LGDbdE]n=Zd)>;
%P239UR@Vd&g)6GjL)jU$h8i33qjGptcB9:61ms90][.*K2>ck&42!Y!R?7P/3LcB%VH5Q8`V]F:5%J6W3E&k+S>U:.a_kJWDJjgB
%c`h27r0Z1%MhC0:<E?$Br;69GT4ZAKgHPPHPL6A=45DZ!SnE3B5+Z1QWsT7c"/'R!l-"LUT3gqsIQ?bKqu1b8W'tLiLs*okH/PJH
%U5EsV:\V5e`iRcShf44/gUII"cjER)Jpm[_7=17])C84pD@MV&9far6n$2^Fe;uFqY$b(YJl<%hq186$+Qhr,2p%m*WAK9lGMl29
%7D3YI[g'iK(W96gRkG?)=8W]A!a`AK/s.)4^[U*h6'mQFS_rA;"puT'coiV1+_>p6$JZ_)GY$*9J=@i`_d/&4J1f*q4'FPu0RfDP
%B@A/+GKQb?@r*.<FD4Y]cG[bh9p]J/1;Ac(RkAPE_du"Iaeh`&`CG.5nRU+F7;bPAj($6//,Y-`Og=5+g6&"u9p_/==3PGC9K$2Q
%aiLuul-aV:EasHfPtdUB(oG=HN0I&'Q:mSE?A7QQe"nKPV6O[^V%"lf^PjD,/hNDBW@<gu9p_`I7Qe@ob,.g9^HdPl>;fbj0&6d\
%]G]CEBh]>`Y8f<eD@jh-P>.C09/dd/"tGB'(`OWf0'sLPn)iU8B0@o;0%PQ_MB`rW;`7ob/tM@MA'CgnN.E'd2I2XA3o4\a1lRM\
%H*#\@=o6BeZg#o"JYrh7c)+.[j;N5#?(+BS\<!gRi$R0o#%6N1<FLRK(E8T>>qhBnD?.]H?E+Erq"/21ZU^-"p#a3]Z5L]2FY]cF
%D0;h,R$$g;9;Bh]!%f,o[4q2G4N/Kf0dh%8@Sr3i1@CiqAN^PF<;om?R7#-0>qZ'gg>Rf$M1Zf`:P3PW9h:Ya607r-dm^.>LOoqP
%rCo4Z&Xh,Ij+-p",+^g-k&0g)W$9jK"n,D.TTY@Zc!B=P\b(gJL7;Ah20UMD<t7p".hj+g+.o'HdG8lp.d#4)^1AYC9/YcfG8VI@
%pdKCZ,"DiDF'"0\8&"+<-hjaqiR-]b(uB=FY+=eP%b0K`(AhSL;0q"n$NM5'QNsCr1,li^20$ck(Xrm+H^IR#Qpqlf.S?rr$RO41
%(X\ba=755UE>60s0*jTiH:M_)!fbh]O9AM)k255/>J!+tAs2sXpsRXn)r9FnZ(7YFOV>@r^=UC#J9^S#d883>_"b1Od881lObiE+
%1q#u]D[`%pl6%A1Qfkf@P>`F/;Q:.AB?7\jdomo_4>I/iBQ>l],FQCP_Te*r:TTPoNMe&Q*k.:o+2Z%l<^:J;4;Sma=AbFpGLJr,
%.R3'j1?6+#]GTr0IZ#7'na[m&;_7I?)!Y`-DCh2)aYt;+99W1H*BY(a/W4.U_LnTb03fO9q^9_&W&dC]R/&_Q3^MB,jX)_s4KYJr
%i'r2h!4OcLD:RE6s4(;HPuK/s+iYYD',_.InBNV]Yi2LR&fG^Pn8u_,3"ij[o`dfP'PG>=<tu6iDtS0i\EhIg*!7/Rh/G<i9mK+e
%'BS&72Zapf>6-&jb>!6aDn%;4bRYTYL:dH^?K67b"hAj[<U!t2295']d1^<1rCKq/T(h)=ChsqGLF>/]dJ<KKjMY6?[QU5+a0u0!
%To6SHMV8q>DTY$bYapnDPc0jHo;UU_)q[o//o5,4;kPN4/_SQ.o@q_(U@IkmH$6HR%@:]4/4@<"VGgs@9KAE1`g!$W1UHWsqf4C?
%a+d,p_FY7,SYhhB=mN@U>KEF8,`-5\[MW']\V+a1V3S/L$tiY54u8$EmN9@$'6DWiL/A@T6gHhaX"\p]CGeO84:;nAm'ekfbAl@>
%B#iSYU-QE\@aL-_d=(/"O/`!.g%_^s4:Bucq=e#+a`0Hon7ntt3m:%eRFaUq`PGHPkK#ZdrF$O'=jM_A>[^/,.3dal:"^T+",%&%
%i267H<'STOgKjWbFf0.qeD>T0RVKPshHF,Crj^DU\_r]%n9sJUZhmM4eZXq"e]BDos2_SenK#f^=;'KLg4s@>Z$a(Le>KXJR-u5=
%&)6[;f<^E`\@LrO][#!PANd.o^_g^@C%GK<J'QQNqdJo><YF8u]Ze,\1JVHMgqTDZ0.30YcKnh9YI!Y*RnHCK.oc_g7s6.&/s2UR
%ST/"ipB[4E/B><S[BK=-fA,nUEtOf[:W$sYkPf2grDuK,SN9[alYu0&U=1eHmHcq_pMX]uamO96rR@0m:;'q*X:1q:1(E\>hE?Jf
%T<^Q7hEIpZf6!J,`/b\uHR&phBmunE.%+Degsc[q"-!2K?X>B^EacN7gCC\aR.H`2<'#ZLR`*cK&U1.B3I]u'E[l;?!?fpaMk:2j
%n_8R%#>XDeW3qeZfTb><aj0q.$a%Pk;Z@2)oBVm`V)G1=HUfa#M>*&o41$Krd*3!#.M_FuD&!M^b$7!4`LqkD@7&?3ZL1TlX.G`E
%2BY=B8PL=kEuI]4di*[afZWl)=c<e=-VCF=)/;tMD`pZ6;Y!OP>6X#n$4eS)eYLuh+lhgFND550m;K&sEH/CWl!ke*c4jr=YJ@3B
%#P_\VCl^(cl"k&X+^pt7NE"9<S:A]Q@sd8qdF&E_7e_s\(HA]Qn6YE&gEV'2l-*W,ETG_:kJ&N"OY8W6C?^4L>bRM^7/\h0TTPH`
%ejfV+pDkM*9RU_8Ehf4j0[DuV`e:rD/PF=%A@uK><s=\NnFI1NZ=Aj4]dhU*^&WaHY;8eLGO4aqR?c7f_nk:EankG3GkQIoY',\7
%1)7@;DQ*:LU^i7TQ`HZ>hsisK4>s"b:jpa3L.qiaRiX&EP>4TQ;?7#.Bj>o]qTnn+BIra]j2er!6t:jed7H6]R?%c9-$GR$0K(VO
%Vt_OD:+i/mZ%;Z6%#(qglWZhgIHeV:g*,PXnqkn<ZN,pG!"O5aaabqX_5_THFS\g:J@U8W\)3hU]I^jm3ImsK-s;'hErZU)@[<SY
%<[\2,3-g!S(1>N0^g^G)RHQ&d".9$fo-.=f7<8Gp;]6ee0K,`n*5L/UA#Om>a*B,kTGuS(F"&2/nqFVY>];jl;EjV#r"!/WQ[U16
%\1cseP%3OcPV;UIKE&b\q:,Aas0J'_jkc:\[S-F:m]RVl;SMpfP'KXhf4`NU#,MO%*)u[glM'(X6RD3oHY+VVOSAV5hs*.tG=0%]
%a1J#Lhs4>h:20?IrDmuXoc)oH:q?>s'n80l./3R,M(eVZ:a=f^Q_2nuG3'S/ougFhdj'['^XoZ=]$Xa\Z@#9^hWpNCP,0nhl^'gn
%U?"&al^*+%?f;qh#2JO25G<$4)sptH8315:>Kr'NB"/Xi-f5(jd_1*,'_UAK`u==.p\L`*he9j.I\UMO'lsa!GQUs>Hi<M0h+/7P
%8GDt7fM5qikM4*:L7J!NhWpN^9!IE:Frt)="-jj!I&MDj#/6^Z/GK!pJK7q:Xa[WYNo=;/B#C]Sr?C\R)<kJBr1cfk?:Vc^00eAu
%\8pYWrGi"C:H1"AoR$Q-BsCWBPK:Gh0E7[q/Q_R)p\OQbC$\m8Om_8!0<4FM\<!i_]mfddqMj`'^&dS!/=U/=]mfcI`3F"1k4A'7
%9@Mt>>Q*P9^!FIF0E5(fB4n%M'q[e*N8\*XJT%2"bIrB#\,$PX+5[(W=nk1p0jKX)Ei\)=n)G?>M(/Dj%K3OM_d16J][\[UF#E;'
%F`MBmbKYDSia0CiA>KaHf.ULUM:'r]p\OQDlQYj'h<1.Xaa<uXRJ/c']m_uDFRMEVY5T",qW51an34PuPMtU4+aJ@C_rX"WhWd&T
%]@4+Toa?(;^""df"$a`;IMllcF;Gn6]mfdUjQQ6`n+DTH/B)F$HS=/qme%OMD]-UJ-ok).*I041qW6W"2e;Pgk.Q6>MIB2=,uqi+
%me+b)%+@raT6%2CriLY&-R6Obl^*+%?V0YO,MqaQ*tOm,>s%DdIegJL'feo:Ej&jL!D[!FD$GJ"]%8TbF%FF4I+Gu[=dqcQ1t_Ts
%n0RPUj5!<+92(UdpEo]*7G96mRdJhR&%k]6/]Neq(aJ7^$F0h:*[A0.V+nOiN?P"L%M>JdhDLi(T8,-ooUst'(u:YffMp^l.ME1s
%&#Zhhl(-"O0V<)hqX*QS<L[i"e1SL">%Zs[9mu^6]Dqk@IWjsaDJ%qTL:2GW\3BTKBu?A6f!mKogX"IdgO$L.ipF?B+7)49B4"rV
%C0c.(l_i92A\ZreYRboYT,Sm?:=cS.h`@BJ4uNr=5G)PW^SX6!cWOJe-U3(4^K\F%FkU`9c*mVA]72<$f.H0)iq)-_bd9CBj&CJU
%h:nEG\s`D0[D+ScBjiHsF7nVSnL'\sFlCC,$01m.VhJ47b\O>pZ+m!_IpKe9G+9?j3h;oBCo?TIhWmr8E%\`q`Rgk-(%C8#8o<g6
%eNE=K<SH3r>,V8"NL.oc;kX>NH[92tV(]S'SGVW=miQO2%Bb6"q]qe_lBV2<f*?6BO@@6@l1SG*3p-&;c*UHlRd847A#=N.p$'Z?
%e`g,4<e"O[f2#?><teZ&8btn&LJBr`5$E^YYP,Cn3JeF8ooC1Fg2uon?q9VFRuJL'g(d<KBJYf.(]%>\;Zj:jL5/d,ZMCm#V;=>2
%lSD2!c0m_9:7];IX3&u$hQ&T=CYc%XFar]EB`%C:o*:qj[CUGZl1Ea,Xtt%um<nc*RcWikBD$s?(K23tI_:,T0[ZRsXZs0']'K6c
%5G'TFIlcC;<U`(DpuoGL8\9msf!!e?*O;3B>&P1O&^G_SM/.9W7X``ua`e.QEEhq]SYrPr&3,#tn8i0'I_m`2[=e12]ie>Mla?St
%n^`>)GI<.,`QD,-G'@k#?_"Ye<s.9NMa$WWNSqW>oYJA\Aaf]uA!'8Ggh-&S(4G\^Go]#o,7erUra9ociHu>_14,]%+"kuo;FMX4
%>?AY9.c#'BmnUXKE(cSLGF.SA50u$7^THt-IDDKDUMX@C0-Fla"3O^!GP^F.].C7G@c<E]2Y>1h'cd\40Q62A^KfM\[(Y(fcMJ8i
%(6_p/9d.4e0XmFXV.jFWa[5Cpj&4O/0t6lQ-2-mBO1RW@.NA-4lhU4Kb?kKYqg0!s+\;mY!h42I23F63@Ee,i?\L)/[ASE4Kj/qS
%YS+=Q@J>eZRlfNBGh;9%:Xcf-?`oDGS<ZkA9@Ra)J,03"puZFgVJETG+/U6cO&ffV>AJ+A/>&77J]?:<:##h8f+cnfL:/bLj5"OD
%F]!AMca4XunXIX5(@B&c(Z4La`7R93b$o0_9OFeNIt-(Ah>Y(Wp<CV4I0Xi[S_]9BXno;pm?>$Ac7fFIYC#nreN#LHUUK[Ll.lCU
%_+;Yr+'l!l2d*9=:*.)&Vu;CBVTi/RgR!,6Ht%8VA0uLDr3YT793:$Mp)8E50*&uk?:@%a$s)C-eG+\IZs/ed8;nOfOs-srr2??`
%]N`QuM<nsXJ\6fK2h4h>0mN;N^8SGg#2D;d>d1_@Gq;s+aK)L9m\""Xi=Gjf<s+<Rh>#j?\D+NcCt2AiBNoC][5BB':(N6[i5K,1
%?tX%Wc0oU;r%Lu*0;`t^eIGGV0Xb[Ae@dd:ghM8MG,W^*=In+D@Dd\Gkb7#+55':'<^rATjum_C(RO!-6ieOb6uTLQ1iS[mTN$IO
%I"%u.mB/Ze=-_?;VmFgCO7(G<V=Uaa\"UZHbkbsaW)iEu=kT2!;@QmF82Pk1Ct'Y'kk3CF4[]lU^&!7`e1Bu^[G05qD5,S7mGd[d
%;7D.*qP.G2S_EJCeq,p\lIF5Wq:sSMTWtn#L\iei^fal_pf7TKK%&QGg0qY6H:#:i!Yc?_nG3(E0WMe6A[OLkVk5L/;nWm=<1/77
%H+j=/^JO)TNcC`jmn6Kfm'HtoqsI5/-0%Q-2'ohF)YM?H*6hXW[bnV,A#C"-g,:H0SW0tZ8iHd9k$n2)2qW#MS`GdREm5W"i("Ib
%`q=[F!Nl@VQREIZ[pIOkClF&!k!JG6l^nLf<\6]?NomK/"!SfnCWgoRKnT9?L##Cqo#@5XN^cYS70269Sq_o`Stc4^M%Bt,<qkp<
%,':&tI+/hHhO*&q?&XoMqn5&dqa;U$\s,bkkVeu/=BsE%=H!kj["2,OYDM/]fqFkuCOhG@@h"YP__o78CAf-7cOWn=<F,qj_DM$f
%B)N/a\2(N"ErHJ/NS+(+Y61gdg,)QjCEZP$8;c7:0Xur]YI2S$$8_arJ>tao$?tMo4I=q*8=0EPpq?LN`irTK5jrAY'*VG>%>_t)
%@jk>t7WG.U%9eb2X2D.BoBX*X72u$\1.`(tSjQKRiq5pG-rgWCpGDsYd6L[nD0\e'HTF%2S_VoS#c4@R2?1'oreZjB6YfFheplun
%l0nYgEX.g"$F@,.$"eHM$tq1&0q`G#=l8Sr"Y4L?Up4PacHbHj&Wm[%Z"+MU=4Tj0#+20SU9Wkf%=Qhgd#3oMBIl0$M]\533<%o7
%O"=pS7kWX$R+Y--mDrt)=%D9F94p'&Y!_Wuka5J40$`1+odHE7(RE#o[Im[4j%S?o?AA1c%IYB:-h"rtLkbX7`P"FR4@I*aLLRq2
%oFMK#++bMYBFiM[rZO<9+4<M5]RM@*k*@24UAPeUr'Ti6+3m51]RQkZ);[^pqM3G;Ya&RgNUs3a+Q%jPp9peA<PSa+k9ZO!3M%$V
%",apBZ6ck)2/:!5qn1`-M\drQUlF25>'O$;1#QZ1>p9t(@r*`F>p)&#l&rF/>p@uGDSsA^;jl1]^5A6]k"@qc[eDU@*-s7M&Lo=u
%X0#R3B^C:@S=Npq]Pspp1lYXdqo@5g)D^mC'!ianD;lPFl@.ICr->c#APW,Hp["^WS`2!STfKCeM$/?95WPdc%!Q#2TNHQAgbR^c
%ZW_BT="AW`kEfs+T'i)=GFdLSgK&U)oWhG#hp_7^elB?=Bf816s4uFE?TpV0>J9TJ\[Ht"\[UbT>Kt@b<O5@PCUJZ'Ok7qK_Fis*
%o_9o%d`R6Roul7'gR\2Fdb+DmSZP?o?HE\J1NunIQ>/2tn2P.TmaX_%WUEV6hY]RWT67SEfqXf.Ia4QN_Tr)/<jT.&[(Yu&i,aLD
%BN)5*0=LmsIAtublJK"9nXZ40?T3ET)TV:Fla91VH+?>4K:H5c:'r3n>j2K&]b_?'Y7<.S`[;``-l<WH>@)/UEUNL8KYEjVGX$I5
%Z#Ei/`!:&k9C(`j`8]P#h21ql;]tfRJ%QVZ(^o?<gsf[</_//L\UW*=M>8!qJa7)n#^uOoRh9s%Z$,'IXO0i)Q<F%W]88:jG>8ud
%jptc7Z+D,CQY2Y<9o/bqhNK;%E9es^kaiPN'nHa=^*7lI/pn5$_<T00j?[:%F%&7E"N<%RU"oE`ZDJ]1e\VRRoZQQCocW4t`4^P2
%ANkc9Hf!F\U^):oo-;u`c<_5smQ>IW[fpdeK=LaU":m][o[@&,R=Lo"YJ[fp`>*c"Vp0Q0FHttm;&^S4H=ZRgGd,*#K;C_W=$tZK
%#T`i2L7]jCloZprmHCTRH[C-q)q;o^a8lKl"O@RDJkgfq?ARUU!62H^NE7d!Y?Ne1oiKo!n&U>)T?"4,$3Z`Z@_i)N%jPn-L+T:1
%a,[[H/ZP/p;N#U7]_B.L;h$sZr4'.Y[5&o\FEXYhH]Jb%:,:u"c_lH/c5K_;ogY1Y0&A2-efah=`CWeFro-o+0+R^<i7h==[&Am)
%`i?dd^fk##9K_<in*rd<c"J4.:f3JE"0O2rp;l!l=H:)2O#?(u`BTFPdb-gG/%Jkog;\r]5MiLsD.?N]16-9g9\UCmouF^&VJV:>
%^mj[hlS+Pb-'D.(S:-3aFn%K1CH@5IcJB@\]:M-AR+tr=$r/!1V&X'j7?92>DmpAh/8S(bWL'u)S4)#APEW%_4./SVh8su66Vj\c
%ess*_M$?^NO4JLV1O8)*2Kk1kF"\5b/%#9Bjc]H!j]<H*ajq[3)(5iO@!D`RA_?bF3=<97>t&Gi^$&+2aT.40js.'3*ct3i8uIL0
%R,T?'"87(rO*mWYP)k"`Cp>jlA"bWfZQL[Kl5g0Yp_H<7e(8es!^=%`]\e&ZJqU<Jo-3b&mf3Z8RpW=I-ksI1U*stB#o"d[NZqn\
%3eE$mbs1UZ6,DngB6Y4ie3/hN?$k^b&Ybr,OEFf-W[niF0UeJ:.!XO1ec:J0c]-A+(0mN!fg*KXPhEuA!KP7]LUkB%A^kE.3OpV>
%Egs"f3XlhX2o7DY9VP]=GQ9\#(Mt@kJ].mdPq(,>m`#!q`.N(Za-miF_CR;d)N\%m&$[%29>cf6&TkKa/[-/Ulh@`ldR7U4?+b_l
%)IX<!$;X$9-?FmDb=+Pr'1I1Vd8193;^$4)-[58C',[dpLF&j&k0"ula2*B?0,G7Wm!F=eg(=-n72SZ+WqMDENAj[.@!6c5X/2t;
%IKN0#BqnEJ<Fh27;,h5YN+\.oUbQ@YN]4811V+go2N_7kiHJfW>;%DEn\tQPc.S4.1^XZ'f3PgXk1@AM.r,6/hUS1CZ`HrXrpK.q
%bHJiVHIlti210]TEm-N#]imh)FGYuC[/I4P<G]F68NNE0;5W$r$mj(pa;U[2"<hQ.k.oAQp?O%(q7YNf'Q#sk.`-i3n0fD?cpSRO
%jM>FS3"=N$Sd$a;k^4:6X1r#$5.Y(r("A)3G9fjEZ9,k5$P#3-UB_fID$8_]_g!TrcJpZ4j'bY"f7t9:(@4'e\;Z2ZK]DT-d.[>?
%/opK\,:1*3$<0a(`)gUAAUs63p\E=Tfu/'jCSV:&Qb2_MV_ibrjf:"_MR3.Gi:>ho%:d[d%ZX+E<k0#`DVEQuqr>imU-JCI<-eF?
%q_XjYL9cZmQere8Yodaq/Z,qR?:6TR74lr^?CU5o=u^f\EE5l:_fb_NeZ9`fHo[cphOLc=kfCVK84?k)gsaeZE8[r;4c.fs6/MWH
%Pp"U1HTIAhf&\tt^>5Cuo'P]-&+\j"gN/?q)Cp0ngdj[[=g.0g=ZKtf-ud*cET"JRMrR;V!c5:f-[aK]Get9l8nKIe'443!]1Ll.
%3VKgJS>g/gW\E/mM=8;URq*`cJPl@;C9Mf-g8f7MkO%:"!_Ec@qW7F?7/E"@o2'fV;c3%8%o1&l96adb5IS//TSC*47qf\meJ/"`
%Pq"7#oK^mlMg]\n,_Nuh1$&2e!hK@jq9?0H$_r:-s(Ab3Z;eXbL@af`<V1O0<2flY\Cl4T_ufZ.7e?JbFjToqfdZ/sr_J1HnC.'R
%]&An`gP-e.64Y\@ZW+B7c]o#+n=J7_42%cNbMI*Je`cp:?:N<+gOk^'Xn$M#bFV)SQfV?eNHPf.iR&X:Bq3'HcV%Ge*WA;%=)%X?
%qL8b-Y=k=C!T8IFO#QRi2h:m-[`WO3?b^C</$/<8A3*1[f0,mFph&(GCnpn>L"TJNF8YS0^mqFd]2%&/N2g<RNkeoC[gD2aY$3e)
%\#O.'6[[c9JDnCAZ\m'^WK(W'(5$E6^&Z+@1lidqIW;#bf5sC$-&p#c$mUEG6t(8hZ?ua_Xp/D1oaI3j[9]80d"g_nYVJCaDgS(k
%9F^-?oCcJ7V30sWX;sW49nTSgX6LWfj2TMiS]58C%@@O@/D$[XBoZap+`>hRZj>`Ua5uVf#WmjZA3CE#f''j?$VJ!1a)YYt(BHN[
%%$CT#G%t#/bqKI^g9sE]cfO+1b_4gZk'8Qg_hDMY*]<$[P+eaOeK(7e7RU[r(A+?u+U$O$8oRK\>0<dYL?2A"VIt0O#b]j/FK%ba
%+tlUPAV1?$R0LMsZZXNPJS\FmbFi:sNm5ga\cj@;R96\t+TslKWf@:37nUT)BnfECS!FkC\5cm["BP_`%Ebl#Rd[&hU<Ap/0NpmU
%36(Qo6!/@:^;)LM3*tDaR'#[>LRs3p`J*rb((;PtEN6`a=ua#'(3\uZR!dXaKgc4TFY23b115FY7K,T'@9<ZZ>g4OM#ol9![7lYc
%4:K]ioFT#:\XqbX9jT06,[c60!UBoKH:W*000%M:9L014c.?@JBODqkI-;W6k-J;"@&E*eD;RUp@KCIG%hXVqZ![lH5X74c)R]bo
%n%$eCfUkD]Bah<45q0K^g!UF(R1Kr'('3re_Ih<%q^-MYFQ-:`a"V#iY$fX7K+8/_Bs8E`,hlhIJojIS8#QnnTbA%Z[MaThhZ*uN
%YR%LUhiC+ZWo_kq;1[]COaP-&9HC$ibH%&`P)D*J$mAa!X6Q/96q_g8b7FXj*>.@69`snn&DboooDtib[#"dRfU>7Xp4+0:2GFiq
%*C9bAe7?+u_aAC)T+p@LO8u?C78&2^G;Wts=el&Wo#?4Q!gk3J!"dJ]=?&&'>c@,F!IuOk]nL$*fWN*lK;Yb3-;,gmH@fR-#"rU`
%FEL\J65(%V(gt@[c909i,:f*_>pLs/aOd\=-V@JQ(nam<EO1_BHlL(X&E$>C'N5cF54Z,`>XC;MF]X6I'Jb4C8FjX9>W2if$)q\U
%eI,acbuu5OA2iq3+WFT#/UUAR*<nS>n5g7"iT<fF;I=O]TuBAT4HG9dHFbOm'D_eJkWR@Y7sbGt9%UkUE.bPb@><utNRSC\fT_0&
%Nu9P2JUZR_T[XS2!<hp]U6FmL/:r`>66\pP"@0XpQ\"BL.R@pNC8MYq=h7XV@%1e;CkF^)5QE)_M7a,<;7[LNj]\OD!CQF2N?\Hk
%IR/LfS$F.HX9&ls2Za0!/km\l81Bd\[]#RDTdU&n*g@[M:LK;nJ\8:%pI^'(>t7C[MSML:J;-ES\@Uop&XGg8nWF@hU`iR\#%d$B
%$A04@Zl?k3J^E"oX3b_8:b^>$;2Y-\)$.Hf-SuQ2GEqg+=o5b*>/"FeVPCs=&H^C5)knK"7-IVnQTQal:&uA'5S<@-+D35a!sUp*
%,\?<pEsZT0Q3*JO-'j)+_f/l,Q%egTW/`M-Q\QgH$*g4a0\D7-GR+9]*K2,-4=XE7R:$7sR&n:napJ`E(r60C*F#rP"A=eB*U4O]
%mtBr080>R_:`:n'A6:c"#.bdh'aKkpUjsXHc);aY_SVE\kDBOiK)`nk"&^t,ZuqHfA-`8*S#?WB(n)YWK6ngsM4rtL)+$S9[k(12
%223!a9"n&H3Z:aS.^`tEU]f#Mj"TF$1=ZX13g4?cPmJA4*^[)(:tf<id8I2Eq'^4_igI<?L(GIV`%oqS=CbMdC)X%>VSS&rJNrUu
%0U**XC1+^u1PY*ci"W$+8]`X3cBV0i,LS_O9luGs!+@paecda(%;_)!m3mqG#pGai$5S_hD54KI2?tdi&OOiN6&gYS(mG(RgHaj'
%=u$L<#(]dY%8Z=1J]YFSdddfWf//kg_kpom4%COp9SJ&3l_(s"#+4j=*^Ong,le39Rtg5'Sfq.'8,="<4A@\ER>:mBaBK!Fddho1
%YsZ]%aUP3<:#?I)W9EOq8"uhB<!=6_PjY4S(dJ']Npb=46<H57^1FqF>?K\JYt5%AG1Tc<SW!IS"[fW;Zd?\q:=U=hV^TKiGVMN%
%R'o1&05Lr#%lj6d5Cm(FnRT7,ZkR8U\FW'\0L%K'M=_U8af'fWJrqGDa&WQ:XKEql=hu<C!:>>^p=!GI4=AnL__YI2\8+Mo"Of^o
%[5a_/\H<fi*s@s"L?Z`mf/He@5W1PPg).qrEF%N6'DWT<)a6l8OAVg++N1LHRK6kW2Yf0@7dMOr!s2UPdC:cFU8pb-==2]2l2.[r
%B_T:JFI.[q=V`,`@j?[r1=/";_@jp\@LEomT>`Ak"''d)E-rm`*>$He7H1n=L2*qFdN0[)%giD(!i-*T'k8^7.:ih>Td:`@O@9M3
%c;N?H4BAE.\]0QoK$?nTJ;UcY`*h9"M$p$dCs&Uu=M>jYfJ%>^dgTYq?9*ZPo_n#d']NMEN\\Hgk(>gQRN<s5*YO'f(>,0SHlu?i
%a`m\s.52f;_[*)@"G5d=cLiA8>%E5H)[c7'h-s&Hf*_=H05m+p*4g'Ve,sDj%qGhu.4Z7<+\rmsYhrXfYq4TPdGhNtQ,OqH_<r3'
%H<aB-a9")!6ALOJLQL<C1`Rnr-a+\29Y.E$&*=kbO3jgZ*-?D?&4!,3+FjKRg^+Qp^seV314o?F+\,p':u&Bb)KHac5O>JiN<&qM
%^_0WhXWAYl:\SE/Z:"cS[MYu?P;Wi>TrI@jbrDX1,9As;ZU,kh9YjFFX5`1t2aZtL98Jg04J5p6#ssG8&L+"SGX9[(-!<&e5LeE6
%lcGHR6b4F)7+oks0tR1BIF8(NWjg2S+KV5_5%,cd"a'.#/1scW`;lLmYb;]F*4=!5kA5c^+d$LB'(!=U9^U4e9X#JL#gYfkNbt7?
%c@dNdf85d`"Q]p:aTMe&q^+\'I?I#)1NXd:Yp*H/opDF)DFZY4X?bc(/ahM>9KRn]RN+(f_c!^K!_*HI;E=mKJE:WJ9jhkh[)qV)
%'cdR<7Nd5<@+55Z],,Qm)Pp%)[uaRP"I3M$1`&!$[[BBn6$%S^UgOtc21"JNFqB:^%M=8Kc4Xh_[#mn/J^/j$:Np<F/9WKI3_KSg
%kq<+%;$ANT,>ZUGN-6&;7in[,Ka;*!YlQuj'\*GH#bf!+qH2K;S&<cdXDN4AoaTKq!"/5BO<OFN4%T\Y)p'Fp'S;!C!H#\@8O.CM
%W`CSXj8j29#&[kJ-mRkkdu2,\W[?$Dd*lF>3)mkGJFJ$sL;%5\_h]d4B?@"G0EfQ%Xl$Q2OA"k42bbr/8dAkUoco>a3$=;\-7^,\
%%$o%grpC*4LEe3E_6fjV*Q.QF99WVr5#sFI-R.A7-QN@+fE?QA6s6O@5g_i:"!`QD^oleX8LTt[TJkc;WZX8h;^N,/"j4AM&FuL1
%#-RlE*a;cL%p^[GkjWR*-.<rNdZFOHTIleiEX[q#\K3ei9\^)u2'ifMb>Mse5q-#cn[Oo(^-rUbUMU6Jm)U"`3P:2f#E6k!j-4$5
%ED_+AL71$R)^#?!mpm9]#VC#"it07i#S``;X!,Dh"k7,np6&In@!+qH#6\PWI^CFEa_&)AV(<:u]OeBT'$q#&%Vuu96a]2+\Q2rd
%,Z_ZU!*H1`l#?`3U&-*%@hp3CpK;J^KLR)8SK<?5:4aidfT'aJN=T#lm#=-;!<h]@?mFp-'.IJp.?M.F2HoZ4KFi6l\4d5Q%/@u]
%69=?.0tGgn\Nk4i-[YuK,!]eceagYpY$dP1//XslfJ/0qkS%!-=Z+CoW"a:`%LnCelqbb0"=KkILHd0i'*oNY%Z3S,<^Gnolf"MX
%0#32];2Sr?ak<L?`Jt-r99q4b2P+#6&<*UE5X,m_*C?.g&;!N4Ac(IB<Y-5b+:(]NY`L4E'EI+:1P?Sje[^ur6@s>:4s<^U.=iL=
%lj&4AD*&q+;IQRL89`Cg;?2jYK3G6."-k#o%^T]<[p;"DK=qdk>S)03jofWpZdUeP$HkDt326L>$Y)3.&@-kl,(SRqPi[hpG5,qR
%"N,6#Z&4Dog3n?TjH,E(R9C(ED5(1[gDkjl*9lfp7u)[WWg%`?4:JJ?0#7*:f#or.'8YnX3R07"0UQrGMC"?7BBYr3W]QT84<iSm
%J?(Ci@oatEkOA#@Ar9leH_*KES,:eXMiYn8NDpO.>iYE=G#_#O'NW\)WTMPs7oM,N?Oi$OIXFeCA5P#jl9W-P7IW;SX%%-rldu[d
%riYWD`,g;A6SLC#kPL"6-T`ZVZ"<JAjUa4FBS.ohBdOo:&05^Q<uiAr^6#mqCLKBLLlO`5]Lb7f%Zomr!s,"2)">WbM,VeZ7P;e;
%2*Es.V9PX:@`n%>]dIZICMCAsV!^huhpT%HSP2P""-MR6Ym'N.=:OmH2+Gq*aBsW2+?[n:(nFs,k%X[4I%WR&]ocGaLSutE!3(T5
%K<8AeZI/JI8,;_(8!E-IdkkS8YeC`F7daCL5C%W-kug2;@/Jn-,N%F@14[2:3Ei5":#\.Y%*o1k_QGtN\;otaSd`m+1F$!UT!/eJ
%KUT?kF@aGW*.K)qW<--LZ@Nh7F<i+4"H?O@L(':J'%iE0nG/D_\8$Rh>A#u",=s^hQP[YS:Eca86C=>t]OF9(SK&eRMi9`NR*&W-
%IRJi+Xr_]J>LD!=5oESCFHs#+$\UHC;M?\/%al?5JM98Mnk?;<*Pn9)3N>="Z?Sf4_rKuqQ37KA"p!-EKR+Wi?i^<_7ue'b3h[Z%
%s/+hA80q_&mRkr=adH`P@[Olo9(X.^KAG82]?[bG^a=`eEnJ2L.tm*e?W,egc,/t\'Y=e[&n"a2K$50:2`]$&FBLMk,:3i\\-*^n
%Kh=I/dAb)s!R`oRH?BsgLV>cj1D9RgY(R7PCdL-3l;<8W&GsUi\l^XE$[fs`/a%#S*3\&s6Q<lj-@)mnQhGMsBN`9(6oUc&/-EqY
%I"ke$0XPYM@'TMcX(J`JZ=q\63S(rRp3HUVqR#'m+:gT$%P(DO,JOYYP:@RfKH$PRZEKcn/KI#]oe=0KjIS[7K7lX5.>(h@!K&JV
%WO+6W-qG#t^bpSBqkj:':QWQM01.jUI)E8bA6u\OJCl-%D3CG@K/F]iYZFsU8N:<5Y^B0gA;ETF$pnca&(=PLgiS??/.N+sURE,\
%AWWQJ0nB%`CKYa1LCn:8b9ESQ?\GB"nKAH10P!rDl*c3.Cl<?7(ICZ)j+r(3UMBm.9MZ/2F^#>p9ul@8o)U/^=6D=Co!T[ikJ]>.
%Sf$(pPNCus9dC?A#!ar$AW,RV06n1"N%dV37\ML=K\2:f.>JI=_XpCYEa,t(J]kFp'#[i_[RHj+bN)NOTkUP^GRC,Y-qNpIifV[W
%7"W6p37^HN)5GJBeh*J[:cJgLoH$L;n8<l*RYkCH82Jr^kZerL"*@bECjQf]6$=BgA.Q$.A/6>W.1i$N#&>eK+8bVF5g<rqG?IEY
%%gkZDf2`>@9_f0j`fcfrWnAG-]N@]+=2^Y%h$M#cFU+<$RK?E?Z>:SH*=UCR(jV/'.&7)!l^9XMk9(*O_1B]1f-NmRK<80SUW@V;
%nh`5,VYL]hj@DVX>ssC93=7:0F8?=:/Y8PG)'#8W;d?Y(R\hGD@9T3B=9Pstn8uq<Q*LjOYp.T^kXkN#fbl9N`*c3e9iGLo.*N#A
%9OeQf`<\6H'h*1`ANr(8C#!Y1.6IX4VaMjcJ`^u9M1d%>-^`n$+;Ejjbf-D,2a0!)9#R9jS)TWX"KA^pc0'6iAK1._)aZAcdBotM
%[SX^1As-+\3b0sZP0$?/<PI1:,q-lu$'=-n6B\)j&YeS8I<;=bYdY!KYSq8fYoTcmO"tsh-9iLlPWY2_3C_HI"_H!AeMK:@(Ed8F
%&3ZLf%s_-?=*FhdFo]r1H>=*Z?LEoh>]g<<0[o)\i`@E3\)ac?.gQ?$JUISHdnF4>4PA(u.:mH]RuK_>A1W9;p#7#F&<^gtjAA`8
%(AeJfK`ED*1l:[APlcO;=u]<:-+%0<k<6V5(=](\)+,go9LFV2]:"FOl97R;.JBum?e(pR<l6^?d^ZNQ`hi0TLB+3];sB*3W]>e[
%0NVlGl;Gm2'u]0Z6kWCY4H0WAbsL$HEWZk?`pJuTk]+,G/-*_@H^$KW!093OB.6`8DH[)rPS@Ms(D)]JDq(@(gZ[WU+c%dU^4]P8
%!&t+3X`98g-V"?G(Ic!`.-:Af`",R11R.8;qRB5Nd(#;bmE#4QK;eAI*0e3CNNIEsNK\f\&=KcgH`E[V"!C[IWb696jrH7JMQ]\I
%Su`Q%LQW[\J@K/E1UmkT^G*Ua,+]N_iNDDOiFk8r#$RNJ$4.;r#YHLG5jI#Lc^-S+KXelHU*Tem>oUQ]^84ZjqMLms=-lh%]<7%2
%?sbQQ4>/lnQ^rsq)rYbf'Rp*2A-0Tl>O#(\-rE[+N$\c?Y2Ilt!^;?ta9$UTa>hN,VEnT,&`s7[ct$u</g=->KYu=@ZY#,k$4L?u
%2f+i6C,8;Sp'Y0]q?bn?LQ]!j"[gW\)"\sa`oSud:2jX-kAq2ldhLB`9g85(R(>,^2.<__r:]nJ`K2>FK%\qf/kp[VG7OI($NMk:
%*.bW"Q=n==Mf/DCo12(Tg1H-e^"K,lO;j"RCQZh/LaOc7NaiGbS_j.%&k`Smq3k9H.C/mkbRGdMON%u(F=qEn1E%Ek`hJdt#_B'(
%L_eK]77<'#&g9FL%a7<EEOh%e)+I_h7qE5r7No@3SaXb?@?1n_04!VtnCN_;E]?:D566T#HNGo'AP`'1*[uV-:1X009,n&/MkcS-
%TIDL$0.[=KUNI^]e/+(TU,!RKPt/o]c/1EA<Wt'Z.G-82G<=.s%8.?J`"W*qPM2$DHEp9iPot7K&K86rP_)0?$!A\a#B%mm@%:nj
%W8k>S.eQj7HHVFg-j5hY\f'j:Q?6WJ^+(G?"6Y<a]%E$.N)4(^2M*MNMEXIM,(qdFJlo`R;m7FO"%-.0/D.PS&25M#_%m`HpJ?TY
%.*%P"MZn]`dD"%k,_F%_6j5uGbmL64XI<_B.C&1Dg:XqI>ZVLOa9u^=N$M<aV3#ODJ0k^ULV9kSa\Z1GR0=5TVTJfj8)=mG-u87,
%XWd%boW'+G9TEt=_NLlF#Q'WcX/7HY2ia+l$KVRjIL7$<arCS!@L1t)K453$$(R'nnFYFCS]Wek[juB#a=Y!%";LE]&C=<kJ`oc9
%[V7-Bo/,D]b7jJK1jsm6(:V5]G6lRrZC/!EUhT)uCC?;n^mg'oaqQ[2oQ%uO/iogCgVN=>"pANf*C:MRK8WESG`4;n<C\$hUR%FV
%jN,0@&8d7S5U%e&M;gs[iM`T:E$]Y"5`-`bG2tU&2U`O3^uRaq;Tj2W&KsK?Su)ol7h4u:=?u.s&p!4eH):-jg>lt,!mm5,:rcL[
%ED?cYK?;+M0nmd&Me]QD>58CK^=:_%*.WPO-_;KEd./HneF5VT84uDMRuXS>ja6!qU>/n'\D38/BN@r*]N0o4./'88<D@V)04%%%
%`Dndf)n.CN7MH+?6#+Pu,%a#!1`3+%,*Wg1Fltg6OCbKCp,#LVVO#L%Q=CO#[?5nkZO`W$RP$ra?!1%p>-anT:ofhU9kkQ/kTN#E
%2XQET:)>&ZB[d4FX*+#Njg7sh1Nj2jb3b!T%>&@D&r7Z#VU#Rf#\!B@]m!)sgYt"9T8<9jkZe?;Ik6^j[O((NEmNBq]'OC6[gaXV
%>Tn<Qa%V\-/+TPc-4K_L`.?5KB<inT[rn1c[Ld&oM3/roEtlM^&9dlrHP"[ENbsV]_g=V^7)A&04BIJ!LEi<`=Ck-*P5o_u2!2T$
%UQ>[S[:DhX[IX6*(5!t8;4ck@fY.J_)4JVT>If+j6OQX]H,IJ&.G=5^N/Bi(=8e!Qg@Q-1M>&>pcP>WSk)'lE9c:F9SWH6=n`%3p
%RH"7@cn<-X.=)-e_D>gPa9WDOd*RGm1fni<:+rLN=YDbpp/Q@*DD:X(=%8isY1-Cj#ujCZ;*Y/ujN(2>"m;=XI>o7jP3X^kZddV:
%M/W,n[Dnf.7#Q[16XOt)GFgSF4BZdXP_349aX?_<"_O3SA^=[<ZJO\BasI'A68T"@FtG_NO8/H;+J?Y2>Z#0GcS4Ho"2"9gE0X2r
%M<3r+TCAU+'W[T'I]3R_"_HnJ6s1^+%\a_5FXk9u)fhPuKWEdWQ#4ToQj,K@REe]+'5mP]@7qH6>%?6/>[Pbba9YUGM9%d''@?f9
%Ol?,9@p95icpR-U<NN'S;F4,o>n0kJFG=T3TIhZ&9/*NFC^r#ab:lX\*CKXW_N-`0dH#*G[NZ<sRWpQ7VC4Po'&SK1=fNO8B[L]I
%Z<(\<JY]!==\10#D0cPW.dB8KZ.BTPd8P.gFCj(3Xn^<^8r(7i89>%tEH&;!S<M]&i.:B'EPYg.8jPo@F-%n)V's$a"Xs\^a>;,f
%5_q$*7T:e"'AjZ?KXZ3/*:On6s.1I!1E:B`HdWCMXeh3DLmOLH^C]C_L9(bL`J\9bEI\kTPH!2h/;0q%p]=ZceC>jA^d`V`J!qT3
%T=>n9[CQBWUW+_FgFfL+Rjf7mRa*EAQ-F;E&%oO-(*<R8;],ZA*%p@+$DdsISpPo/S;>iI?c/,l(<onU;02qkC&rAj2XRKWgNQoJ
%R8PAr*4OYc_WF!`A-IoIn4a#JE819l&_&1UK88h2@cUA(1dOfBSc!b,4'5:+kTDaYPWG`5*.bVNVVk*!Ynml>T^*)b8;c@CMaJ5L
%BTcmoW<EDJpDG<(Z#`4fcp@2lILsM,)NkRG&2F'$0ic:-6?h'+EES><8T0`5`Ol4[=UoFo@=o,W1RMQT$4pV9Z?QOXgn_o;a(Yo6
%D?6ma<$&ITA$D1dK1XoN3e22f"12W:=96m]_]BbuL9F\,\2WqG?l/nN9ioWuFZSrT\Z'fbHl\6+8YhukgPMif0n!51MqCpBnUZiR
%n*E;qkAY%(`Q.ASd^@p#[+&+p\]ZHZ6!/\+h"ofqXddbRm]'.Tl]#l'fZeuk=H^2X"Zd>g+ebaLlkgsU0uPe020@LPn23_1\pK1O
%NE]#g(>#D#8,jdp9s2K]/\7bA&B(g&RCFdqOeW10dh7b^6m.?#%Yb,kdY\'+i'jQ.D;o69:C[LSbO;E/3=4fQQ&T^&pcCbu-eq-B
%@=6C"TkBh2R6uNo']^AEBsT.:[ZX/m>7UcIjBMqV>G?Tf?_i8*G*H:2;@eA0!qsd#'_-G"$:<NQ9f-\3,Y*Z%WA"^A/)6aI4$"\=
%o416bOj%E!\k2ae`j@#3?3np^@Z$oF0hL'rVCh%-'+nf$^+7ZRGQ<KPDFL/MW9^Km3jp4l?,gTjP"cQ;ijPO2r0V5h61>/\d29)t
%8M@_>>#eG,*T'iu6B7bEP3D!O`@Q08YuPS>+MU2+$PUR&$#JSi+G;^?s0A_t*sA^uU;H\ci5D@BAdUX7Z\+65RiU9h94F"L:fF.F
%1'i+KP>NS8%Y$9Gj1L`JG*8`&2T]hOk:>;B-35%E`N\GHP1=5s(r<2]c/)E(+rPYObhS@\JK^#a-X>r(!E4kPd)Ca4Q];VF.4gM>
%0dNKbL]Q[0egkpa/p'4T(WdgE`$&,G2B>/.'TR>Z%77YdJ61OQfY53"jrf'!Zt,B,,UuW<"W4?alBRMtVCM]`[4pJOM'joSI]jDO
%9Man'ngXa!52T%:QD?./dGc>$)na9p\>_X\<oAelQPWEL.]pclDoP&1ii%/I&hr7ZiDRO%[^'@J3CH4q[!f)IQCQ$E?*]&j6((5k
%:Zn$/7:Q8dI>>9m:\e73'u8hO>DO[V_W(PW;tM\&fPtm];=u?lQ!5%r`t@/6Tg1Ho"@GXdgO?@q>)(6j;[T"sqD0>-!i7K;@YHea
%!;#8'/>P]IkM_Q6#Z3eMnMj'3\s'd<QW7Bsf`RfQj06MOmr@Q`#YOd0%!(n-Smo!>NQ:<6q:5,IVPk\`3_QE(HHNL1$<_Zl59d#a
%#&W^UGc2!R4Jt"q(apZaRO2s[TKG["8#6p?5EfZOdV_BI\$&_"PU>q"ADA?](_SOK"sE$_Bl&u)4d%)?Q3^X<dr">Fr+)\#Wd7.-
%c<4>4hlY[lr8&'Y(S)\[_%R;h]W!ZI>ikHrj]rn0-4X,+PV`n0%%T5#s74^F2MtpH?XEsH=j!)jUK:9[CN@5WbBZ.J/^b3DI"_tW
%@MYU1/.n\*+Q-`lP7\P!4s3FW/L7S0hl7D^6og;"jCFQ>;G;h>j'(_J#!SVpX6ie/H[T3]ecI.>bZD't[Yfk5,udVg'V'9K.5A\Z
%.+jig9FcLVJg^O?N(O``\\4ESFI#dq1)1hkHLXr[VQDtiGa>N^klXBg9+et7%#Q;+>RlkaQ]cbMZm",\0O<-(/6IpQ9J\$Nqi[49
%iN3CUD5H4fo"G9b4;!he*>eqN`OX!'ZU)WD9Iom99e'UTI]s$d;FYULLbW)]S,,j.%"iRPPco_qoEYgEppqa_f$u>!\YtH'"O+Hg
%^e@057&gN4`)CEOCccsrT8Z[3]Ne8XPh%.aYq\+;WBlh8I+97P56hkr']8`#``NlR\;DptFI(o1lSZZgkAhc^E4Bc2&4N)=+@EF:
%Um`M]C6:;=K]nFQDY(R\]OQLTAnl+$H!Q(b_Z;`+Z"]fRTBpQ/pioI8]Ke:gQ0dt_(9G-R\j9jX]jZUb5e^%J,&EO[mA^UePIEaN
%VV$3T";W5eied@p.=B6qTdf5[0.,[F\p?:Dn'`[tQ20>F5pD96oJ$`5hEch*;8-/cdPAA=\Ji/^NuBrF6SRbH`/lnY'1D[Ubl:o&
%gTG;B,ZeGV;"me9"<-6EQ/<\W0<&Of":&PC/S"_tRSm?7GcP&U=u(0nIU]DoRBb'u,qs5VC'8\1Rld7t\MGHTj(!e]'CMoS\3F3k
%5F3lOKeHZMoFY![2QZNBDGB/:D/(4"k5a1es,nQn/WY/H/J)]4-V/"Mog>=&YTc9.FS<u/ETV0(9T]R+G\G^kZ-4jVVrZjqgrfu8
%)&@6p>M)EZPi9'Tm1t;ii$AIRgW`^Foj^?Q7]4D8+f-K%(ZDPgV\Lf/8p]<jUM-#i`FGbm?08-TD2ZF^OS*,A]]2rODSe-k2ts#P
%6H[(Thic7aPl(<j5lGB=)n]Yt]n%X$5H&9>BrMe+_0?<(grWk6l19r+ATS3S\WLY-JG/>b&2HVDCtk'>8Cm0T&$4-p-*-4ec7j'V
%DSWru'lB@^$>&pq?"^J"/&rdtV_7in&.'i5\"0,goZG&+/jWF%^##";5WCa#5S";@h[O6s/a;%GAGA"miLP_),B'+LMN2PcT;s&3
%cJn%mC,52gHffhqU5,(P7$P):P\XFEeO?@:mR;Sf2i=)^,HZ6idT!fTEDk.j2+?4u)FJ&CS_;"O!2ujs9^Q`cG=0r)aT;9?3SoMt
%K/hSH/&<cH<W,[ZCg^DnYOa1]5&JM+Q]7SA`$'*Nn@@0D1_VCNH-j?8#VXS()&1*\Z)%;lY<m%^[6h0m+]Cj!?D<A50747OiP8-!
%Ed$2<?]$J*ibnrDR@C`blFe%&oNL%-&>\Z.D(Xsd7VTc1>6#$qo9-rjh3,bWC)S+1rcT2QZa6-[%RUQ*FgRd_OGG4+3R2EN[MFKX
%eIu/hWaCrd?H>%bcR[prq(Bhtp+Z/A*,6E<=b\&$V9%u+a#XGJmI^XE,0;D1d\+'U_ZS\\!b[GSkMTXB1A.)XO%W5ackTft/3/#J
%6.-53E;IZ;[<.EqBCqh><!Y)09p`dc.\nTHdcK*mO\D5C]XO-T[<P8R-8R\!F5Z9hC6<rUa,sedQc5VfO,cPK=[9G#hPNM=\e>ch
%I5qnA0P_$1[eSfhb1A%]Z*C94dO>Z!j-8AiBsa^5>P\!_)#8F%keKXT4!SN\.!&H<OO4We(FjgZUM"F>Ch\[EZ6fVOg@qrpD^foX
%$Q1g1iOYSlA5:tZQl4rtP^O_;&X%>%3<hl:p+Dr[U4+jVM<'Vi@G-"b)?]D?2M>&+iuj0lM!gD4mb2/dqWiq@c@W3f=q*W=mWHUj
%28E3B]+o6n9K^s"kHgq\9BkXG0<d6K8X&$=Ik/QFBDPP9X.#lAJQeNjo'hL1QQ@N[C_tbDFfAYMhfagIH,=,64Y:TJ[DN`;Nk.%K
%[q0Dr'pKBr\8CW6Pq-!nYN34>gX5QsN[B2"Jt%P?b4Oj.&rTP06mLLdV)&jM;RYNo?b4u3?3kgj]4XYcL4,=^K93Zb<iV%)F@-90
%IS%d6Z&:Kk/]bKf0ns<W2oA#WG&#](`L@dP*RP$Ye\(kF"EZ*7oUk.2nD^Ef3<+98)MZlr_g$#u/2!#-/rc3DY;To`iiOqN#[&@F
%/TLI3NGDu*3?j3R1X(kiC?oZHE7+3I\h8/K;`\a#b`KAFq$AT9<i/!2l@`(;`<R$/k00"Pa/6dG]H#="A-bM`%7)P@+X2.g/5&e&
%Cf83Fd^'V,G!,tN:CdnSSP$=93FkbTm?j+j@0gRpTsN5!L9+KK%rql?@)(\e#t.7\NI(gMHgSgk+6;_[-Yrs!(<(%dOOVG$nj)br
%lbqjL'^1D:oL67=C-/C2T::]!HYDhVs3m%O_pLU2!&5dm/@AVnV=,`ZnZ`83US<W"Hq[h<D",^13IL\SZDNSYT4'cEi(,KNj-7!9
%Zs!j!Y^Dt.:G)FI4@oF)B)L]423D;CU]E11)6K]d0J9LV4'UHO8HgGlC[p>)Hc%nt'9hH2$WJrjO3jsena"PED?q'S$N[Yh+\L'7
%$k\#ddE[N\,le?Yh!U/jq]$=#L7OCL=8*h<0XqFOG4/rG2G`/*PU><d@O#CbZ<p"=SWPA?@s%(HWfEjG-H.7d&_8:#E+3PP3CH2#
%Ef.t/[!LlOf?5q6fpI!uE+d'0P4'MLUS=(M*"s<.Ro8pd$rE?gF9?bnX%Mplcf-usO=]#OeWa`7VnSWC?[#nXLD"/h*A(<g7Pp93
%!G9p1a/*S$&6W9GdO6lU.=Id*PRdmop4hc\@G(58>VCJ]^;1DkI8cKV_.#$EDBYON%$qZ_?s8:\9-sn5>^KWVA$RICEa['064b5p
%4%9sZ)i8"mE7bH%>P%W@LG!A0!?@&N8"<U0r>?@lU.**b$Cc*Nk3uGTcd\\/<YW5;digD'J":cdCU10Rbp,co@7b?J(lDY/1RDb3
%\47TLmqeOg`fJc1^`[9Wfj3IKaM+?k#YMQPc3(%-a_Obn^TH#BIC$_]N`D.UUf-!RCM$E]@9s2Mms-Jdds*-d8(M`58Z6A''c2sk
%*\9LqPb$f]'"/'ZlTt=5f8nAMK-e9Dg'I0k.g!XmP$cY'i1qZn-,3&Gjg_\YA6p%TA$WKg&O0Z5J:J#0'nhS>!bb7]"@3-E9^O3H
%47KM,cjdm3h`%@rk7C,lKOiu(@DR>O'HJ%ejE'rT'sB]QkGDR^1AJpEd&IoeB*;NoZ_oF+#.:0VB0OnI[P-[=%I$NAM-eJt\qV_c
%cS;?@q>s$:+ilc%"GT0/r)I"rBdum\/9;<ZfYL(.4h7!L@4ZgTWfbP*n]&8i$S0T3ic8la=hPQHf,+S(<@a$;!FkmUqs&tKZ+Xch
%Vg7L9!P#6M6HOB+qM+M?2KNP1X!.RE&R&[M_ff37ZDmY@AE5EQ-=.X'p)ONJK>#DAmi,4H5$&\0Y:C",OK)@2;Od)!Cm2o-W_WMA
%_d*U[S_f^)X*d[$M<mB<NJ`0uN2oiqAN6j?8n0L[jD.3CcBr);RbCVG#07%[rRM\7*CsUpOn$Xj@`2hcn`f0:!rs+AU]u&D\;%q5
%h%\sY8<GC?$bLPGV&Nf8CTVsHb`/tE$9)D`C^rge<((AS_D"&/+'KfsaeJV`9l"#>N5`7$%cQ^I6j!"_?_b^J^OMiT^6-b?Lo.U2
%-5pYc66sq/X)&h@pX1iS/,!)!1LF&c7Bp`ahEr*ST<=XE57<*0aq/)O5ep1h"PYVl8n/m5)][A5aY@1I#:;M6_#kdShq>4[M3"Sr
%%'rL.S(e^"h'.o1'$4?nh$Vge:+g(uQ>q-E[la:r*9e*6?"D6&GF:Q`FJmrEOe^:9Hs-Qi$\EBT+"A@k9WcZ'LB6(J@`OL?->91=
%P?T*Qcu3@])b8K=Y-*\V]<*R)#Q0ST#n52rS[g]Q(_'=J$Jp)&2FRu]L-U&.8V]Ee2u*=pjV*c0I-r:M32d-`VL^OS"+W+lD5<nP
%oT!?*BJsH@#Ynq;!C7Q6o,&hH`1*g@$oOi`p"qkd_VPgg8b::5Rt<t*M.'Vs$P4SlG'P]3*n3;BaL%.'KtgbcOM3%tRgh[]EcDRD
%[*`rf`6iX_+,3h<k4_hG-_$&!l6iu:E*d=o't\^h%+4]&QHI2VN[0SSI.OIY`ud$dpEV7:e>q`-C=n\;eLbdcU8Br9BD^tYW4ou?
%(,A.k(9<o)==1MJOtp%3g<Q\[Q3pm"%9YN=A2sm7jN0<89J8c1gUKcWd+h,j0'aM^OQGXmqFPaC:Y65&elm3_f'L*T(_'Z1nl7Y"
%DSp#C(;><t::$tp[\g8fQt?[9Zf]jdkPHuE8g($2q5MGW!E0[qk,jgZMh2q;*1"\+5]E/_*%ft_ibh1%=AV;8/=@[[Ua_BI+,c8f
%XjLui4Fjf4FqMK&8&<4m3=M]7?\i7H`0oQ0/O'hp8Ws>Z4\9Vr$)WH6'=sT?:hGW;e4)foqoH(oe>`+MqZN,0RAEMfG5TV5*j?NF
%nt:-e;B#h##")p'A3,SK8`(245(&<R=iK\C2T.]b!O8(:[<k^049s;1r*8?);Yk5F@,Z<2-Z#15pW1p?PlV3Aj]egtV&98u#WBTb
%F2B1O1BQN5CU6[7UBc4T-7TYg5$ga880]\8a1,C##!$.6;/d?6:,I\%l#5u+M&L<l8U>P'gYA?pX%pOq8(Ht[e.ZK*BoLSj/7nCW
%9PJ;H$`e'%&r0IY5PA?EM\8M2,=3<pTl6PCS0*em"K9KiT>3tIL9!S:inLl`&9j%S%WQ`%!2Yd+a)d59d9C8EjTre[CbdlBH(mV;
%LTR/23Cu"!"X(%l^/+>Bo*[;TTD9>775/M6cd<M,`Hc"p;?I?lj<lWTVF6lCRjdgVB^kbsef)srq&%9TA)Nbb)I)&J*X_;e7#Dd3
%2=,H%j2dW!gnqqom>?oa2.YssmRN=D2'p),0%ql37fcXa&MmsU+Wj`=5,YA9.mIS2A>LQ=;JbLM<(\?Dj/?:miP?4"3=5D&UUbSX
%E`Q]W9o%r1%C',><"qI7XZI8US%T8>!8OG%Si`:qDhQqWM?Uu_D^cBTORd$?l:&IS*<QD0+]Z66Sc?Ta8bP^Yju=+33OCUWo=.6^
%N9B8joT7h[4,oRDJI4C`LoBGZ/a-F5r(cQ.hG8N^OM!ZnTgE!.*64/;Z[bmX2HS%iBIECbqmS:OYF%0[M-/Y6FnAj1IaUc6Z21PJ
%NZih)KP^@+F'j)D/rD+JiQIN\Q%EGYlo`dYW8bW?UQ_Ph`S0!^q(81%=h.Qm=;8kIbB7lt8(^Q/Q0jPG3=$[:p/Qje`>!9i"\Xu)
%E+n4CSI-cf&T-^<Ju4sXgJi?co3t%pH"rAmHpn4c<:lb:J5+0YeW/Pk#&6\C53r2pjDcsaR<m,1okfcZSXTjRV*i9'ogO!6l]h7O
%Ma+[UJRU=7?,2Nt14/c#-an@"K=soS1n#D8o]bCH-3n!\$\(sh1+SX.FS+Pas/@*R4h;l3gWLU/Rj.KS8(Q5a6-j8telP[5;-%4^
%rP%%>h8*Q&on%]ROURX]BB2-h*cYN)go1rn@2'U7SbBWpZ*,EA1<#o2c&q)ES2@8`P84kmOgE^-C`0gh*;5,**tQ`YWGB)i*NT,L
%2Khk*RI>YOpAg.'`8b.PE[e5uFs60)(bui.o2<;l,cug)e0t[-bg&3\#l<+?5^>,qhE<K;%tBOk;i$+Sfdb0Ak$_hV>ra6XL'?>Z
%dM.Km.#]Oq2N(KE[Gd^p>G^0$aJLbV]L:"S5Ri:uCWOluM\o8Sa!@It9^FI1U6%3!P)a(!#sWg%:VDEuHKlZSEnQd`c>0\MH2'_+
%k8nS^/l2M0h;p^>'/QN==g/pu9g1hP30:!uI@H7-4LPq`gt7:W<?iYc2i<Pc<sgUWOVnA(&eI(H)>f!J]%ZLkIa*<"1:#['lh<rC
%Crh]N/6>ET-#sV$1J^c^Cl5@JRfa4Cct<)M5,MSAXXM=.Emt:5@+FP]1`_9MTeV9V>KKLI%(3[_+1QE0BlS)(p[amsj5c4Y`"`S6
%'A3Z4*4?BI1e+>"?lU&$H!Z*AUGU9Yp2VQ(dF[]8@G5%bZI.J,G9T:n*gTmu+6+(D00G];SUQPLl;l,`fpt#V3pB?".rs)LMr]0D
%7V!RFnT59/."tGKpV*/RBaYtD4)oLf,F0]2]lu!(O;,WH;]%F'f61HtjG1'(#INO1QnmO/nTub8"@K*U?kmcm;X=KO'Q"dJM/7?:
%`i&CFR1a;M[M4fpif,plGm;qbW=+PC&8G#Y:6Zc:#K*GgT8SH`'6/(IiKuGnoY[(&/]t2`U4tHTnL:?nS)e.VpL6TGSl0Oe>hp,i
%#4NP>-2;/H6EA4(adns4f-IP`L<VdDL/`k>NhKYl=lk(&kgdcFJOI-LS:D)9CRZSI"t[@1ot?9TUTr\,f2N/-esS,+V,E^h9)J<Z
%Wd_U=:;pgJ[_)pU+2C?Gi,7lUXm$buoNts9RUW9AdgBqVFep=G56>%o$%'$-=UcqF&6Mp:eBPpA":F0Vp#OeV;iqGN.1pf$,C;T)
%P8n<cBQ&7POK#>1QRqPikVtm-lHj%cKD]EflE4G;XfE%255R<EWJ2keId"gcX?o1%-URPrVHVnB7\G!ilj2kmfo%;FI[pKhU8TST
%[-^N?63">9AALOJkLMIBB13pp]cl5mo.g_7WUrnd_sJV4SQUD,i.sb_r")1EX@j=Z;,u^2f]YAr[l2LPk',$DM&8fP*qmGg96)_G
%#-F8;3(+Wr4cuT[!>U'ZOJ!Th4I(PnYJl+1bMqgP9XC8emX1$I/;1\aSu[cLS#/`$Y]:J6?Y=P7!90Ni^k!HrUuU\j*,@>.]?KCU
%R:>3gHYjStND)i[g_M(Fm"a?N2H3N`"5+chgMF<-7R?XeCU@57gDO>m"(>L&VXV/4iAIq4.XprZoEYY/2]"tT50MXB7*h.!,PgnA
%:j02?Bas<L44ieE_?O+32(;^sM$Di$H&l\CUkhe.>jA5.<HnNX'2?i5OL^5"S%=;VmROHuPGq0'B51_AdMmtA3IDBb+/:Hs!qhWj
%>G.)3mQI(p\/UeHfNec9;,9q8dcaotP%Q(\9CQ6B(F#)WZH`JJRkBbEpE1BM-r0cs&ms5*H#18-j.#Xd)CA')?EO8VadVp!oW1I'
%\c'S4:!X/r"-Q*+`TpQKG341)&A+.E,MR:Go0%fS7r?<_@@(>r]B+^GOqjC.$n7q?U-G\k06l'X-hQ25/h>_XX<\p0/r\&$$>E,a
%7Q(^Jj)#[@BpcO1McX&Yk2%nNf1:]Uoi+(b>e",Y;FD2;KHER]g*AEE!(.M'pp>sN;sJW0'l3`X`"TM)n.gc:lnVs>(#p9jDD;/3
%G%,S]cC?lJBJdW<&.'sl13ujj)%_*dD6<6b=Cs'Pp_T3=11Y&NOZf],LA8Co$4PiQd:4lY!PbO@G.jHe(h^>Tp618:`IQa/'ZpaN
%^4#_+&0QD4(Jc^bnW6jI,0GNm9XE`sJ[EX)7n"[(o]K\CM_*)q[e7PJ?,b@K%o9S.<2:Y8[W"A9a<iX1o=V+bKjhsR$ude9TgCU/
%Fe%P3"8!Epm$tI(S9K-%(,80ff63<5q7i5m:U-:_X3,D7iL3^LPY?3ZPWJonWBoX]/Z385G"R,[1pZ'?&b@crP0WX:otq\th/BVB
%Wu[]lhI_?"UYuXOPCY@uj*%<]eX"OFptV1)Mma6^/I=h)BP9Q1]7pa-Y/aQ[<kUu\P[`-<eNau-TfHdek+8_P1%bi?W9*j1Orj>F
%,rGet4=27g0:$7leuiJ$U8]ch4LE3]50T9kbSWr.'KYcbOGOni+G-,"EJSqBL_Z%)/F0r?+L3hb+X4O>)E'jTemXgr6_'rm+:SM'
%3up=r=S6^E.'CBdY2!R7jCMWF2$>pb/_-s1)<n(59,KfYYfg]!Q_AbQd:D7,OnR5qeS.K2A8/Hgj?]i&QS/mPV@=],N)+W3jmo;t
%D$@ofQ-htUP`-L0TFBlOaerr[eufdV;^!pt*tt83Ol)NHW>,of[bV*b80mO[&FmrO+q8R)k;H#^%7emMC*!_h4EoAo]jXh0hh+DJ
%QKK6ge=oW=AGagc"d2:M8o@k^:8_W%ak=EMX.M]?lDpQB<t)l&:"KPr=6^/C%I;pmF=aM?2UCa9q$@PgJY)IST%]AO?JAr4(+)f4
%`aCMb`\MjC+V-t/Y:KQj\UhT<7F#uj-cc?n.+NK@7a%Xm\L.$r[#S-Xe8h4Oh0M5$%s"RU>.u'GR%sX6]ppopes7SUcfm:L-Q7#N
%_8Ifa7U&&DluC6RC>6(I/T,"F./R>arFd)$,1r52G-gC`(G<BJ\"oc+4'\$j]J'c&gh*V/W;u60ral;b+q5/ekkfNj_X#9N:CO_P
%F.LWSiBA$k`9RjS'2;(sk(k2AW(AP0$D=UFPaU'3Uhi^K\YMe30/&qD&92(?<qCU^RGFe0;^Xt'>m2EI/)H"".oeIHlT_&-.Q\&l
%qI#gCN]-=e90-*#ZOr;:aA!bmEpB6D=<]Iu?WBCbCZa-UbWAHh",<VX91@"f,UcasSUH\9_NkIQMP/,'$@D'>U&<de0_'A/]kGLV
%WYeDo!HPblja.\=OL#-ppLK6L3klh@jmJ7_U`g//Z83R8lIt15^m6fM&R5E0PRl270Sri&^bmnfEMs)Z#fKFi.NfdbZ'FsC2K&_G
%j!"b1G='NK1^r3pfMgZW@jBgDEraM+hOXT"0ZXDb=QRhcjqRIjl\3m>&S2J,eFD4\Hh>h?;tm7qW`dePpW"-3%W(M$V$qp%J=hP1
%^QX.hY/o[u#)rgoQCksZFqWVpIpgcr>DbNsUoAMSA-`_l'3MfCR9[(2"><ArQ0bWQ8q-Fmlij/DV?H&>,Qe?"?uAu-nepZng:9Xo
%<Ka(/"JD_^el4R6aY6+/N=A6CR_8q=OLm!cTL)],c-FLGX^fP"rNiHXQ/]rQGUA!P:fB)+ef4aQ1hljN3cN^'bZ7:Z<p`FNR6K9^
%Mr2U>ZC2sen0*o[NRb/m`iLJ"k,Lt*9#J4Gn=3:E*P2kTJ7c8MO9I8#em%mblp^QT?MBsN*tP0dWl%lTcD"us/C=N4<U>n(>,7!H
%-bEm1MNU;LL[A&gH-a5a[?d'lVhtZq_MX#qbS[M2]sOq3/9,j3g81dQ]=-i$0r3"iAm"2g@/g4iQ[m4MXo.gT*YPI+<V=HJ::XB@
%",P`IR<;KlNDQjTcc)M$k9F$KA1OtN@kpm`pEkN\/cf1JeTXE-#kVVCg7`<udpO>6//W69H;)q`@8I:"^8M/q4:DBBp6/bmIldjm
%VSQj5`ao;91WHsS\\$H<,A.t?>Fe;HnqV2up>"'s_iUMONbukp`1`N?%P&:2*K!GRmb1GX0\--/1IS7A@E:`,:+p\49;m1$2CK:X
%G$:'#A`u<(>'j:)Kd>r#HTSCfNZ4js/RX9):?C+koccEL%M2WMKl(&?,sA_K#GhASM;XVQSDCr+@9IG>*rlDONu]p2Q&(/UrYT)Q
%oP2K\'#FRO>iD2lZ93N2_)5:/'a#]5i)ekL@Qh!Qh2l7$'B<,EW5R[M3#OV3-WT89(NP7L`d>\U3o%l'L&d\S71T.UYmB(WF2)F`
%ZsW(Q_^cO1^ke&Za)Irf]?J_ARiH[NqQ!uP[dPuNZ92:[``'>?WVUqFm((BTCY`&tW>XE]k.MNo7-%u]D$5EabUT$#O%\c&H+#j@
%Tq.XAf91Am%2j%p<lr6+ei?qp0WLgu[%"VBA8#9#@rnI;`G8#nhPN?_9N'l-CL9k7Bj'PZWG38/AlAPPC+?@?4i>d2e;o"r2L@Qa
%UPU]pL(''*h?]&_*M]C]ettNh[W["-O8a:65&+3o@sh(Pr_<p:HPg"fX@!+$!T'W8rnR5toU`(uD!YgT2-!e!h,Cd\4Z%!rM:J"2
%G`hKp<$;(N*NRdSIubjLL*:pE#RA_2,k(Q>/jE+_Xi[f0jf,)JkBurAMmA$AT@cV<HAXX.gP4X]85A^_RoSUH^d]gV$5ITH.Ao3`
%=fG]k/-sqmr,t[u>$fUfnK5?,HbK6TPDpQ?ak[JE.9[iC^lFJPkt?=pq-nUoP\$1]5a?`O0:H1![(q]48C[:4BVaTa?X,ZsKV=,0
%/nd0$?s)"_*j_qCk:oi44E(tK]tIHIWHGL[i^L94S.F4*<9ZtL3.^mngs'B-4(aF^r/egg,EZ^**YRbHS92&_Q8YukU6@DB*YMl2
%"1^<9D"bq&Ld(a,hoffdY:8sbH27#S%4UqC@,0p/c\P(A/j8l0kBcWQUn/t\d&!ec9sZZ6oZ#1UKO^."5\!;T[/BVpTRIYaiVP*-
%3'6.N3:!PiI'6.2'2b\gkl]@V._-?Q'bQGBq$Qq$<"9(=XUl<s@]XT-QLjt6dknjYp*@OH_.^QIH>?W(.i+FAn[Mp&0lNeDG-Ic.
%PSQ4Q0Mj.r(_?O2P7CrYIe7_5k#5l`<-7L_"=[$D0]J,=Z*[aKP>[UErfWVrE,>AReN+ciD0%cg0m^I9X._+W8Srg&'P+VCY$mWm
%OKE?R>1+E(a.sj4/\bZ`qB9H<B/0:(6[H565R!`DQlZTiXXHs=)l7p\lF%<EP0sAE_oEX['[[9^LObWFd*EY:;T--Ipb=u8i5DR/
%OcE-<`Gc7?Z<]9\4?3WXXr`eQ/MVOfjpe0.?"UT$W2HaJ"KS:8i%r!A0Guc*O]4rcEk)3Dms9qi``f].!qP5Wr\[-t05+Vng.e$c
%VNo+nTYo"Tbpn)*a&[.a1+iKQZit'R,`W5MdUYO"+Zu5mT\3ed;)4+gdkg$l@#`^obmh*4Z^u*TP24@r>J]@l-@7gd12CZ7fhS[_
%o'Y4,K"]P9.:Pa#'R6\>,oLRWi8SUg#[Q2j?Z=i1jh@UM)qrrKEZ'7%<h]_)M5<+9`@faL4&ln*&jTk]<?cuDeU*_Z<)]Re6r\A-
%LdB^^JPA@b=iC*OaD(U!.3a0h.H.*,"0%WVb",lj2)/Ikm1fW5JaM(ghTY2h5_$sgH@7[r@0Qa(,3>ml`IA:fc9RgBHVmRjaNWoV
%]82j,A5T''#ikap=^^c@9>rMAF7<M>bTnZY2M'3Tm6h#-\Cm2KA8b,'XHk,W7KMSHcs>]oq4DKZgi6J?Ntk4D)_*0NV?W&2Z+ecJ
%Ej=:a::o_kbeV.7A]Wjh4#=X1=<?iV8RO1DKE.D:5s^3mniNYV$[h,I(67p$ADq>i]GSKEUguO=olCB0!8LR%Hfn*95IU^brGm%7
%<d"r%!`Dg`)5d_u"D9MS4^,Z1r9+G*m,RgSRf$iQ1j/MVL62+V4bL'&/h)Mr<5P0(U+gMX!_hE/&P8#'FIL<cLL#W/mAd?t$^Qi>
%&`HJX>^!&j6UZlt#X8DH%fbV/BKt9G[`*hJ.OtM-TX2RaR&saX+HT;jh^ld%.DU#2#`9e\P(lY$P/8?7n)Ct7JB4OJH%t>QRPVS;
%-9:)HLf7Yg.9q87?NS:Oib)IZ8Z#:hO^djIZ,Qh_8lS1Q"m:\_CWT*V)l(c3:@SDnER*=Kf[-s'BkXC6YVXV#EhHJ]AU6YrXJd9E
%`2,&br=\d7[TVDi=k-Rc)c`VLPUf1Ek,fm\9Y8L53K'Hk3u8]`P2s"/6Z>YJ+?Q1Tm-CbLhN^(2j3@XuHk#t.^B`mc@V"'?+3Je#
%Q9QDa%^;ZD8WqK"iV#6ISk"qa@=RuXs73AmnAkRuO5L!4O2(_NDuT7`^])P4."2';^\Q\-^]+%9rCp$o^]4;R5Q1RgIeWSDs7sG.
%k+@,"ouHP$rjVpqli6TlotS0=heihGKc^$A.)>\3$u\TQ!D/eLUn,`-6R4Is#SAcrq+fqNQ,g3G4B7L$>M3G%b^'jbLFC,3/!sli
%4lt)Ks'2^T^2&sJ=%D#-j<s3=CuZ!.Ln?CXh@tdog;#)tJ:<H/j0gC[Zk2F(C2O+:'LA$fB@"6V>:,\>4,G@A'3Aljjp9l^&I$7Z
%igb&p8YQSU#kBq24bmd3Dbj&C/dF+K0]t:RW%oC"55(i_f/3aD+`RmMTfg'S_Ku)Q+_W$t7@=2/@5Xf:q-u:'dN@YWkCIY8\,$RH
%9g16;95W0PCI?aQR7tutTYibDI^TU(Tt$A-]/h-8F)4q8.oqe9VaH0d\B*&<%qK5INV.+!#*6gN%@r3/+60OFm;Qap5uB#&Zs$G<
%3llN./LDLPLL9+"]+<k*pac.'\k\BkN\A&9AIc^p**;Wk7&6eA8]4a)%h-..b>.+cmmW4m0G8Q/9"+\b]!;^;K-<1D`08hnbTk%p
%J8;YS_rP*K:1g#$m=PQCF6-Rl56R%r&">1DEElbrGLE8t$3X84o>BMPhbtHsLg%U>EXj<P!.3[C:+jW:T,,#T%u^0%U*OhGQ0/4#
%LYj-alW+.=;4%$D.K_]]&O1P@lJ85#Z=c\nqKnhhpSt.&p,s&%J<2io4H`*m"@;&&_3bi"4XhBcd25t3[(Cti3E+Hh4PaX!W'\])
%"iC`(s4?khYCX=hWX'0tk%j/Xpd,1Q;2'l&%-<S$'QLd9BGk0*6cjH`[BgFc=/.oOdu#;?U(&)'hsh]'19`U%.(tKk?d_$)%G7j4
%Wq^)J-r]]-Fjn,kP`!J6FQZ7W8Lgo;&WIVOUO]_npD%=+A^2.DfqcT\THL2!L\QC])%'o2'PU3EE8*"$Ggh\4RL?7_4SDB]i32Aj
%DQ_>$Ymu>eejnE4iq?:?Zp!aUejh^P'`F+-:G9oM$pd9NeT6Od+XX@jZhgOTp.2\/8dp^n<X@!A`d&-_dImqQ:s"Nha-s1(;@qQq
%qWFq[E07/1Y`VNnQnoauR+3L]8pVPsVkm"&=\-/+3ObZA2&7^;VKKW0\ZM(XbBV"&`tW1MhNjaV&?V4#la%>k(Z=JF=B_Mm<:[!W
%3L!O`C_g%A5k/FL5>-,]%ape*NWUX*7qLa4G&122O]o2rJ@*s[Ph`ZkdMGre)Bd^)RJIs@nS.OJ]!n]B#rj^b#04p,/H-6IlR0uD
%fO]r53>B9[iDt%Q2"HCj^iT@PXrErlj:>]):-M=i-!O5H(bN=n&H<9hn(XJm^&cg.?/!nc9HC:<*LSs50b,th.bh*(OK!l(SKLi9
%[muOZj-M$D`t>;'`+200G.%l9[?L:^+]H#79mNe`<i?-6A?$eVUIV0c9JX#>h_*""m^J`0;`fV_Jl(jY+:Ibg'%#3W8l_"c4Bh.6
%!i:eB)?eb)WB/,q+/J2s`NK^`W^q\Y:SA[]:<R$1EtG>R=0IBQ7D3f`2B.pgUIZD!=[+*1O6*sJ8.CAClF?So,?'RM[cSu:%9ZQ(
%%[o$m,1WpRUIb&T*f2oprpu5M$H<>a'mrH2$SFE'r;(fT*%e<`U0<A5,?67X(PEo-],TTnUYL0V!`apU*s/iir<Io-paq(_%EK-[
%L/A>&JSIs)[\H+T/6<DeWlX"JK^6G_6W'iRf+3GdIp$Y6AL$_&"bDOVqsbB!-:5B:+bK/F*SK^,]*ZjgWdinN:C#oNJik&aLlV&u
%1ck4"/@Zp#hb1[JNBEbLYn$>HP,1(Xe&e]X+AXBFI\Jrq/.3EXW@AD`Grch*q%0KgR4pq":.FdYJL\gJLHr7VK'kdAaao$`6(e]+
%DBAp;?kTCfe/&8QTZ?ID:a\E/6(f,hRbSqsQ.)r66(f\io?h<3qG:*<9plNC3Z0Rd"R7fS5`$+r]&t2,e;/*NjI$MkF]/-#7-_,f
%gP;4Y=lLsQ<'ti>16pm)FH%9.)A($?8NY<eVG?8,#+93sIgFS\\58_i)[Sk(N:TTj8Rd7+<1WbY+fRM:/e1d%Opa->e]FWX+B9f2
%(P9GmbU\!qe]AAact^ol&B(T&QEI,b2<OQ-:fCNL4:'IF*1;*rM:<,TPn^3M`UTZn*@*3I16)N!K<R1-pn4tiKTu%D"<u)5;('??
%6_[?<dQW*h)4*X`cKegs,5$?>,?#sqj[#b=QG&;6oe\]bodmTt;r:6_5D`(9i7eN\a</?hT,"S)efGfg-7u:X@/94!(GW!cpJT\i
%2'ff`6Sr:1`etUSGWn(B_8^l?(P;EK)E\W;:lFB;1@2a63=s$R_D^@4[_?"'U%,!0KGY(7oi#U<a?Ol$=e@4^JSEB[aD#UW!PF;[
%//ZKG;N`YVh?Fr-gbWXMOj5G/HkhM;h8bo+A*p`?M'&c!d4F[rT<2^Of+I;`7;mfe-";TK0?*0H]#j!qjBN%olIt@Q;a$lA]H-"u
%.0CqFV.Jn?5"c.qJ'MS?@m/Sj2P.^M"!-YRIgblmr/MOEBh0<A/X3Vg,.7;hN[:&F@o(=p_!eh9U@'f`,>7nl]9jat9>[)!;.`@]
%qEI@\<')BS:Su(ejhWkLL7.mRF/OIu`iAuDj0AkI/_J1,mV4iCfRW2O-9?&i"Gp2K/fj(Go\\&AA(]L!_]!(2jm`eYe+.Fk)0fj;
%:$+1\$qK)(F4SEPYFU@M5,-),4$S1[A7Mc:B[pA.3'B-R\imKPZ$H!7Ct7"9c^mt7q&l1uR:b:8Ar(4'#H9n$FDjVOWE-F?hZ25G
%^As&Agba3.d.HT)8Ysu5&Soomoeg#(Yqs7'<Gjlr`o>ejjX*_Es(_+)+Gf9AF&^t?@,;K)h;^%g.B\O64@o7eHAt#le:1t%=?%m9
%oNgKBBrj]C?",^5X8,UlfW'tl&f]@5?(.Y9JV^_Q'p$cqf@bk=OIs8QH46dips.JJj\MHj(&5$fa7TMJ_N%PiNKuXH:I!%)gL16N
%]\aaG3Ea[laHBs"BaFMo$esj3l'57[/3'8io-pg;L882cmcO.[ZeBm&rKaTU!;O\b[JF_#2^>-7!0BC!pb;Z8a3>_8p]8#cmbb"'
%YGn[m98X7Jg:o$+%"WqlZF/nnhR@8&V)1eSd`^;=,^UBmOD;:l4(FUc-iAUlllg$EEF2N&$iu&ScXn<Z>JZE9q\%1=O))ZGH(p/n
%6pAfEglUh"3'P/[(rnh/Nice]PlnMhleWR5P0`K#A>aX`U\h/KXNf#uApA@#fMYiIK02%33c?giQLEkYPPPEj>nut)M#Jhi5&-Xi
%_>$iF-bidYm7E@c=NksSocQ?JDl7Sd7,^)\4*9!,akHCuolcLq.B'`)K=?ke4$@sCW415]'g]O(pY_3\CT0kB21Wg*].9nah-.*r
%G5[:Ca7m4/c"(X,4HnoeDt,`Af*U_Z7'm1GM0QmGCTN0]Tl3]W&9o2_aqT92\jrFfKLuW5_]9/?o@XIM\W<=YD=cTP.6K;kb3qF_
%+Ir=LH$CmbjHM(@im(CmleOBi#)+D;4T?I?GBMGZZK,%_fd=i.Jng3Yog'JFF+-]BC-,"7*)p,mM^IbgCUTQ"->0#/gW9MJ6*m+'
%aqZbf_&=0BH;hkleO[$S.Ybj-X>F/3'aU8qTP5ce[_p@b6+)[hFkbmK=fllH?J0N`om=TSZ`*K'i^ZiaCK,2:*uWg`4"2Se_b\Fe
%6k#LpQ#r*$19@k!.#,cg*9=MS[-B1)B2;(LIB<J-B2rWA\>@Oc&o/Q2mBu=SP8t'VH&$X;oPd*F+_nLHr=0Yq:):=SYo&6Sj6R)3
%Gn1]pdV]:_i<8OkGgO6'DheR/#5*/Ld35Htj-LFminEd=1YC)mNB>]Y^aS+GPI)Cbm;\>[ZXPWd/t=<*f'^]J+FcjWD?h\I#N^,j
%)tKqMHL>0?DQTi9:b>Q6o6GWmQTF*t(16Li6'PApSDM;0IC*4Jj@@!%QKD+u(p)oqD@@n).#d,TX7s_aPaKDG_)_G?DIY23[tAgB
%Jp'6"5o@=gO.k_![i&a@59I3$+53j1:<Lm`kEQpH916q0X1&V@2RQ`&W2/?@N-bgRNBtCg1$Ja\'\m\FKL`kL*_Uhoge$q8T]&Ys
%NBA,^cA@u3j&CGmT]&(rEr[6dO_/$VmGJnc++d#!SS*N!F4U2FFnO=GdM'B$`cL'9D^Y?"+8Y@M`Fi:Mo1n.27TchA;gdA5ED@;B
%Gs$>qQ!4$JS3RVXG2B#2WOL@42F5<0.\_D2p!sso_M\@Z-p>FClb4NG>0P_9WM&'b'<X2b^[7.<8%fXI`^@GqT_T#Mm;d9sd;Bcb
%:`nCC11Fd]E:%i+P=sW3=QtH]]3SqNolcNMiuTRPNW;:^N"nFA=7j(P5FWW#0ZDBca]^g^2[e#f_fkn\mi8dU@Ii9BC:P#B>q8`(
%4aO\cU*&eN>9gLIC[>\0i-p1RhI=?MBXOoqh89H*R'7B6Dm=Uocu0`l"n+9".YuE=PRP-%RHd.ZZ7O9=@`:?m14^JUG;JbMBXjO#
%NZK*VBI++3PHd#Z\=:=)%i*^],>>ZDW8`[9.B'b7Bo*?8fD+9H=-N1*8<M\98/52gJ.EB==\+fI72:#lN6tLB76($<E?dpf=+rEH
%9WaChi$tm#0!:'^ip-='\jt8[MS!!(.(4-mTetQ$dkWP=i?ho=877's/2kj?^KZkY2%6U%IsNGBaLLgnYl#1BXjVIG;9EHVKHg6b
%Q$lJs,'cE$-NNqb%N"1BU3^T3!W..HgH45\1P_?X+%!:Nbi0Q3oM=r@m3:"b:iFsFY*"%B4;TQI[u63Q&,"KdeNKAPoioTJGFooK
%gI9_:ORS/ba:J5mOk088$UNaXa'lE3B5G,1X$R[i_4;j[#n$)Gn]4)6N>NC8l`!(TbK3`C`rWnFrpVn_<<aU/\]C?T%e(2W@pHoW
%-dMKD!kH@HUUkJo5D5>4MA1gg=&sROc""4U6\t%LY2CpnG<60"!i&oFDiLuMK^YSS:(.ZJNU^2\a7loFq](i'^+ftY5?eTkhNfr(
%m`TbWpOW"7=0CSN_7lr<Y<eX`Uk*i*Zc;aJ'WLBOlscE3ct8W"E#``G:)gsD\Me5j#E)KLh:Do]D>&ONiuIa@_^k2[pg'As,Hj>]
%fl`YA4NHbjTWZWo%sg;ED&>?UG7<`=3P%Ph4Z;c1TRH"l+O(_C=cJn>2'/gGf]C8'51r).\*91T39dPCBK*I1K0j?6r=<u:43d@m
%U<Zq*o/rW@XArP5,O2Uie<?()[^AMh8q+4e4Se%Z]rZ695l:saM?P8\Hg475IF5ur=27@ZH]W9kbT?seqN'g(T_A)tR)\hb7e+2T
%J5^8FM(/Ed)SeFtr!HcD-mX%fr-2"DB`8-Q5mK+%Ta2Sk!hb<LI5DhpeM-&u4cnWd1m5moi\\&\jrEiOSqC@B8X_(JeL7>%UH2i6
%l<!WBEf;EAp1T`H3-I>TWB>XS9"`K&AM.I5;F,_#&]CUO6jPSVaJdG>_ML%^o8)%q30>?PO'b8D]j>mP`%QM'6E<)<G)S76,^XL;
%;C6ssq-6E+n[3NO:RR.Y<pn]U46nu?!UK(Qn?I#3S2\a68Aa);M$2U8ll%X>+_@:6H8o+;GaQgc#Ohrj@OnH%2QD4^,$jbj>Y2BY
%Z"N<AY\/80&lJ\e+<':_;<2a,7SUa])70T3<ZbFGnY)_?U=R-C:_N'HC:sR,5@sf\,..$b8*a#Pq]Jf:1kIcD0K0ftRC,#lDqeIK
%%mg0ja/\S2F_:8N&C`^N,Z%=<bD2b9Ug==boH7ci#NQ0UJ/por0Q!D;E.d7Z:'-aiC)b`K#jO5<,H*CiO<0!7hb\NSL@!k#/j,5@
%q%V?SQRHnL%6UY_JiY*n-YZH(4(:5-P_k<CW94cBR='!?^1NPs"<!^o\g*Y`i&iP+9jHM8T#rV]rU8_B4@Z0+M"ocu2Yu`FaQGg6
%c?G`"43scicIq2olA5erpCNgL6oBHe$M"eZWXKk8ouWL0U,oo/.]fG(phDn3&_-nDU,l[pKiclfcRu.;.!n@)B&0R3Wj@%RNi:6P
%q[T@SEp$rn#NkHmL1ld')`A%=I"Z]\Z:eUA;NHW,Zcq,.='"3YEQ"UMg'U[`)WW,@+frO*4S(5>4YM3fmIdWE(4GE1"s)TngSre;
%X'OW_h"HEQn9Po*qW^/'rg]pb>lE,BlUo%@LU=30NXNU-?)9U>>.F`*>2*6u3M+t:+KPr$Hj*r\RRdrt>s.-9/CT6AV&YRAX93X!
%FhkA4,/PpD@sH/]iXmP.<hGKr=cFV%mprh/'j$XM2G[1pe3LpFm8e^^9(R?B_'Ps&,$@r0lgKWp'0aH4/0mApD1(bcrj!>-?1f=n
%/O$q_'@k'M'VX'%KODHCmTCgukH$"'NeXoAY#YB^GEV^um39It.&?%@Zh+=AHqNZ:dX8aQ2.C_1a+W\LFWnXjOOWA]S4HNo(?'O0
%l9`M)a"k5^0=?EP8KG#[W<7=0[udftPe[kVFh(7G8SWSk:Q)-H2HH^G:/VlD=:2[L==dA*i$II1\tgr+@-f_]!K\#G&TLrs55>f@
%j^,bL'as=q5@eE;Z'4&.A3ie/)K4^n]X"O7<G6L*r9:/+(2`iS8iHB5/*RG8VioUm8KBPRN;@Y[Ih\l3$:4X"JWeuqronQNZ.o+!
%OX><3ImgBbp@RYaA+EVW8mj?>g((p+a,11Z'G/?$I`eP&kI)jH.e`KKOXXN6`AF`)58gLV[FXWGQ1tOg$Z?S1]g6)rEHm,1H:[!(
%?C6O#:TM\I?g&p]rWX/HDt&4WHim:hRh@\:X7at9raCTKjZuj_BqNBDb5p=r-ljF.TUoJYb)kMQ'#K4*^/o-i,/1=WK:H:1fGW-%
%l&>K;X-'([.kfA(_&?4T-,R+qF2>]L,%`:sjD;NUIYL"WI?4>6>52[?D*QFK`Pd%XCE`D\_P<8B]d&\u-]J^A>I<VZAo1[gcVHRl
%*C!>3S_0qcd-^Pe8GKFiBggh**VK:g]5q;5f0D+^n)\?d_CUIpI/:WD3G=9A8i]Dk$*(H%_7/J2?H?Qu)Phu!NOgOADb"+*YkU4>
%-8)0(]mVZc\"?7,5<#X5rSPBeqNq6:+91hk^\`eiJ,\&LrE%mks3$K'p%Nt6NA[O4r-uhhTV%j`pcN/'OU1b;;k&6G4&OagG\WbI
%c"Pik;:Z#@GA!X.F0EKWkgpjhV,=pS1=H2r':!uOFVG7mau&Le.q70=>'A!%L`rRTH'tV6AN!\2<Ra2b^b(9r+cf*#A<-UJJ04[f
%jZl#,?U#DUjR5NE.p3#4(UFs_fD#(5M6S2F)82;`fO`jc3tOn()f]D^*s]eH:D)$BIf3fI5'hIa^gT@Nk_0a\^HSpY.s#0"([.C6
%K0^cD'AR$tlZfj1=kqW,Vh<q%pmeSdaVYN-2lN[,<"lh=`F34dBb"S9UO^W_1P!7.JN2n7`5$)/3\&GQIX]NRQf39S>Ks_0Z_N/C
%T*q"jjZVFN^ONk7":faGU,]m>'us>):TbD>W(L*?G"IT7cM\HtPpKj*,;35A4#-s3hl\pc2BUrR_bgBRMW=U*<ubT6MW6csqaCBt
%U0J\qM7V^A9U(Iq4&IVjmmLH$Hme3:it!C5s$7W+?ZJFP+"W6.Lf'*TC:Zl+Ms3PKYUbbdf*2sADQE35-r3V>EJ](I+HesJPq);i
%Y=QC[(!.&_-p;KfV!WG[+Ht+jgfA'(Vl,'T<5.!"b9+ahDp['&-p)H<njOrrXf&J!W5[E4;]m<#W]r*]SP7\0Vgu9B^0(@gJgcZL
%S#\]j0fDSk6*)4;IRJH$&JpN@UDQ-W*Dq040*l*)gUs,[qFja/8*'SS^bdP0l&P]?qjB_KQe26[P`7l5V6dssg;<7^%gZ/%5Z"F(
%%sh9F<L+Qu)\2Z3YG[Nq!1&PV!NRWcPoJsBRrSJ7S7m?<JQZ>NThjbmelTOo=fn,+H8j=U[fNiF/[EdnAWKt$^HGS!=27;P=Pt_H
%nkuqq$g<;KUY"&kr:QN1]g_9=W,@NTRk.Fkc#std@<!m'P$Mm^d!K]fQ9aYK!D<&a/:?BspFlOQI$+,012Cc3/VcOZ)6t`)3G-a^
%g5X,*^+'+`0?=pC"`>(!*@tKVrCW%AB/a\#L1Kh\X7,d-G[HF<X/1U^PXLuMirjF<%TkO4c]guqLg\X9!X@B15VMj-K)>446;JU1
%>N+`NI)cLnT!8b"1!)J3$=s5E58Gp^l#_$%rVknp$>c)FW^]'@1O]J.aS5@^?XTGecS0kBm?@P+(ZB):=h3:s!pp4E'JJ?4fnpSC
%b9G7A80d_d^%K4#2ZBQQg@'6Ss$"E]f_sK!Z,TsBL2CfhRsm.27d*$=iJRF;(.Y)h5D)"6@M,n.oPW-_)-"_`frsg\&fG*DaERP)
%`SkZFAS,_m@c`WlaAPn)-X]ED]<1q:@B=4,$es>FdWXrKkl#/l=ksXRJOD@NX.!hR,sMHC<6-L]nS/X,<j!EnJ0N?(aL<fE0f,C[
%<Wos/p9+7-VtYi=(g_W=^tp\Ep/&Q7pKlG:5:*'1pG!X5N9akP"$pjITCfV,]mlE=DkG5i9jReXMg_t[P2F\#[)&9R?9kOQaZ_(f
%Sp)]R2$<FIPpc8@Z(`^uhL!q>nO[@%#][?KpMXD&@OsXI[_;!1WmY]18-Gon::?n;X9!T*PJEDt@l"'Jfd_^7m2^>F`*M?^qLI68
%2Bsmm'E!i96QkZ>BE(&pPUH$FO>Ff2lhq1igZMdpnJpo_bBXcM@ArVjgR=+))XU]#6683Sf\;`K_tQb&$Ffa?CZsM#lfq3alp3j*
%UZn+W?%njUH[B5#4%)b&/>$?oDIkd"%X2)?YkYhKd-AIeK0pX=a^2j@1":WS@Oba8CI81q8m6P?1QL-`gpBYRVjGu;nniRs$DEXh
%77M0q?<O]/p126lr0k+*A+G*:\3IX^AUm8slN/SU1"'tQ)9s#&[t(T?jFt)4k\#tpTN+7V>#@n=GM\jT+d5kfn?pD929e;tf%95Q
%?C2Rh)^DZ!L_(fX<"7F(R"RbKQFPpPA%n-Iacl%1P.+AXaOW5OmK_^smAX5hX2,J!H31_T"3JPlANtCC`f(t\A`b68">_@G0j*X(
%_t4o:0TF$!=(&L%UYVMK&`.6N%WP^<6sIt(.3ead(VA]t.>3h5NbSFk2Kmt,@N%i.*4.NUif#VdSOsW2pLsaSkXS,D3NmP/0`5hY
%ant7g&-(P*_CGd`,>j<V0NtdneE:I"#/jC\T4p>4b3:>tkFE(u`dbGfB@tn[oS"IiBj"<B4QHi<_!2PD"U$L<8!hU]N#Y9P&@rLr
%b]-ii^okY;St:g>(bGZ-M&qPVg*&b*CgJ`dO>ba,oJj8FSkh8%UiX`km,rJjS!VA-]6V?</2SP]B18!LEV"?j86:pR)o8N/eJh_p
%VYoCZ@A_kf9;(b!1(?*tr@u\'q$*cPE;MeaisVGjmihK5NNAB9J==;=_bd_,cd!sMiWHMPU@8hMfBr=ZB[?4;`]i6H-XHYGb#g?S
%U96IG<S<1P*\0!Vk@:r9<Of_l'%=(c4paHC2+dW>EF2hA85BZb"d1"BXk[rkr[sX$"oa"h0M/#Vk0Vt2Q(L?T#/rh(%O4nER)4`\
%+jW`.CbtLmj;dZKFuCg6.[qeZ"(<O=(qgJh^biau3l<j5Yu:368sh:BTr^Qa#J%&5Na:VLC\`$HB0B8edX!"X:gc`_$3F$*>9[Jl
%-0:.D4=WTVF-V"f6kji-Qopiko.8UCP?oVb%>ikp*5Yeqh@p]D&.4qUkipkb2a,t`4XCV2$GVpt+R+j-OAt8]/cVWUkPHR;p8p:^
%M6e9N9%)rYS]NjOCRk%X*!5<@,d2&$5%!jh[e#V5]dEE^&Df(6Dd$8N'koRl,L6plWRDEPpJc[$Nhs1K24#U]@^G(S=)Vn&cE5BT
%g(Z3RV#DE^Nl2b5V(FQ2#``gVkEU6k]*qJ_p@ZqEBXND9d*-sG.]dS\Nb8mN.F*aEigM4/4<6N0_+f'(pui#6T(,[Fk9l[]]J<6[
%0qbW5>f)-1b:Abj-^;&;M.9hM;S*XJ`:-&SLr^1)^?rFXrd6_O,#qXJECb>/%lftAbjID1o\EG+i=+X9hjhTf_JfYtc)+%fFnE38
%K]o?f.E>KR(1LZI2H$a%LYr"&aV_6#RN*eIm:RQG$DdO[!/^6Y4+NsUVYRV'\h4h`k)k:%akQ$:M3.8qKVOi,*.s"LMH,cK7Cf?p
%QYoTZr#al&_u8e.=8BFTL-NMM;#]5%<AGdgeIW_026)`"Z,64F3[TZ#;S3,M_9'VApiI2]f.eooL;/1G.a[@?%j"RI#o6hq?lI)Z
%RNuOIgI^Pr)^-^D&XM:R-08Z_7fi,R3RAdn3s?FMJna`S2KiFU@N%aV[Ylrk.T3qK5)f_s6_hYcim:Ofc5RcT%"CeirZ(LFru4dZ
%SI9-Ck-O;l.A8GBHhVe4Xn8<P<Mihn>=I.HT@?segQqdFjUZ=1D:gS?([PieNVcRfI"s7USfhSih_=oe#KWi)W;U+'jL-,0G%t$[
%]Bh@Qo^g<Q5`:U_RFkqKKh;+biCb/l0gkUCR'%U)@:>H4G(.8@A93a*W#i8dL2(/Sp!G79[/K7R+CV>V$ffBoA=m@?X9Ui%?qO?)
%,I8CP=Gl@'eHC.MZ&pb+oGK^$8.\&l]>F],jiB[&JoEa&q1[dm%*g94hr_dP45E?!<TA'5H9+S6lbUHJWo`KspK2':W_RS;S<0f^
%G(/tO^L:B(FUN,g@VPcmp12eR?,@Gm_#sa&=rbH!JdLIFrg)]O,(7o8`SkJ**LE&2g#^V]3Tn`Qko^MCN3G"=7O.]k=;^A?c7`/[
%?ot,[Bog;:ZWCErXg3"rSXp<(`d4jC/k]i*[l,lT`d4j&#[ie,/'aNM7<<t(CGrnga6[#p6#L[K0+t@L#J9$%d"C%:LOuYUTb+JZ
%7$]N[mei&QTT-\Ld&MB"et=-ApV0<)FIJJ2T[c%:&^S<2hGgn%<Z?/\d3QFR"11aND.ci_p'.U\*QjsA<m>DP\!HW$Id>UH`roB&
%T"O:^,dE=HrX2HC#C?QmZZ,GD"OA?/S/PIj=kU-Hcb])e.i3Y%pW?>Gp'.U\2oqWXVF^.-qhJTgYdPbg=(K^1G"2IU@`;dnhh5!`
%OEtK)<iV%/jfLdgE(67l;DJ/_NgrOHPcR1Z)V;/DD`0$YE1=_YpE7uMKittg6nGiq:3P-N,/a03C]eGY_jbr"UQn11Q\$'!YHuTt
%?A6VaQ&*EuWYa9m_C;t25?H):>()6(^.B@eU0?A?#**0t?)gF1.OG,NQZlQn*ZhCBs*4)M'XRf=eUp`rEtha'@AKGF:65-(a5[d:
%gOs]G9%ClDok2is[F$XDburf6ZbeHr0r?GMATc[a`]7'a-2$U/LnEpGW)NX9fHbuXM1!fMi,`HUXWbk'@f\a<<,3t^2`,ZjHI0An
%=Kue:XCBrjd?g^GS5;HBMd!22.oQHE-HbR0]iT'P5m35L#J-qSDAM_DaX;rSNu(\;=muI^%Z@ekKj],+G4VsI7U.aJ7U0V3$'cP(
%>.s'$h:QS<eP#-[c]1%ni:1m0K8O0%$hoV7p/*Ef\!o4XgaOq6^NuCrS)GFNo%PP`q^.0JoAmiuXTShQ^tr>(NUJ[B)e>KnG@WI6
%g8mK9E"E(WENlcGqE0$mW;N;d7]NG%F@Yc@(^qBF?4/"9`1+H\<.]?CJON*UY<bDlX/JQIGqIR5L;9&V%W2[hmSTJ$]TumeADU9"
%h6r<9%%>`n^aqA?j4&KUPko-$TQm)$S#YsXU:3^&;"(Wa)W"*\=CVkaf(+0`Hb'HW!"h[W3G>Y\)mU;'.<^*O@P/^fSr5'"*q<9d
%I^m&oJ]krn"86o%R3#/<Ur9eA;]`X_#Yp'XD&UD3l.2#I9\25FJsQ$QYUWNd1_j][0"o&0(qsh\9r@C*am"*Fk<([l<d_]IhNiHL
%"'[S\6;nj/rZQQ'en6QTruN;;jDHDO19Zn[oCVZ]gEebW_^HpU5YA'..UcXWH29KPS?,/V(R,:dT#Mia9<VXSr,!pHI6Y^Cm+Wod
%]fgkagd,d?IO1I&PC<n<&G:*XOYbf:`n$D3.(TcJ0q/hOqEe6&Pj',ZUYpVpb#bt9#ejeX`=4BLRH<0]Z:l;9*S]ARq)J']PWD&%
%Z-?c'Y"Wu7'-=f3pBNcc2g7q25-6eC+*XX?ke:86nTDOZp(:iHcOgtHYV;@A]fs@3bIi8o[9V@^Wpj'eb)_@4*_f_7q'2c8TCWd,
%S%QMO*mX"H@`903dn-/M/o)MqZR_hp0N-5sr[D.i5*:n9IBN7peHDIra!rW63gGTMF86-nq!8)]Gn_et/),aH/$K<68mM9c&3,-*
%ACCuZ8O(Ga[ZHU3$#;CKPf1*+ptDZ07-lHmA6(+CKI[Yk!k"a<=dDR:gP)7M&Sa1P:^OlF`pt9U.D+/YfYnT?\p&P2cG0h%^D'WY
%ih'@od0)#Ek#mP5@H5Z&q_.(^&RGhD9(n1%YgB.Z`!QqOLkY;2)"4A1`hC9*R0tmLkCG?:;D[uOZ^BB[+.YW9o$a+iofHW2@S.?T
%F<ojrjc`i*U=Vou9^CgHHmNWjd+(+RfQQd;lQGNh8`!8$;b5ZVfn-Bdp./cqV2+JdW6[/Ip?e(CT"gF89:S4q74#Da^[`8>BAYo;
%n(k0(C)#W.m%+Ve8EfS"lob1=8Uhe:34F(hIVhB]j+VW].EcRc%!?r(q+-\t(soG#_pmSu-bnX>:scpDaP%!]071DdBQs-e9B"ug
%UaB-9^S'C#i*;.^7X&dCr.Mhj?KJ3b<VH(*5$PaT0)"7,p/jnW&XV=m'"L?Y,KKBnG*h$?rndU2*PQYZIO-OUF'U$"lr2+J%raj!
%0IBfS*9)j?'HM;Qf+Ap1:WTG;-/+8D:B>1t#X);BFT2!+@K)j:T=hchU!ocT`/?(hm.$sF@<Ws9g&-Y[9mfG/)&Afl5JH<)$lds+
%a!P,!(Z?SS2ti%+pabs%%sClS`8"=HdLMi-R\hi-ZIbJ!WJh!(FGk0#N(Hh,23h;JN901DfZL9jL0J0=aXD72SsH[>423C$8P-OC
%qfY=EC6#*'-pq.!/s@5!+C5:L'8M<HQH\SV=1"28cV:kVg8Ih`Aj.eX'ij%#,tTRb"B(_&.=5MdLljPRU88:keTA?F9::\4L-`U+
%4Q8UhBf<\c\JfQ=+'qohjQcIfe]6u957M2&F-iYqbT,eo7mgGHf*:/f1+V(FAUU>I%&No+1mAkE@ZG4Po1Gc7P\$^JVP.2ZLf5JV
%CU#hEW'6Rfb<E";Y&8#(o;HJ:#4YIV<Zi>bQQ_)lG\6_LKmC-SfaLp7_.[mf!TIm\WlGs(D-%Kc^fo*&iNb,_($SaQX9D+).mnl\
%pT;M`&:7=9ki;CUDL,qlK,dp#gk0(qnTL*'g78<"gi8?Rfd0hEhG:;tPFD3o:hJ@ErKN$l.fiQp'gt.pf3U:uTiU'r?a$.3jnp#K
%;RDYhOeK]FAJ_sZ$POm9+n65)QElFYV<fDX;?gr-9:8@.g.pF$<a?FLQ82FdOcZ7^6!ZL[+0qO%gjN*&na"Uk>DcY-Wp@n!IC`c3
%hd`8;`=;c,"/;XYM=a_tEblX:BdkiKW>.!rW,D"B^jJ$H.[j[j(M'.S4DlSM<Wi&mLa#tsc]]2@[$79*dc+6Q;MNn%B;A`>r\7^9
%,R@6:.pC(l$ecW+7H0(o@e\=iZLV9$S=Q,?do;'JZ=Eh9];DkP/7eU2B%7"=AqoBY7OMTNQ$M3=CF_bhAI3gg*kUA^GD;?g6Zke7
%8\3pUfrZ0ac["Jc/[@r<;q]-m=fbfpl)6h_Y,UbTIrEY?\YcZb"d=hD3dqEA,7C1dCh:%PGFmEXKJI-!@4O-NTP#0s@$a32[E1NB
%R]]K#XjT]"[PBDm'[:%[O?^0/B#a:`NOUmMXUH0T--%+oU*)L,lAT,-j0j(jK<5P0DN2*1Es;kRfu:g5q?Qm+$b!>OTBf5"BpJ\)
%Q!Gs5W;?!*Z2FNY*>AP+<6!T._,PU?242PU*Rb@mZDqAqf2VHPW6_jm9P#"J=1Xa&DWPN`26d.^d8X_u_\gdkA.&tcW*h-.Cf=5s
%p_[1;-.p@:+gB1GXfN#3?H6)iBBS!k9FFuZg<+s,r32HS68MgV`\L*`2XZsV9A83pZb>ud'C,&@]qeEld9$T`"I#Qj'<s6`B.8:a
%?";QCDrs^_V9c[MLW6WXKcW=N@QqiLQTUX>bO#0nnT:j/Qa>gXb:o!&>_A>:[Sb+OCK^R+DCmq*-!8@WoAYipehSe7=WX+iSKq=\
%Cjh:@i]%0c]k]3HcISu.pmf0uS;q1ha.i+>^XQmu1g@W]n+eL(P('W^J\Jni)&=jTn,%J+/)aC>]QV0*5^SQa@?4(Squ6Lp-7]Vj
%koU^gBF)deXIiqGaB.ZC`'!k,,F5O7M'U,D>#762NM1lcc#COaP'jN=H9="]9hAH>Wp9.J-I`d1d)*f]E!@X17HEH*6-m2#+HQ/%
%.K,"umt]NiXLaRf%cc[4Z,"#rlu$%k8D,o&8WNtC4HRt/7?i\$)n3IspK"=T^DE`;[hI>4VS9:[6al_X!/2#10iZ3qR%D&k?)+E7
%A\o2CpsR(D<20O'M!Q8?b(AlgK<[%<o4\3&ed%ucWHl?+H+E9J1SYH`16^Fj2rh5>*-P$bTnij9XtlaD-59+%MT.?7VFuL=9s0jQ
%_I,Mq/1aB%*.<QmYsq=KQ5k`kVD5jEJPFi9BH>n7]6YL9O@mo0qARQCr1'Bea)HtOD.N6al5l*/q%KkmYth08)T?$O(.m-)8&V-[
%H[/T34)@#;,p92Xgm!!HVJk6KjU3N>4ZB3G$47EHVldEGpS8tRis:#&@WtTdAIF['cCRFG8ZIh7C!Jf=?>!'j5RZJ5`Q8M*ShrYO
%q.tFS)NqSu/?NhB]XoPpg\C2.GjE@j:Du-;fTTpsEoFhtakP*N9B,4aWP^<%aGC;AQ3<p152VM6X=O-5Zf#'YM/Z*olu#DTGZY=-
%48_Fo04WXs?jbW6*JnVk=4iXid.$7G&kL3,4aF<:+=i)55JuKSPtsi8J0gIm9c9c.bX0Y@Tk=(+I7GRP2)o2sS.)5A1JZNhFbqr'
%U+*knBV&\:9D^&;5OY'5)DL;!nh'p9\V0K0Vj3C%djFB$H(ICu[JmaoMWKC6lBZ?<h^(ceA@uQ1@&l'c]nhHb-gB/;b5@fur:\5u
%s7RSnq2<#dnh4AL_K`3^o+t'<[Y22%VCThc[=>"O;XT_<WE;E%_Z0V]hgB]`BWlKm@X_ruFN$n((gp:D^mKa5[SfY/VChN7$;;I!
%"Gt:)=.>&2aCQ^LLbiQd050&Cdr#\0DB]%tlL+3FbcJIiZ'b6##RcCrjf&An>(3,/-Z$koCqjU!n^hZF'UVoAc#W_Pj)t5\h@Cq2
%b,A!n[oi]F<uFH&63D4Vo-3m5OoN>([t)^ing23O=iYsp#3-(F;\JIVMqPQK_>a?,/\X:]ctFmCoQm'>79=p@C`'^H7Pe/$n:=<b
%gcUu&:.po$C0cAOD_*2D%$JnUOq;\PPKT/$C_E`e_BK."OX67<$!YhkL'_=<E3$1^f<jX&<6OShQ6?luY]Qs%!%&,#Z+ojX3Cgf5
%1,63h?CTn,8FcBd,.t87DaBK!->kG:i\c[e@P3+*6PrJp6=)Tq/jOVEbcUYiqf9rGjLM6s@Srlt_V?X<3@:k5I#^(mD;Hgb%`l*V
%j=t2#SR,cOQpDFapM;;c-g6O$'&Q2(n*+XF^12;(m'pXV")NR0+P%2W2APPKp?a<C5smWBZ`A\j,PE+/XCELP!f[IYDU.2[mWC&E
%*SY+"V8_2@"#\<0&0?hCiDM?]R'Ua9g*+^T!o]nADhQ8FX+H$d2t\11!=O_/7<>OR03RWdfXl)a,K\^PIIeXhb%X<J>B,[Baqo*]
%DQ@LgG9WT-ZfLUP9aQ0hb*PYhb[G,!(Qrsj#"*P*Ms/=.kCctf5\$iq\`g+OU]$YTdUo`sHg:8Y&m"/o"\SMGZYnm5?t&3LX+Bp4
%+T.O9Z+-p[Q`u3TZ`,l*2Tq4Ip)Ct+;8sf&l&RK&H]+Acp9/2^<_LT?(ICHo+kGFTH^fS@+,<E]NkH#TrZks)Cru=dNO4eP@S<h7
%DEfDfn>umm_b>NpJhg&(%>l6*KjcmDO+_IBJ/flBC.\N4Se,B-iLR_J7E[H!Pbj&da/L?M?&Ad*(UShG&8'FP8^`lSaK,%59>DH%
%<nPm`U(UoiHJ4C`aF;/HZFNqNGu=rR1*p?8,A_6TT5PnH>R_(3XXZ-HEOMQ!`[]F,m"eRdR8k(OB\6L'e_?g7JZ>p]6R`IXPr@]U
%omNng.k*"61X&UK8q5)8b]3Ct>7=jc-BVmXbGO4O@#\_4-]_sHp-u_mn.0@`HZ';9B(r0LXNKT7lkDG'(HaJG,5,:)%4nk),b;d6
%Ym(#5JXl,7b`]N5bfH$^RSPl":f%(,_ZsOH&8c)Dc\q8r$Fn>uX$SnV+lN(2goSF_Lhad*9a\A"Sgm\e"t=+)LihJ]FdC@ipJ3hg
%a<umgK9P@BZnl:*%C-EMnmpETL32]^<R*#,>e.q"9T"OkLIQIVl+$9VrfUPLC`pCcD-hu+>CfpbF[h#;YSm4_&Hn\A4a&Mc\e^I&
%.>5i%qnRt?pJ*+RV#nthH"p\nG/%Y#2U6c'>)`;S-F-?=.(30m28R$d^FO%pD76/0*<ic')cIg.LnL1?T+bh%k"V(D:SUaJOhApe
%3@l3U_N'ir`nO@Oj>,i:L2G4Ga@LP<m,aBU0TbaJ@@/_iX`>V9rEkPU,"j.3N#UH,D@$e.UCCsJ6enG]QQ]@MKZ#VB6AsujK=qlO
%9ud>!BpZednP*,%IMnnNQ"[+a.rt7.ic\TIJiU!=ToF*sYD^9RNc:F6%Z];D1?ef@"SCP?*b4>TLmb7ZDLMk.0nrf!-]c9D6;eVf
%FElP]#AY]p11JTbM+B-@"d:*#'HQl%Et,15b`!T$A0r?HC#e6!3[qV1m*E?nn$rIYgi$,,6;3:,"dI7&#..EYl<o':g6PrHl?`pr
%ei:?^hZod2'K:%p>MZfg'5+W_&MTI:ZsbmNWdY5)pXp*_QgM!sN#C8:9L\ZBRF\V+>N$17oKHc>!V6X.<*gBC!ZR#D%e=NUnG7X+
%Pr'G3qF]3<KPN]R1de=qRN!@o[5fon"@M`b7FPCfNRt>:KTbn!JN;45l\pXjm5g[HeeO,>6BJiJq/);1pp([=*NUo)aQq\ULg_)J
%4u=\\_9n+k9tCXKS`h0VggR==r2I=TApO#C!`?3Bas"!-J\:I!'lK#%AR$^[1Ia\tM$*0b7iTf?:Ll^b'V(sHZC@nKjm%KWB!'hS
%)oYc+KP3#oR)1K@$I^dk<@TZ<\>f$DZ:(u9'Mqm5jD2>%1L_^U028k>\V#GV)Y;\]#](269rl[B)h?""7j+iGfdQ_E1/+e0:!/tB
%d0k/sWi),e06OCbXekGP,?<!P8f;Z2S\g>.-LKfE$dejB>#sNFq8CTP[h60cm\2<nCBa`b&nM][f/(DPT>8f5AL')8c%DU10kfMJ
%N82u#(nkm^8/]qICSbu/0LX)u0jK:*rleXQp/8t^jNOq3Gsl&:#</A%ha+!_gT)G!i/Pck"\ZqF1T/Y6i*0`kFL#`qG_rlJD_LN9
%KOb8e)jF,1$=\&>bkVsb>4GoKnGOfER$p\WgjM9pm4,WTMAhq\49sc*e:2XrFdC=[C"S($)V0mB<gi\5`+QkH]I,$[.+kfT2EcR]
%(\1Z^=0&V1d+7=\5[DJR&[O0V"CcMSHr/BiY\E`?$]Oatk)T@"(8%GRj\n\pGs(m?egO\X@0j"=ZCB$i[=Edb&_cYhX@$DQ]@)4l
%R;WA0Lk43tfS3C&38G/^O-"N,=uDNk##^+J2ZetFoGkM"`2noK]ek\ZL0/okSVF-]To0W.HhJ7&M74Lo$S_idVI>b,`EbP4DrA8T
%K"s5Xcu?>89=j\*U`SIP2Z$SNfTiVE#I8Tn$(*p%YFdAD/%\tce2.q#lT#m7labT[?H<]A$8<Qj>H$XTMTW2,iq;unfe*]$q[W-*
%L,:ThfhSpOW?Ji6/]J7i\X*fJiSgR81)n2g:%AD-MrdR:4B+U71fP<*5JngXC#39sD$_KbX^Yf@3cjG!lf'7,fLr:(o`-=l#%+HB
%%?g)fBiAVk+SK%T,Md3JIU125PVtlY(VqB-1nQ9]CR?]K&HW=0/lq<o+G9>Mq3\B?$^lb=cS7T[^a9G`)tLR_Eb^\L#m=K`3!q"1
%7XTS?'Yeg7:?&IdGIE?E=]W%bfQ&k:/</"+R9Z>mT*/2`kDrc#9@a*)dpU5uTc).M)1b)UNK4CXF'pkj<`qZ'[W.:I+2?+"km,$0
%m$M<C>hKed@I8cIQ>G%d2S]bWUMCLXREk+4B*qm#7k)7GQ9?=)6I(O"%]t]FE9f?NfJnQn)VE2DE8rohQ^rLCbGlCpJo%SZ0k:QI
%1\'"7"i4sG'D$p!c1W>s%k>\0V'kqq/#kc,]#L-ijY]eL%oamjA+&>.NGmBN-KickkuFG!I?[sppp>PUY+akU0oRZ+mJsMT.5Dg_
%!R_P5X';qN+=O=SX0:hu`G#P$3QD0KOCaTc*9@/$#3o*1J,hn.ATrY)$-j$-b-JV>PG8'Z&4h93s02&MWM#7K+,4l>[BKT47;?je
%1X\qfZ._<c<aN*$8qutD!lF4bko>Fo<Sb59#DaOU4WOb5MXcoS$^cc(6Zs">&,QKDFuH&o"*6JuU!s#RVH<a-qZQD;*reb%eFhc"
%BLTkHa8]QMcmP/m"#!njn<O"UPLjE)XirCrLd8u7$I`9[rXZoP?cV.*BGU;&-U/":*s"D$O+>@Pd9+ae&hnM0Mc\6b!3m\uT%Y2-
%2X1YG4EkYp]9.L+3^@Kc1>'fhX(pa*b&r5^gam?J`G_QGlU4Vg,BNc1>,Yh%ZD"t78@$Uq$%Nc&-Eg$^J=qp#X5du7J,i6+1)iU$
%P2U+)#7-WaChE6f?p/*>Og$P,eT!ntcc2N7li42_mg"SC^N9b!s7,WET;KnGSDM/[Loo)I^]o%tn\+9a="=CNBF_D\@2G?-Rf*.2
%@/&_:'&;=?:U">PG[Sd4$:(%RLTgas,$?\W\:A<c9lj,_V#V6qes$5G4r9GLU>usX*T`a*%!EO,5B,*MYaE>%JO3K5_r3pj1QE*G
%ZIt+cn7laD`Ml'6O>uR:>bB/2@8at?comODGbsTr'C6dh(i<G;VG3Je2l\n@cTBFd=$3HJW4cd;[-0*ced/`LS'Za-*q"YM@ZE2P
%\(+-bT@o8Y4+faKX`0pV)oY%)mXl=fQSls0R-uYH#7G`?Mc0d<rb#>\G,pS=VqA]]h.JsimYro0]Fc>s<WO5R&R&-c\@f_=&.G)?
%%.Qeh(O>o(<R5-.9Y$3#6Gmtq2EE`@h?U)qP()$4IF,4[0`\]of$-=pHQTo,E%Ze[\i2q`,i4qZM;JRjLj.!>bT!5Zn[_;X2aSc3
%b#dgd63Q017-BR!IVun47`94u(V;WC%gslB#`T[_EjC#:Ebif$JVi$L2m6EoX[)X5Ct#M'pM_u6gX>'nh"p]SWi)V[l1aPT7Uc[;
%(oB-t<_6Wu0:[`d#%Vu@:r"E%@H`Q.R.,0T:1ek>%*C69BAg4.c,4R/cOkNL-fMKp'BMC5l+Fd_Z`e!Nl30#5L4.hn\Sl[HT7bm\
%cdRZQGE2:'4PIblW2rhk)D8>>%>-C_&7dK1+DfVuJ:r1X(a@g(:ZeOSm;)J[4+I+TKHXbDkE"G<%*9_8b0Ar&B/n-&0dGhK27?EI
%lHmqOdJ<<Rh>PN0:u,DbBA`eNYBR3,$)a[W;<R[1SQtS$<MR#LN4b<R0>*ng:(&H.1ck5M3dUi!hJ"=MM`uV+(7>%$N&G1`XA$V!
%?0JIN!63q\`;+*Q04,O<]PG1]K9$e8R>MFSPoF3V9o?W5bp82Fbm\\]i)V.9a.="fK^NH.kq\"/@?+_RmJcO64:A=1?(uO3:eoPS
%Hlrk>JHl=(`!6A:o-/XXnV&JV_tTD-Qo(DDd/U#r<D.X<=eSWrn8*XtperT"Uq2li$"e,0=N0l@RH+U-i5UWS<nuteAWSOiI@!BE
%Q67C#:?'hD"5:"*#3QCRAd:<G"#S8r%6RJj9WW_GO?oMTGnlUTf4#b'FXb50*UF!!hIgc"l,We?EFo6X^$ga!5-t-[>\1AN=`--O
%b'oJRZ<o/AESn:<O4[Ic,=[q=/rSP<b&3i=JW*ZA2s%BfYXXn+.-:#7j6$"F._IpPBF+r]-?mbcfS=4X7ZAGO:MiC-+5eWYqYL0F
%[<5!VqjZV"c_"TH1P`YS[@^i.>=Ss[g/2(`+Z!#*htN<HrFkMQrQqI?[QYIFlW4\-fS'(mhEY2=&K7&W)J]ImrPPWBX*_GR0Sj0G
%j>/sbMIMJ\c+[[1M^MYfK.&q)Q,HT*n10@Y$prU@<SJ+r'Z3j<G-2[j+BOJu]40DZ#j%Xu.6NABV^$oY:f,E!_@_nENY&%+6n!a"
%&u;a#a#;bp>g?XAMTG\]B@pL.(5>uSrWs@321nuc9b/e6V7G"N'.h5`Mn'h!:%9N"%aQK)r?-lnZ<j[V[XdHof+kU?aE;=o<tJRi
%kY1m$#(#GI`#k:T=K9Q'B)S^p0>!(#*AmCg=j-PSn]S"lq5N[5Mdk!i[$n230h2O5c,FGe;:hF54Qf4i[:&Z,UTT*/X/'%FFlqGB
%eEZpP=80F]EXhsUr+PW`on'>r-K2Bo'6SU^ds6ERV3,!/oe#57)uklo,5:IWk&YK'np1*$oo?2ih!c,%r>3J:91O\)4CXA_r^F[p
%!_/INp>fu]rOo7ZYG.c%7n'oV9:]#2ibb98DHte#fqYfIX5oVYe'Tn*L7bg!UE"FTQ!F&I!tWIu]n;kI3'Egh3kol]rAuK1dI5.^
%NPFq+Fo=*&VpUp1e'\&rpJ0=1J4sqr'4X`FUIOCN-JO;s@SJDP$.kX(C,oCP26jm([LH_@?3nD.DQJ\Km80@aYpL4u[RZ960uS8]
%@neKWW:(:G@T0S9Kn?GXVU+0'Ri%m@1(Q8t#USh4YXu/LaPOIiTJSeCKpr53Sd`e_3bnHsG%+,2g!raq$$P<&0\fu%]Eqn9_'K@G
%0`^Bc#WK$AO\G@c'+:h7q9G6;q\J[J#F/l4*?_fM;0N(:5-13bWd:t>hFhHZ7KN-\<"[3jRit<M4&H!4$j?td$G[eKY_iK9AC%+J
%Yp8LUp:3?R6id;Bb!&-+J0ESLV4DH65Z%NsdaMZCDZc-t3Hh+s*Z1UO$qVKVJ1uM6(p<E8"#(.gW[A4j&-\QH_/G.bei+#Q!fVLN
%(^@3'2r+oFYX#%LT4%^8+6?NTKE33'Wp'dT(r/RX(r4,YRRR_9]A(KIDA^1.4:D44<<dXd_Z9E"332A57mY1s(UAJ$LRY^-_7rE^
%'uL#Js/!b*k!U_nS*%O.iO9_./T2>R+nRrK$K(tE$K,B%$Ao(8I"pJ#M:DSV\c)`D(D[E\@RAt[aVM!$J8L84Eh2O-@U[8(m%AEs
%edUOVZcfCp&E#A>(>)6$D`8#2:Ze%a."EleIA6eD&58FH@MHU9Q.R*)$j,'/*8Q5Ip?&W&K)f_Y2['G3&AY^u`\7WCC_![BT.shK
%XVgTtS_FftW4,dhjnsc4Hk]g_W6'l5ne,7qa((p1QXGWT&=&Si#fLu/9^(a9$'^k)/^U8n($=t9-o3#Sb"P&r]dP\P:-q<[eT&dV
%"G;"\Q^gt#aMVJKEaWh+"a0AK%&ub.7ZHa?EuU;`Rte$*U).hG#!jee@Y+W/aE%X;"A$oc.5@M@9WsJ7]b+HrTkBf^D=jNlb_2QK
%j4-M/Jmm,(R\^TYc80jlY%1\+HMC>.KM\DnAiZQKR*]pNjdDEBLpUcj,oCZ7$#'\H3GAd#4)#!3%$;W"ABM<]KUuO@$A1rG<W]M"
%L^%B9!#b?R+Y1Bj>WaG9J'gukU]a%!!QhDG"'S`Y^9S@mfJs6s=<HBe<=oat3],nWY)nkJA1V$p[F9X`Kne6e"5j>e8I7Z;;5U,l
%qekt).k(Mb^$8]dTV3NS.LB*H$!?aHQ)LJ]"([$c\q)H'g%GTZ]Hs1FUJA86PETBF)Tu&AW\<h8:Lkm\#&%j&,p=BY,p?ZR*B-A)
%mr/lcDfR[U&e'r);GMfQ>=h<,8[,\S`]6$c+(^u*,Z+%GA`#6j!O@JNg2J'J)6!j^";%WZ:"=pD#)UY._h2tB%&g`n+XI/]$d.R*
%8\jL]I#&XHpg,#tACg5mT9PE;q*\6@,U>Vn0PFDl$&6s43ti5>*f(FA*Z3H7-C&#t84\9pWu_qnKER6a2^0OnfW\;<:CX9-OL34F
%3sc4<h,[0b[G9tA)`u=`(Df\7^_aM5lkEoc;+aGO#iG1u,^fO(c\)GUqI$N90`qG<2QUeYIUiB\]C>nb>I(IQ4<Lg&m.fMB#hX,U
%LM&ih:<^KU6d.g10t3#Xkd`cn_hf62[^1J;e^01NPo^HDaRkE?"UtHY7$\dtg5/!H7$Pf7U'?-F\Q@:2]lc@Z!]b`>e)3Lo!BNLK
%el,mI6<;H`]e`8kS=kGbI>*%3":Z2G[Oe!W)DE^f$j;.d_Y7*X^]RH\5ep.A^rI14=5<+L;mBF\+;]]9FsDsO`HnbtLsa<B(*=jp
%lR0C!0AU:>menB;]_CrHh%T3?/*tk`q?ub%0o&>E$SZc&!&bP8AFWOjpBaHIRVN3"aIu1:UoPH3A6i=c4#iNg>/ks_L?M5R`1F"\
%Hk9I]-KNTKne+uX8-Va7K%k@#-8>_"^:pHfiG9D#&=ES$esY#-H;\n2n9]>J!VZmi[?Tc=Q-VpKGElHgXV/W5OZ89ZC`Y9V>'8.7
%[IjJm6uefmET):s`Z'[c'Hd3)I',3R('q=7c5LToga"38_;9uJKg-!(i9dIP[q4)GfoHJ*MMK//Z`XKMbb:NYjVEIu.G2Q.b/Lau
%>0(Pi6u?pI'i3g?]K:8rn=>7O'I)&n\a2XLRH31U/f@a>8G3g\iS6g%1I"KCmjA5[76_6LmZpL_0.hn#FIQ#(9ml";'lA<2():qn
%o];4jCc2.Kg^HM-6sdt%'LOdtV910X\FRRdGV$R`0Q,G8j7c@CB\:'WnGpCoGhm7Rru/=.D;TF]6Za&VFF+pHN3Sf;5.tP`Y25FY
%@?eE5=-Bn6.qIU!Ma6X>nk41Td2O\#\"LO8PodJts)48+.3&)X$u*";;lL6lPDU-K@4"rqj%EqARUZqa:&HeOGJ@;qUi#e%:&1`C
%AtkL[hd.(,a:Jc:_T<&`WJTBK%Dlh#.mRr.;j\_cdiFZWp;rW@i2Ufc0.3$5dO+`S#/d;?[ReAM]n>JKB#]e#\lk$o9.Nl\=M3d9
%0Um_QKQ/iW853i@`7!df&P``*(iQIT1u_5I^2A=p]FSil)q\YtlH:\_MJZ=f^"f>!5_X5GZ=j,sZ2EXI.\e)i2e#?[:m`<nrLC"j
%rW+RBXQ3-T#9*I/WL.25&6(]erAATnmNPO2+C+"N1k)f`TL;TLL=cgcaa/[W?M]B<'9ahh_;oq3@P*do(e50)bTGJ">H]Z-GB5n,
%kGg-nEj?VgRV!Ob&1R<.*l`_`!DEmQ`j,@X[Wn#F?;Tuul*)57rYc5.P@]L3EStnTZ%!l(_%;oY11`Su)%e.po!sChd"e3+D&+^R
%rEeqb]RTn"ck8rbl#(7m?[VR]64B]=:mi$cflB9o3Eg6m:6.`a6s<JYHV0$q/!?"&Ar)C1Eb%BGaO9OLaB-L?^\n4s]taS&7+1i'
%f3eODYPtF!fDkWX^OQ.*J,emXrr'V3nn3IG?[hSW^]!'in=+q*os]GGndkcuRt(D(fAHMoGJF1<DuTOdIsV'[YQ+*Ihu<3hJ,b;]
%If8I0pA=mEOOk`6r6PB/5Q9jGo]?)R]Z_>!~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 25071 56015 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 176.104 -106.30052 ] concat

 pgfs



 0 setgray
 25071 56015 a @beginspecial
0 @llx 0 @lly 63 @urx 60 @ury 425 @rhi @setspecial
%%BeginDocument: images/dbtgBW.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (dbtgBW.eps)
%%CreationDate: (Fri Jan 22 16:59:03 2010)
%%BoundingBox: 0 0 63 60
%%HiResBoundingBox: 0 0 62.9921 60
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 63 60
userdict begin
DisplayImage
0 0
62.9921 59.9925
12.000000
63 60
1
1
1
8
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE854A
575757575757575757575757575757575757575757575757575757575757575757575757
5757575768FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE854A575757575757575757
5757575757575757575757575757575757575757575757575757575757575768FFFFFFFF
FFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE864A575757575757575757575757575757575757
5757575757575757575757575757575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFE
FEFEFEFEFEFEFE864A575757575757575757575757575757575757575757575757575757
5757575757575757575757575768FFFFFFFFFFFFFFFFFEFBF1F1F3FEFEFEFEFEFEFE864A
575757575757575757575757575757575757575757575757575757575757575757575757
5757575768FFFFFFFFFFFFFFFFFEB8253533255CDCFEFEFEFE864A575757575757575757
5757575757575757575757575757575757575757575757575757575757575768FFFFFFFF
FFFFFFFFFEB84FFEFEF98644F8FEFEFE864A57575757575757575757575757574B40322A
28272627282A323B4A5757575757575757575757575768FFFFFFFFFFFFFFFFFEB84FFEFE
FEFE4FB3FEFEFE864A575757575757575757575757422726222020202020202020202226
263B575757575757575757575768FFFFFFFFFFFFFFFFFEB84FFEFEFEFE7B8DFEFEFE864A
57575757575757575757572A23202020202020202020202020202020232C575757575757
5757575768FFFFFFFFFFFFFFFFFEB84FFEFEFEFE7787FEFEFE874A575757575757575757
573D262020202020202020202020202020202020253B57575757575757575768FFFFFFFF
FFFFFFFFFEB84FFEFEFEFE50A9FEFEFE874A57575757575757575757433D272020202020
2020202020202020202027334257575757575757575768FFFFFFFFFFFFFFFFFEB84FFEFE
FEB12FF2FEFEFE874A57575757575757575757439E843835232020202020202020202234
3878A34257575757575757575768FFFFFFFFFFFFFFFFFEB82C55533D3CC8FEFEFEFE874A
57575757575757575757439EFEFEC65C3532322B38393D495A8DC6FEFEA3425757575757
5757575768FFFFFFFFFFFFFFFFFEF1D2D2D2E3FDFEFEFEFEFE874A575757575757575757
57439EFEFEFEA660888844FDFEFEFEFEFEFEFEFEA34257575757575757575768FFFFFFFF
FFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE874A57575757575757575757439EFEFEFEA66088
8842FEFEFEFEFEFEFEFEFEA34257575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFE
FEFEFEFEFEFEFE874A57575757575757575757439EFEFEFEA939454535B5FEFEFEFEFEFE
FEFEA34257575757575757575768FFFFFFFFFFFFFFE8CECECECECECECECECECECECE7147
57575757575757575757439EFEFEFEDC74FEFEFE4D3138383887FEFEFEA3425757575757
5757575768FFFFFFFFFFFFFFC28282828282828282828282824D43575757575757575757
57439EFEDCB37B81FEFEFE682020202080FEFEFEA34257575757575757575768FFFFFFFF
FFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE874A57575757575757575757439EFEB2758E62FE
FEFE682020202080FEFEFEA34257575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFE
FEFEFEFEFEFEFE874A57575757575757575757439EFEB29DEF62FEFEFE843C263E3E95FE
FEFEA34257575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE874A
57575757575757575757439EFEB29DEF62FEFEFEDC75FE51FEFEFEFEFEA3425757575757
5757575768FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE874A575757575757575757
57439EFEB28CBE62EC9F894AB2D5A749B9D2FEFEA34257575757575757575768FFFFFFFF
FFFFFFFFFEFAC4C4C4D5F8FEFEFEFEFE874A57575757575757575757439EFEAB452E2C37
3B89702D3939847753CFFEA34257575757575757575768FFFFFFFFFFFFFFFFFEEB206161
5133CDFEFEFEFE874A57575757575757575757439E40312020202039FAA2202036DFB92F
3144A34257575757575757575768FFFFFFFFFFFFFFFFFEEB20FBFEFEA160FEFEFEFE8949
575757575757575757573B2D2020202020202B363620202C363627202029425757575757
5757575768FFFFFFFFFFFFFFFFFEEB20FBFEFE9674FEFEFEFE8949575757575757575757
57402B20202020202020202020202020202020202B4057575757575757575768FFFFFFFF
FFFFFFFFFEEB2051514435EFFEFEFEFE894957575757575757575757574E272020202020
2020202020202020202026425757575757575757575768FFFFFFFFFFFFFFFFFEEB20D2D5
C77C50FEFEFEFE89495757575757575757575757574B3227272320202020202020232727
3447575757575757575757575768FFFFFFFFFFFFFFFFFEEB20FBFEFEFC27DCFEFEFE8949
5757575757575757575757575757574B433B34343234343D454B57575757575757575757
5757575768FFFFFFFFFFFFFFFFFEEB20FBFEFEB62AF7FEFEFE8949575757575757575757
5757575757575757575757575757575757575757575757575757575757575768FFFFFFFF
FFFFFFFFFEEB2027272C49BFFEFEFEFE8949575757575757575757575757575757575757
5757575757575757575757575757575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFE
FEFEFEFEFEFEFE8949575757575757575757575757575757575757575757575757575757
5757575757575757575757575768FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE8949
575757575757575757575757575757575757575757575757575757575757575757575757
5757575768FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFE8949575757575757575757
5757575757575757575757575757575757575757575757575757575757575768FFFFFFFF
FFFFFFE6C7C7C7C7C7C7C7C7C7C7C7C76E63797979797979797979797979797979797979
79797979797979797979797979786F7979797979797983FFFFFFFFFFFFFF883A3A3A3A3A
3A3A3A3A3A3A3A426E898989898989898989898989898989898989898989898989898989
898989897E428989898989898995FFFFFFFFFFFFFF951212121212121212121212125CC7
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEE868FEFEFE
FEFEFEFEFFFFFFFFFFFFFFFF951212121212121212121212125CC7FEFEFEFED4C4C4C4C4
C4CBFEFEFEFEFEFEFEFEFEECB9B5DBFEFEFEFEFEFEFEE868FEFEFEFEFEFEFEFFFFFFFFFF
FFFFFF951212121212121212121212125CC6FEFEFEFE8C6262225A6274FEFEFEFEFEFEFE
FE93316C7B436CFAFEFEFEFEFEE868FEFEFEFEFEFEFEFFFFFFFFFFFFFFFF951212121212
121212121212125CC6FEFEFEFEFEFEFE26E2FEFEFEFEFEFEFEFEFEB83AE6FEFEF955A9FE
FEFEFEFEE868FEFEFEFEFEFEFEFFFFFFFFFFFFFFFF951212121212121212121212125CC6
FEFEFEFEFEFEFE26E2FEFEFEFEFEFEFEFEFE5B9CFEFEFEFEE3EBFEFEFEFEFEE867F5F5F5
F5F5F5F5F7FFFFFFFFFFFFFF951212121212121212121212125CC6FEFEFEFEFEFEFE26E2
FEFEFEFEFEFEFEFEFE33C7FEFEDCD2D2DCFEFEFEFEFEE62B4A4A4A4A4A4A4A5EFFFFFFFF
FFFFFF951212121212121212121212125CC6FEFEFEFEFEFEFE26E2FEFEFEFEFEFEFEFEFE
37B9FEFE7C554453FEFEFEFEFEE863DADADADADADADADFFFFFFFFFFFFFFF951212121212
121212121212125CC6FEFEFEFEFEFEFE26E2FEFEFEFEFEFEFEFEFE6886FEFEFEFEB953FE
FEFEFEFEE863DADADADADADADADFFFFFFFFFFFFFFF951212121212121212121212125CC6
FEFEFEFEFEFEFE26E2FEFEFEFEFEFEFEFEFED42FB6FBFEEB6E57FEFEFEFEFEE863DADADA
DADADADADFFFFFFFFFFFFFFF951212121212121212121212125CC5FEFEFEFEFEFEFE26E2
FEFEFEFEFEFEFEFEFEFECD51283C2F7CEFFEFEFEFEFEE863DADADADADADADADFFFFFFFFF
FFFFFF951212121212121212121212125CC5FEFEFEFEFEFEFEFCFEFEFEFEFEFEFEFEFEFE
FEFEFEF1E8FEFEFEFEFEFEFEFEE863DADADADADADADADFFFFFFFFFFFFFFFCB9595959595
95959595959595AFE3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFF7ABF5F5F5F5F5F5F5F5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial 25071 56015 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray
24746 75760 a Fp(1)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 268 1124 a Fi(1)1052 b(Intro)58
b(duction)p 0 TeXcolorgray 268 4044 a Fp(Main-Memory)601
b(Databases)h(increasingly)g(b)36 b(ecome)601 b(a)h(viable)g(option)f
(for)h(man)-36 b(y)601 b(applications.)268 5649 y(Whilst)498
b(main)g(memory)g(is)h(a)f(considerably)g(faster)h(medium)e(than)g(a)i
(secondary)f(disk,)514 b(utilizing)268 7254 y(cac)-36
b(hes)433 b(more)h(e\016cien)-36 b(tly)434 b(w)-36 b(ould)434
b(lead)f(to)h(ev)-36 b(en)434 b(b)36 b(etter)433 b(access)h(times.)1568
8859 y(Leis)439 b(et)g(al.)h([2)q(])f(prop)36 b(ose)439
b(the)g(Adaptiv)-36 b(e)439 b(Radix)g(T)-108 b(ree)439
b(\(AR)-108 b(T\),)440 b(an)e(in-memory)h(data)g(structure)268
10465 y(whic)-36 b(h)313 b(e\016cien)-36 b(tly)314 b(stores)g(and)f
(retriev)-36 b(es)314 b(data,)338 b(ev)-36 b(en)313 b(outp)36
b(erforming)314 b(red-blac)-36 b(k)313 b(trees.)538 b(As)314
b(w)-36 b(e)314 b(will)268 12070 y(see)327 b(later,)349
b(AR)-108 b(T)327 b(ac)-36 b(hiev)g(es)328 b(its)f(exceptional)h(p)36
b(erformance,)349 b(and)326 b(space)h(e\016ciency)-108
b(,)349 b(b)-36 b(y)327 b(compressing)268 13675 y(the)536
b(tree)h(b)36 b(oth)537 b(v)-36 b(ertically)539 b(and)e(horizon)-36
b(tally)-108 b(.)889 b(Higher)538 b(space)f(e\016ency)g(allo)-36
b(ws)539 b(AR)-108 b(T)537 b(to)h(utilize)268 15280 y(cac)-36
b(hes)433 b(more)h(optimal.)1568 16885 y(The)348 b(goal)g(of)g(this)f
(pro)72 b(ject)347 b(is)h(to)f(implemen)-36 b(t)347 b(AR)-108
b(T,)347 b(as)h(prop)36 b(osed)346 b(b)-36 b(y)347 b([2)q(])g(in)h(C++)
e(and)h(compare)268 18490 y(its)318 b(transactional)i(throughput)c
(against)k(other)e(in-memory)g(data)h(structures,)340
b(i.e.)320 b(red-blac)-36 b(k)318 b(trees)268 20095 y(and)434
b(hash)g(tables.)583 b(In)434 b(Section)h(2)g(w)-36 b(e)435
b(describ)36 b(e)434 b(ho)-36 b(w)435 b(AR)-108 b(T)435
b(is)g(constructed)f(b)-36 b(y)435 b(applying)g(v)-36
b(ertical)268 21700 y(and)611 b(horizon)-36 b(tal)613
b(compression)f(to)h(a)f(trie.)1115 b(Next,)657 b(w)-36
b(e)613 b(describ)36 b(e)612 b(the)g(p)36 b(oin)-36 b(t)611
b(and)h(range)h(query)268 23305 y(pro)36 b(cedure,)461
b(as)c(w)-36 b(ell)457 b(as)f(v)-72 b(alue)457 b(insertion)f(and)g
(remo)-36 b(v)-72 b(al)457 b(in)f Fh(??)p Fp(.)646 b(Finally)-108
b(,)463 b(a)457 b(b)36 b(enc)-36 b(hmark)455 b(of)j(AR)-108
b(T,)268 24910 y(a)434 b(red-blac)-36 b(k)433 b(tree)g(and)g(a)h(hash)
-36 b(table)433 b(is)h(presen)-36 b(ted)432 b(in)i Fh(??)o
Fp(.)p 0 TeXcolorgray 268 29347 a Fi(2)1052 b(Adaptive)702
b(Radix)g(T)-175 b(ree)700 b(\(ART\))p 0 TeXcolorgray
268 32268 a Fp(The)561 b(W)-145 b(API)562 b(is)g(a)g(hierarc)-36
b(hical)561 b(index)h(and)e(indexes)i(the)f(prop)36 b(erties)560
b(of)j(no)36 b(des.)961 b(It)561 b(tak)-36 b(es)562 b(in)-36
b(to)268 33873 y(accoun)g(t)553 b(if)g(an)g(index)h(no)36
b(de)553 b(is)g(v)-36 b(olatile)555 b(b)36 b(efore)553
b(p)36 b(erforming)554 b(structural)e(index)h(mo)36 b(di\014cations.)
268 35478 y(If)514 b(a)h(no)36 b(de)513 b(is)i(considered)e(v)-36
b(olatile,)536 b(w)-36 b(e)515 b(do)f(not)f(remo)-36
b(v)g(e)515 b(it)f(from)g(the)g(index.)820 b(In)513 b(the)h(follo)-36
b(wing)268 37083 y(section,)434 b(w)-36 b(e)434 b(will)g(see)g(ho)-36
b(w)434 b(to)g(add,)f(query)h(and)f(remo)-36 b(v)g(e)434
b(no)36 b(des)433 b(from)h(the)f(index.)p 0 TeXcolorgray
268 40935 a Fg(2.1)876 b(T)-146 b(rie)p 0 TeXcolorgray
268 43398 a Fp(The)497 b(trie)f([1)q(])h(is)g(a)g(hierarc)-36
b(hical)498 b(data)f(structure)e(whic)-36 b(h)497 b(stores)f(k)-36
b(ey-v)-72 b(alue)498 b(pairs.)768 b(The)497 b(trie)g(can)268
45003 y(answ)-36 b(er)523 b(b)36 b(oth)523 b(p)36 b(oin)-36
b(t)523 b(and)g(range)g(queries)h(e\016cien)-36 b(tly)524
b(since)f(k)-36 b(eys)524 b(are)g(stored)f(sorted)g(according)268
46608 y(to)479 b(their)g(lexicographic)i(order.)716 b(A)479
b(no)36 b(de's)479 b(path)g(represen)-36 b(ts)478 b(the)h(no)36
b(de's)479 b(k)-36 b(ey)-108 b(.)717 b(This)479 b(is)h(done)f(b)-36
b(y)268 48213 y(splitting)433 b(a)h(k)-36 b(ey)435 b(in)-36
b(to)433 b(c)-36 b(h)g(unks)433 b(of)h Ff(s)f Fp(bits,)h(where)f
Ff(s)h Fp(is)f(called)i Fe(sp)-66 b(an)p Fp(.)1568 49818
y(Eac)-36 b(h)421 b(inner)g(no)36 b(de)421 b(has)g(2)14189
49336 y Fd(s)15101 49818 y Fp(c)-36 b(hild)421 b(no)36
b(des,)423 b(one)e(for)h(eac)-36 b(h)421 b(p)36 b(ossible)422
b Ff(s)p Fp(-bit)e(sequence.)574 b(During)421 b(tree)268
51423 y(tra)-36 b(v)g(ersal,)421 b(w)-36 b(e)417 b(propagate)g(do)-36
b(wn)417 b(to)g(the)f(c)-36 b(hild)416 b(no)36 b(de)417
b(iden)-36 b(ti\014ed)416 b(b)-36 b(y)416 b(the)h Ff(d)p
Fp(-th)e Ff(s)p Fp(-bit)h(c)-36 b(h)g(unk)416 b(of)i(the)268
53028 y(k)-36 b(ey)-108 b(,)403 b(where)395 b Ff(d)g
Fp(is)g(the)f(depth)g(of)h(the)g(curren)-36 b(t)393 b(no)36
b(de.)565 b(Using)396 b(an)e(arra)-36 b(y)396 b(of)g(2)37338
52546 y Fd(s)38223 53028 y Fp(p)36 b(oin)-36 b(ters,)403
b(this)394 b(lo)36 b(okup)268 54633 y(can)433 b(b)36
b(e)434 b(done)f(without)g(an)-36 b(y)434 b(additional)g(comparison.)
1568 56238 y(Figure)f(1)g(depicts)f(tries)h(storing)f(the)h(8-bit)f(k)
-36 b(eys)433 b(\\01000011",)k(\\01000110")f(and)c(\\01100100")268
57843 y(with)459 b Ff(s)413 b Fp(=)f(2)p Ff(;)221 b Fp(4)p
Ff(;)g Fp(8.)658 b(Span)459 b Ff(s)g Fp(is)h(critical)g(for)g(the)f(p)
36 b(erformance)459 b(of)h(the)f(trie)g(b)36 b(ecause)460
b Ff(s)f Fp(determines)268 59448 y(the)557 b(heigh)-36
b(t)557 b(of)h(the)f(trie.)951 b(W)-108 b(e)558 b(observ)-36
b(e)557 b(that)h(b)-36 b(y)557 b(increasing)h(the)f(span,)589
b(w)-36 b(e)558 b(decrease)f(the)g(tree)268 61054 y(heigh)-36
b(t.)601 b(A)442 b(trie)f(storing)h Ff(k)487 b Fp(bit)441
b(k)-36 b(eys)442 b(has)f Fc(d)22008 60531 y Fd(k)p 22008
60748 514 54 v 22047 61512 a(s)22655 61054 y Fc(e)h Fp(lev)-36
b(els)442 b(of)h(inner)e(no)36 b(des.)601 b(As)442 b(a)g(consequence,)h
(p)36 b(oin)-36 b(t)268 62659 y(queries,)552 b(insertions)527
b(and)h(deletions)g(ha)-36 b(v)g(e)528 b Ff(O)36 b Fp(\()p
Ff(k)45 b Fp(\))527 b(complexit)-36 b(y)-108 b(.)862
b(Ha)-36 b(ving)529 b(a)f(data)g(structure)e(with)268
64264 y(time)433 b(complexit)-36 b(y)435 b(not)e(dep)36
b(endend)432 b(on)h Ff(n)p Fp(,)i(mak)-36 b(es)434 b(it)f(v)-36
b(ery)435 b(attractiv)-36 b(e)434 b(for)g(large)g(data)g(sets.)1568
65869 y(Span)648 b Ff(s)g Fp(also)h(determines)f(the)g(space)g
(consumption)f(of)j(the)d(tree.)1223 b(A)648 b(no)36
b(de)648 b(with)g(span)g Ff(s)268 67474 y Fp(requires)388
b(2)5757 66992 y Fd(s)6635 67474 y Fp(p)36 b(oin)-36
b(ters.)563 b(The)388 b(tries)g(in)g(Figure)g(1)g(require)g(a)g(total)h
(of)f(240)p Ff(;)221 b Fp(224)p Ff(;)g Fp(384)393 b(and)387
b(2048)i(b)-36 b(ytes)p 0 TeXcolorgray 0 TeXcolorgray
24746 75760 a(2)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 268 1124 a Fp(resp)36 b(ectiv)-36 b(ely)-108
b(,)485 b(for)474 b(the)f(b)36 b(o)g(ok)-36 b(eeping)475
b(of)f(c)-36 b(hild)474 b(no)36 b(des,)484 b(assuming)473
b(64-bit)h(p)36 b(oin)-36 b(ters.)699 b(An)473 b(apparen)-36
b(t)268 2729 y(trade)433 b(o\013)h(exists)g(b)36 b(et)-36
b(w)g(een)433 b(tree)g(heigh)-36 b(t)433 b(v)-36 b(ersus)434
b(space)f(e\016ciency)h(that)g(dep)36 b(ends)432 b(on)h
Ff(s)p Fp(.)p 0 TeXcolorgray 0 TeXcolorgray 374 4173
15586 45 v 373 21884 45 17712 v 9003 6899 a

 9003 6899
a 9003 6899 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003
6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 -27.58469 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003 6899
a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -21.89972 -55.16937 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003
6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -82.75406 ] concat

 pgfs


 9003 6899 a

 9003 6899
a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -110.33875 ] concat

 pgfs


 9003 6899 a

 9003
6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -82.75406 ] concat

 pgfs


 9003 6899
a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -110.33875 ] concat

 pgfs


 9003
6899 a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003 6899
a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -55.16937 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899 a


 pgfr

 restore

 pgfc


 9003
6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -82.75406 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003 6899
a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -110.33875 ] concat

 pgfs


 9003 6899 a

 9003 6899 a 9003 6899 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 9003
6899 a


 pgfr

 restore

 pgfc


 9003 6899 a


 pgfr

 restore

 0.0 -4.89557 moveto

 0.0 -22.68912 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 -17.00255 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(01)9003 6899 y


 pgfr

 restore

 restore

 -3.04979 -31.42615 moveto

 -18.84985 -51.32791 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -24.43243 -44.58725 ] concat

 pgfs



 0 setgray
 9003
6899 a Fb(00)9003 6899 y


 pgfr

 restore

 restore

 -24.25128 -59.47696 moveto

 -34.60641 -78.44647 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -42.91147 -72.17194 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(00)9003 6899
y


 pgfr

 restore

 restore

 -36.95798 -87.64963 moveto

 -36.95798 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -50.4406 -99.75662 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(11)9003 6899 y


 pgfr

 restore

 restore

 -19.54816 -59.47696 moveto

 -9.19304 -78.44647 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -10.85078 -72.17194 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(01)9003
6899 y


 pgfr

 restore

 restore

 -6.84148 -87.64963 moveto

 -6.84148 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -3.32166 -99.75662 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(10)9003 6899 y


 pgfr

 restore

 restore

 3.04979 -31.42615 moveto

 18.84984 -51.32791 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 14.46964 -44.58725 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(10)9003
6899 y


 pgfr

 restore

 restore

 21.8997 -60.06494 moveto

 21.8997 -77.85849 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.41953 -72.17194 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(01)9003 6899 y


 pgfr

 restore

 restore

 21.8997 -87.64963 moveto

 21.8997 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.41953 -99.75662 ] concat

 pgfs



 0 setgray
 9003 6899 a Fb(10)9003
6899 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 15915 21884 45 17712 v 374 21928 15586 45 v 6074
23842 a Ff(s)369 b Fp(=)g(2)p 0 TeXcolorgray 0 TeXcolorgray
17278 4173 V 17278 21884 45 17712 v 25489 9964 a

 25489
9964 a 25489 9964 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 25489 9964 a

 25489 9964 a 25489 9964
a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964 a


 pgfr

 restore

 pgfc


 25489 9964 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -21.89972 -27.58469 ] concat

 pgfs


 25489 9964 a

 25489 9964 a
25489 9964 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964 a


 pgfr

 restore

 pgfc


 25489 9964 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -55.16937 ] concat

 pgfs


 25489 9964 a

 25489
9964 a 25489 9964 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964 a


 pgfr

 restore

 pgfc


 25489 9964 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -55.16937 ] concat

 pgfs


 25489 9964
a

 25489 9964 a 25489 9964 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964 a


 pgfr

 restore

 pgfc


 25489 9964 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -27.58469 ] concat

 pgfs



25489 9964 a

 25489 9964 a 25489 9964 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964 a


 pgfr

 restore

 pgfc


 25489
9964 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -55.16937 ] concat

 pgfs


 25489 9964 a

 25489 9964 a 25489 9964 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 25489 9964
a


 pgfr

 restore

 pgfc


 25489 9964 a


 pgfr

 restore

 -3.04979 -3.84146 moveto

 -18.84985 -23.74323 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -34.39523 -17.00255 ] concat

 pgfs



 0 setgray
 25489 9964 a Fb(0100)25489 9964 y


 pgfr

 restore

 restore

 -24.25128 -31.89227 moveto

 -34.60641 -50.86179 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -52.87427 -44.58725 ] concat

 pgfs



 0 setgray
 25489
9964 a Fb(0011)25489 9964 y


 pgfr

 restore

 restore

 -19.54816 -31.89227 moveto

 -9.19304 -50.86179 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -10.85078 -44.58725 ] concat

 pgfs



 0 setgray
 25489 9964 a Fb(0110)25489
9964 y


 pgfr

 restore

 restore

 3.04979 -3.84146 moveto

 18.84984 -23.74323 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 14.46964 -17.00255 ] concat

 pgfs



 0 setgray
 25489 9964 a Fb(0110)25489 9964 y


 pgfr

 restore

 restore

 21.8997 -32.48026 moveto

 21.8997 -50.2738 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.41953 -44.58725 ] concat

 pgfs



 0 setgray
 25489 9964 a
Fb(0100)25489 9964 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 32820 21884 45 17712 v 17278 21928
15586 45 v 22979 23842 a Ff(s)f Fp(=)h(4)p 0 TeXcolorgray
0 TeXcolorgray 34182 4173 V 34182 21884 45 17712 v 41975
11496 a

 41975 11496 a 41975 11496 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 41975 11496 a

 41975
11496 a 41975 11496 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 41975 11496 a


 pgfr

 restore

 pgfc


 41975 11496 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -43.80289 -27.58469 ] concat

 pgfs


 41975
11496 a

 41975 11496 a 41975 11496 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 41975 11496 a


 pgfr

 restore

 pgfc


 41975
11496 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -0.00345 -27.58469 ] concat

 pgfs


 41975 11496 a

 41975 11496 a 41975 11496 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 41975
11496 a


 pgfr

 restore

 pgfc


 41975 11496 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 43.80289 -27.58469 ] concat

 pgfs


 41975 11496 a

 41975 11496 a 41975
11496 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 41975 11496 a


 pgfr

 restore

 pgfc


 41975 11496 a


 pgfr

 restore

 -4.16072 -2.6201 moveto

 -39.64215 -24.96457 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -59.29515 -16.36052 ] concat

 pgfs



 0 setgray
 41975 11496 a Fl(01000011)41975
11496 y


 pgfr

 restore

 restore

 -0.0005 -4.89557 moveto

 -0.00293 -22.68912 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -16.93866 -16.36052 ] concat

 pgfs



 0 setgray
 41975 11496 a Fl(01000110)41975 11496 y


 pgfr

 restore

 restore

 4.16072 -2.6201 moveto

 39.64215 -24.96457 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.42126 -16.36052 ] concat

 pgfs



 0 setgray
 41975
11496 a Fl(01100100)41975 11496 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 49724 21884 45 17712
v 34182 21928 15586 45 v 39883 23842 a Ff(s)g Fp(=)f(8)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
268 27401 a(Figure)433 b(1)p 0 TeXcolorgray 0 TeXcolorgray(:)p
0 TeXcolorgray 434 w(T)-108 b(ries)896 b(with)g(span)f
Ff(s)1156 b Fp(=)f(2)p Ff(;)221 b Fp(4)p Ff(;)g Fp(8)898
b(storing)e(k)-36 b(eys)897 b(\\01000011",)1014 b(\\01000110")900
b(and)5813 29006 y(\\01100100".)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 268 34173 a Fg(2.2)876
b(V)-49 b(ertical)586 b(\(Pre\014x\))f(Comp)-49 b(ression)p
0 TeXcolorgray 268 36636 a Fp(When)358 b(storing)h(long)g(k)-36
b(eys,)375 b(c)-36 b(hains)358 b(start)h(to)g(form)g(where)f(eac)-36
b(h)359 b(no)36 b(de)359 b(only)g(has)g(a)g(single)g(c)-36
b(hild.)553 b(As)268 38241 y(a)459 b(consequence,)466
b(w)-36 b(e)459 b(w)-36 b(aste)459 b(a)h(lot)f(of)h(space)f(on)g
(structural)f(information.)655 b(Morrison)459 b(in)-36
b(tro)36 b(duced)268 39846 y Fe(Patricia)622 b Fp([3].)849
b(P)-36 b(atricia)525 b(is)f(a)g(space-optimized)f(trie)g(in)h(whic)-36
b(h)523 b(eac)-36 b(h)524 b(no)36 b(de)523 b(with)h(no)g(siblings)g(is)
268 41451 y(merged)302 b(with)g(its)g(paren)-36 b(t,)328
b(i.e.)304 b(inner)d(no)36 b(des)302 b(are)h(only)g(created)f(if)h
(they)f(are)g(required)g(to)h(distinguish)268 43056 y(at)451
b(least)g(t)-36 b(w)g(o)452 b(leaf)g(no)36 b(des.)630
b(Doing)452 b(so,)k(w)-36 b(e)451 b(eliminate)h(c)-36
b(hains)451 b(caused)f(b)-36 b(y)451 b(long)h(k)-36 b(eys)452
b(whic)-36 b(h)450 b(mak)-36 b(e)268 44661 y(tries)397
b(space-ine\016cien)-36 b(t.)566 b(Although)397 b(Morrison's)h(P)-36
b(atricia)399 b(tree)e(is)h(a)g(bit)-36 b(wise)398 b(trie,)405
b(i.e.)399 b(has)e(a)h(span)268 46266 y Ff(s)387 b Fp(=)h(1,)448
b(the)c(principle)g(can)h(b)36 b(e)444 b(applied)h(to)f(tries)h(with)g
(an)-36 b(y)445 b(span.)611 b(W)-108 b(e)444 b(refer)h(to)g(this)f
(heuristic)h(as)268 47871 y Fe(vertic)-66 b(al)463 b(c)-66
b(ompr)g(ession)p Fp(.)1568 49476 y(V)-108 b(ertical)502
b(compression)f(is)h(implemen)-36 b(ted)500 b(b)-36 b(y)501
b(storing)h(an)f(additional)h(v)-72 b(ariable,)519 b(called)502
b Fe(pr)-66 b(e\014x)p Fp(,)268 51082 y(inside)466 b(eac)-36
b(h)466 b(no)36 b(de.)675 b(This)467 b(v)-72 b(ariable)467
b(stores)f(the)g(concatenation)g(of)h(partial)f(k)-36
b(eys)467 b(of)g(descendan)-36 b(ts)268 52687 y(that)431
b(w)-36 b(ere)433 b(eliminated)f(b)36 b(ecause)433 b(they)f(had)f(no)i
(siblings.)578 b(Figure)432 b(2)h(depicts)e(t)-36 b(w)g(o)433
b(tries,)g(one)f(with)268 54292 y(and)541 b(one)h(without)g(v)-36
b(ertical)544 b(compression.)904 b(W)-108 b(e)542 b(observ)-36
b(e)542 b(that)g(no)36 b(des)542 b(with)g(no)g(siblings,)570
b(color)268 55897 y(co)36 b(ded)396 b(red,)404 b(are)397
b(eliminated)g(and)f(their)h(partial)g(k)-36 b(ey)398
b(is)f(app)36 b(ended)395 b(to)i(the)f(paren)-36 b(t's)396
b(pre\014x.)566 b(With)268 57502 y(ev)-36 b(en)433 b(longer)h(k)-36
b(eys,)435 b(the)e(results)g(of)i(v)-36 b(ertical)434
b(compression)g(are)g(ev)-36 b(en)433 b(more)h(astonishing.)1568
59107 y(T)-108 b(all)598 b(trees)f(ma)-36 b(y)598 b(b)36
b(ecome)597 b(v)-36 b(ery)598 b(compact,)638 b(and)597
b(so)g(not)g(only)h(do)f(w)-36 b(e)597 b(sa)-36 b(v)g(e)598
b(space)f(that)f(w)-36 b(as)268 60712 y(otherwise)584
b(w)-36 b(asted)583 b(on)h(structural)f(inforation,)622
b(w)-36 b(e)584 b(also)g(are)g(no)-36 b(w)584 b(able)f(to)h(tra)-36
b(v)g(erse)584 b(the)f(data)268 62317 y(structure)432
b(ev)-36 b(en)434 b(faster)g(since)f(the)g(heigh)-36
b(t)433 b(decreased.)p 0 TeXcolorgray 268 66075 a Fg(2.3)876
b(Ho)-49 b(rizontal)586 b(Comp)-49 b(ression)587 b(\(Adaptive)e(No)49
b(des\))p 0 TeXcolorgray 268 68537 a Fp(With)417 b(large)g(v)-72
b(alues)417 b(of)h(span)e Ff(s)p Fp(,)k(w)-36 b(e)418
b(sacri\014ce)f(an)f(excessiv)-36 b(e)419 b(amoun)-36
b(t)416 b(of)h(space)g(for)h(a)f(smaller)g(tree)268 70143
y(heigh)-36 b(t.)866 b(Space)529 b(is)h(allo)36 b(cated)531
b(for)g(p)36 b(oin)-36 b(ters)529 b(whic)-36 b(h)529
b(k)-36 b(eep)530 b(references)g(of)g(c)-36 b(hild)529
b(no)36 b(des.)867 b(In)529 b(order)p 0 TeXcolorgray
0 TeXcolorgray 24746 75760 a(3)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 6393 -205 17800 45 v 6393 17507 45 17712
v 16129 2521 a

 16129 2521 a 16129 2521 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 16129 2521 a


16129 2521 a 16129 2521 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 -27.58469 ] concat

 pgfs


 16129
2521 a

 16129 2521 a 16129 2521 a


 pgfo

 save
 1 0 0 TeXcolorrgb
 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr
 0
TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 1 0 0 setrgbcolor
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -21.89972 -55.16937 ] concat

 pgfs


 16129 2521 a

 16129
2521 a 16129 2521 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -82.75406 ] concat

 pgfs


 16129 2521
a

 16129 2521 a 16129 2521 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -110.33875 ] concat

 pgfs



16129 2521 a

 16129 2521 a 16129 2521 a


 pgfo

 save
 1 0 0 TeXcolorrgb
 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 1 0 0 setrgbcolor
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -82.75406 ] concat

 pgfs


 16129 2521 a


16129 2521 a 16129 2521 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -110.33875 ] concat

 pgfs


 16129
2521 a

 16129 2521 a 16129 2521 a


 pgfo

 save
 1 0 0 TeXcolorrgb
 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr
 0
TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 1 0 0 setrgbcolor
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -55.16937 ] concat

 pgfs


 16129 2521 a

 16129
2521 a 16129 2521 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -82.75406 ] concat

 pgfs


 16129 2521
a

 16129 2521 a 16129 2521 a


 pgfo

 save
 1 0 0 TeXcolorrgb
 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr
 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 1 0 0 setrgbcolor

16129 2521 a


 pgfr

 restore

 pgfc


 16129 2521 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -110.33875 ] concat

 pgfs


 16129 2521 a

 16129 2521 a 16129
2521 a


 pgfo

 save
 1 0 0 TeXcolorrgb
 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr
 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 1 0 0 setrgbcolor
 16129 2521 a


 pgfr

 restore

 pgfc



16129 2521 a


 pgfr

 restore

 0.0 -4.89557 moveto

 0.0 -22.68912 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 -17.00255 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(01)16129 2521 y


 pgfr

 restore

 restore

 -3.04979 -31.42615 moveto

 -18.84985 -51.32791 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -24.43243 -44.58725 ] concat

 pgfs



 0 setgray
 16129 2521
a Fb(00)16129 2521 y


 pgfr

 restore

 restore

 -24.25128 -59.47696 moveto

 -34.60641 -78.44647 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -42.91147 -72.17194 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(00)16129 2521 y


 pgfr

 restore

 restore

 -36.95798 -87.64963 moveto

 -36.95798 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -50.4406 -99.75662 ] concat

 pgfs



 0 setgray

16129 2521 a Fb(11)16129 2521 y


 pgfr

 restore

 restore

 -19.54816 -59.47696 moveto

 -9.19304 -78.44647 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -10.85078 -72.17194 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(01)16129
2521 y


 pgfr

 restore

 restore

 -6.84148 -87.64963 moveto

 -6.84148 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -3.32166 -99.75662 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(10)16129 2521 y


 pgfr

 restore

 restore

 3.04979 -31.42615 moveto

 18.84984 -51.32791 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 14.46964 -44.58725 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(10)16129
2521 y


 pgfr

 restore

 restore

 21.8997 -60.06494 moveto

 21.8997 -77.85849 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.41953 -72.17194 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(01)16129 2521 y


 pgfr

 restore

 restore

 21.8997 -87.64963 moveto

 21.8997 -105.44318 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 25.41953 -99.75662 ] concat

 pgfs



 0 setgray
 16129 2521 a Fb(10)16129
2521 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 24148 17507 45 17712 v 6393 17551 17800 45 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
27524 -205 V 27524 17507 45 17712 v 35740 5586 a

 35740
5586 a 35740 5586 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 35740 5586 a

 35740 5586 a 35740 5586
a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 35740 5586 a


 pgfr

 restore

 pgfc


 35740 5586 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -21.89972 -27.58469 ] concat

 pgfs


 35740 5586 a

 35740 5586 a
35740 5586 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 35740 5586 a


 pgfr

 restore

 pgfc


 35740 5586 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -36.95798 -55.16937 ] concat

 pgfs


 35740 5586 a

 35740
5586 a 35740 5586 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 35740 5586 a


 pgfr

 restore

 pgfc


 35740 5586 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 -6.84148 -55.16937 ] concat

 pgfs


 35740 5586
a

 35740 5586 a 35740 5586 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 35740 5586 a


 pgfr

 restore

 pgfc


 35740 5586 a


 pgfr

 restore

 save

 [1.0 0.0 0.0 1.0 21.8997 -27.58469 ] concat

 pgfs



35740 5586 a

 35740 5586 a 35740 5586 a


 pgfo

 4.6963 0.0 moveto

 4.6963 2.59372 2.59372 4.6963 0.0 4.6963 curveto

 -2.59372 4.6963 -4.6963 2.59372 -4.6963 0.0 curveto

 -4.6963 -2.59372 -2.59372 -4.6963 0.0 -4.6963 curveto

 2.59372 -4.6963 4.6963 -2.59372 4.6963 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs



 0 setgray
 35740 5586 a


 pgfr

 restore

 pgfc


 35740
5586 a


 pgfr

 restore

 -3.04979 -3.84146 moveto

 -18.84985 -23.74323 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -24.43243 -17.00255 ] concat

 pgfs



 0 setgray
 35740 5586 a Fb(00)35740 5586 y


 pgfr

 restore

 restore

 -24.25128 -31.89227 moveto

 -34.60641 -50.86179 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -42.91147 -44.58725 ] concat

 pgfs



 0 setgray
 35740 5586 a Fb(00)35740
5586 y


 pgfr

 restore

 restore

 -19.54816 -31.89227 moveto

 -9.19304 -50.86179 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -10.85078 -44.58725 ] concat

 pgfs



 0 setgray
 35740 5586 a Fb(10)35740 5586 y


 pgfr

 restore

 restore

 3.04979 -3.84146 moveto

 18.84984 -23.74323 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 14.46964 -17.00255 ] concat

 pgfs



 0 setgray
 35740 5586 a Fb(10)35740
5586 y


 pgfr

 restore

 restore

 save
 0.5 TeXcolorgray
 4.89557 0.0 moveto

 9.87695 0.0 lineto

 pgfstr

 save
 0.5 TeXcolorgray
 save
 0.5 TeXcolorgray
0.5 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 13.39676 -3.2102 ] concat

 pgfs



 0.5 setgray
 35740 5586 a Fb(01)35740 5586 y


 pgfr

 restore
 0.5
TeXcolorgray
 restore
 0 TeXcolorgray
 restore

 save
 0.5 TeXcolorgray
 -32.06241 -55.16937 moveto

 -27.08102 -55.16937 lineto

 pgfstr

 save
 0.5 TeXcolorgray
 save

0.5 TeXcolorgray 0.5 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -23.5612 -58.3796 ] concat

 pgfs



 0.5 setgray
 35740 5586 a Fb(11)35740
5586 y


 pgfr

 restore
 0.5 TeXcolorgray
 restore
 0 TeXcolorgray
 restore

 save
 0.5 TeXcolorgray
 -1.9459 -55.16937 moveto

 3.03546 -55.16937 lineto

 pgfstr

 save

0.5 TeXcolorgray
 save
 0.5 TeXcolorgray 0.5 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 6.55528 -58.3796 ] concat

 pgfs



 0.5 setgray
 35740
5586 a Fb(01)35740 5586 y


 pgfr

 restore
 0.5 TeXcolorgray
 restore
 0 TeXcolorgray
 restore

 save

0.5 TeXcolorgray
 26.79527 -27.58469 moveto

 31.77666 -27.58469 lineto

 pgfstr

 save
 0.5 TeXcolorgray
 save
 0.5 TeXcolorgray 0.5
TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 35.29648 -30.79489 ] concat

 pgfs



 0.5 setgray
 35740 5586 a Fb(0110)35740 5586 y


 pgfr

 restore
 0.5 TeXcolorgray
 restore

0 TeXcolorgray
 restore

 restore

 newpath

 restore

 pgfc


 45279 17507 45 17712 v 27524 17551 17800
45 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
268 22837 a Fp(Figure)433 b(2)p 0 TeXcolorgray 0 TeXcolorgray(:)p
0 TeXcolorgray 434 w(T)-108 b(ries)478 b(with)f(span)g
Ff(s)443 b Fp(=)h(2)477 b(storing)h(k)-36 b(eys)478 b(\\01000011",)492
b(\\01000110")481 b(and)476 b(\\01100100".)5813 24442
y(The)528 b(trie)g(on)f(the)g(righ)-36 b(t)527 b(incorp)36
b(orates)528 b(v)-36 b(ertical)529 b(compression.)860
b(Red)528 b(no)36 b(des)527 b(indicate)5813 26047 y(no)36
b(des)360 b(whic)-36 b(h)360 b(get)h(eliminated)f(under)f(v)-36
b(ertical)361 b(compression.)554 b(Gra)-36 b(y)360 b(strings)g
(represen)-36 b(t)5813 27652 y(the)433 b(v)-72 b(alue)434
b(of)h(the)e(\\pre\014x")h(prop)36 b(ert)-36 b(y)-108
b(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 268
31676 a(to)466 b(reduce)f(the)g(space)h(needed)f(to)h(k)-36
b(eep)465 b(suc)-36 b(h)465 b(references,)475 b(Leis)465
b(et)h(al.)h(prop)36 b(ose)465 b Fe(A)-66 b(daptive)493
b(No)-66 b(des)268 33281 y Fp([2],)526 b(whic)-36 b(h)506
b(mak)-36 b(e)507 b(use)g(of)g(dynamic)g(data)g(structures)e(instead)h
(of)i(static)f(arra)-36 b(ys)507 b(for)g(c)-36 b(hild)506
b(no)36 b(de)268 34886 y(b)g(o)g(okk)-36 b(eeping.)950
b(Doing)558 b(so,)588 b(w)-36 b(e)558 b(allo)36 b(cate)558
b(a)g(minimal)f(amoun)-36 b(t)557 b(of)h(space)f(when)f(the)h(n)-36
b(um)g(b)36 b(er)555 b(of)268 36491 y(c)-36 b(hildren)426
b(is)h(small)h(and)e(add)h(more)g(space)g(if)h(required,)g(i.e.)g(more)
f(c)-36 b(hildren)426 b(are)h(added.)576 b(W)-108 b(e)427
b(refer)268 38096 y(to)433 b(this)h(heuristic)f(as)h
Fe(horizontal)465 b(c)-66 b(ompr)g(ession)p Fp(.)24587
37614 y Fl(1)1579 46571 y

 1579 46571 a 1579 46571 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 0.5 setgray

 0.19925 pgfw

 0.0 0.0 moveto

 0.0 0.0 moveto

 113.38724 0.0 lineto

 0.0 28.3468 moveto

 113.38724 28.3468 lineto

 0.0 56.68365 moveto

 113.38724 56.68365 lineto

 0.0 0.0 moveto

 0.0 56.69362 lineto

 28.3468 0.0 moveto

 28.3468 56.69362 lineto

 56.69362 0.0 moveto

 56.69362 56.69362 lineto

 85.04042 0.0 moveto

 85.04042 56.69362 lineto

 113.37727 0.0 moveto

 113.37727 56.69362 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 11.24686 61.34547 ] concat

 pgfs



 0 setgray
 1579
46571 a Fp(0)1579 46571 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 8.32033 38.66794 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(65)1579 46571
y


 pgfr

 restore

 restore

 save

 14.72523 14.17339 moveto

 14.72523 14.47816 14.47816 14.72523 14.17339 14.72523 curveto

 13.86862 14.72523 13.62154 14.47816 13.62154 14.17339 curveto

 13.62154 13.86862 13.86862 13.62154 14.17339 13.62154 curveto

 14.47816 13.62154 14.72523 13.86862 14.72523 14.17339 curveto

 closepath

 14.17339 14.17339 moveto

 pgfstr

 save

 [0.1 0.0 0.0 0.1 14.17339 14.17339 ] concat

 pgfs



 0 setgray
 1579 46571 a


 pgfr

 restore

 restore

 save

 14.17339 -12.56311 moveto

 7.8691 -23.48244 lineto

 20.47768 -23.48244 lineto

 closepath

 pgfstr

 save

 [1.0 0.0 0.0 1.0 14.03166 -22.41637 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(a)1579 46571 y


 pgfr

 restore

 restore

 14.17339 13.60161 moveto

 14.17339 -11.70557 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 14.17339 -11.70557 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 39.59367 61.34547 ] concat

 pgfs



 0 setgray
 1579 46571
a Fp(1)1579 46571 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 36.66713 38.66794 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(82)1579 46571 y


 pgfr

 restore

 restore

 save

 43.07205 14.17339 moveto

 43.07205 14.47816 42.82497 14.72523 42.5202 14.72523 curveto

 42.21542 14.72523 41.96835 14.47816 41.96835 14.17339 curveto

 41.96835 13.86862 42.21542 13.62154 42.5202 13.62154 curveto

 42.82497 13.62154 43.07205 13.86862 43.07205 14.17339 curveto

 closepath

 42.5202 14.17339 moveto

 pgfstr

 save

 [0.1 0.0 0.0 0.1 42.5202 14.17339 ] concat

 pgfs



 0 setgray
 1579
46571 a


 pgfr

 restore

 restore

 save

 42.5202 -8.10144 moveto

 32.35199 -25.71327 lineto

 52.6884 -25.71327 lineto

 closepath

 pgfstr

 save

 [1.0 0.0 0.0 1.0 42.37848 -23.9938 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(b)1579 46571 y


 pgfr

 restore

 restore

 42.5202 13.60161 moveto

 42.5202 -7.24416 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 42.5202 -7.24416 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 67.94048 61.34547 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(2)1579
46571 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 65.01395 38.66794 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(84)1579 46571 y


 pgfr

 restore

 restore

 save

 71.41885 14.17339 moveto

 71.41885 14.47816 71.17178 14.72523 70.867 14.72523 curveto

 70.56224 14.72523 70.31516 14.47816 70.31516 14.17339 curveto

 70.31516 13.86862 70.56224 13.62154 70.867 13.62154 curveto

 71.17178 13.62154 71.41885 13.86862 71.41885 14.17339 curveto

 closepath

 70.867 14.17339 moveto

 pgfstr

 save

 [0.1 0.0 0.0 0.1 70.867 14.17339 ] concat

 pgfs



 0 setgray
 1579 46571 a


 pgfr

 restore

 restore

 save

 70.867 -12.56311 moveto

 64.56271 -23.48244 lineto

 77.1713 -23.48244 lineto

 closepath

 pgfstr

 save

 [1.0 0.0 0.0 1.0 70.72528 -22.41637 ] concat

 pgfs



 0 setgray

1579 46571 a Fp(c)1579 46571 y


 pgfr

 restore

 restore

 70.867 13.60161 moveto

 70.867 -11.70557 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 70.867 -11.70557 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 96.2873 61.34547 ] concat

 pgfs



 0 setgray
 1579 46571 a Fp(3)1579
46571 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 268 68923 19843 45 v 878 69739
a Fa(1)1375 70141 y Fb(The)369 b(authors)h(refer)e(to)i(this)g(tec)-31
b(hnique)370 b(as)f(adaptiv)-31 b(e)371 b(no)31 b(des.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 24746 75760
a Fp(4)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 268 1124 a Fi(References)p
0 TeXcolorgray 0 TeXcolorgray 268 4044 a Fp([1])p 0 TeXcolorgray
651 w(E.)434 b(F)-108 b(redkin.)576 b(T)-108 b(rie)434
b(memory)-108 b(.)p 17327 4421 9563 45 v 577 w(Comm)-36
b(unications)p 26837 4421 487 45 v 27271 4421 1102 45
v 436 w(of)p 28320 4421 487 45 v 28754 4421 1860 45 v
432 w(the)p 30561 4421 487 45 v 30995 4421 3124 45 v
433 w(A)g(CM)t(,)430 b(3\(9\):490{499,)437 b(1960.)p
0 TeXcolorgray 268 6756 a([2])p 0 TeXcolorgray 651 w(V.)556
b(Leis,)587 b(A.)556 b(Kemp)36 b(er,)587 b(and)555 b(T.)i(Neumann.)940
b(The)556 b(adaptiv)-36 b(e)557 b(radix)f(tree:)823 b(Artful)556
b(indexing)2291 8361 y(for)485 b(main-memory)f(databases.)727
b(In)p 20896 8738 2655 45 v 484 w(2013)p 23498 8738 538
45 v 23983 8738 3178 45 v 485 w(IEEE)p 27108 8738 538
45 v 27593 8738 2583 45 v 484 w(29th)p 30123 8738 538
45 v 30608 8738 7424 45 v 484 w(In)-36 b(ternational)p
37979 8738 538 45 v 38464 8738 6304 45 v 484 w(Conference)p
44715 8738 538 45 v 45200 8738 1427 45 v 484 w(on)p 46574
8738 538 45 v 47059 8738 2854 45 v 484 w(Data)p 2264
10343 6792 45 v 2291 9966 a(Engineering)p 9003 10343
487 45 v 9437 10343 4352 45 v 433 w(\(ICDE\))r(,)433
b(pages)h(38{49.)h(IEEE,)f(2013.)p 0 TeXcolorgray 268
12678 a([3])p 0 TeXcolorgray 651 w(D.)514 b(R.)f(Morrison.)814
b(P)-36 b(atricia|practical)515 b(algorithm)e(to)h(retriev)-36
b(e)513 b(information)h(co)36 b(ded)513 b(in)g(al-)2291
14284 y(phan)-36 b(umeric.)p 9814 14660 4335 45 v 576
w(Journal)p 14096 14660 487 45 v 14530 14660 1102 45
v 436 w(of)p 15579 14660 487 45 v 16013 14660 1860 45
v 432 w(the)p 17820 14660 487 45 v 18254 14660 3124 45
v 433 w(A)g(CM)p 21325 14660 487 45 v 21759 14660 4804
45 v 433 w(\(JA)g(CM\))6 b(,)428 b(15\(4\):514{534,)437
b(1968.)p 0 TeXcolorgray 0 TeXcolorgray 24746 75760 a(5)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
